{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rahulsharma/Desktop/Project/frontend/src/components/job_seeker/SettingsOverlay.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport _ from \"lodash\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nvar SettingsOverlay = function SettingsOverlay(_ref) {\n  var switchToScreen = _ref.switchToScreen,\n      settingModalVisible = _ref.settingModalVisible,\n      setSettingModalVisible = _ref.setSettingModalVisible;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      userData = _useState2[0],\n      setUserData = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      jobSeekerData = _useState4[0],\n      setJobSeekerData = _useState4[1];\n\n  function backPressed() {\n    Alert.alert(\"Exit App\", \"Do you want to exit?\", [{\n      text: \"No\",\n      onPress: function onPress() {\n        return console.log(\"Cancel Pressed\");\n      },\n      style: \"cancel\"\n    }, {\n      text: \"Yes\",\n      onPress: function onPress() {\n        try {\n          AsyncStorage.removeItem(\"userData\");\n          BackHandler.exitApp();\n        } catch (e) {}\n      }\n    }], {\n      cancelable: false\n    });\n    return true;\n  }\n\n  useEffect(function () {\n    try {\n      AsyncStorage.getItem(\"jobSeekerLoginData\").then(function (data) {\n        var _JSON$parse = JSON.parse(data),\n            user = _JSON$parse.user,\n            login = _JSON$parse.login;\n\n        setUserData(login);\n        setJobSeekerData(user);\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n\n    return function () {};\n  }, []);\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: settingModalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      setSettingModalVisible(!settingModalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      setSettingModalVisible(false);\n      switchToScreen(\"JobSeekerProfile\", userData);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, React.createElement(AntDesign, {\n    name: \"user\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })), React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      setSettingModalVisible(false);\n      switchToScreen(\"ChangePassword\", userData);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, React.createElement(AntDesign, {\n    name: \"setting\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      console.log(\"Question clicked\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, React.createElement(AntDesign, {\n    name: \"question\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  })), React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      console.log(\"Books clicked\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, React.createElement(AntDesign, {\n    name: \"book\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      backPressed();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, React.createElement(AntDesign, {\n    name: \"logout\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flexDirection: \"column\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#388e3c\",\n    opacity: 0.8\n  },\n  modalView: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    marginVertical: 15,\n    elevation: 5\n  },\n  contBtn: {\n    backgroundColor: \"#ffffff\",\n    borderRadius: 35,\n    marginHorizontal: 20,\n    padding: 15,\n    opacity: 1,\n    elevation: 10\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  contactIcons: {\n    fontSize: 30\n  }\n});\nexport default SettingsOverlay;","map":{"version":3,"sources":["/Users/rahulsharma/Desktop/Project/frontend/src/components/job_seeker/SettingsOverlay.js"],"names":["React","useState","useEffect","_","AntDesign","AsyncStorage","SettingsOverlay","switchToScreen","settingModalVisible","setSettingModalVisible","userData","setUserData","jobSeekerData","setJobSeekerData","backPressed","Alert","alert","text","onPress","console","log","style","removeItem","BackHandler","exitApp","e","cancelable","getItem","then","data","JSON","parse","user","login","error","message","styles","centeredView","modalView","contBtn","event","stopPropagation","contactIcons","StyleSheet","create","flexDirection","flex","justifyContent","alignItems","backgroundColor","opacity","marginVertical","elevation","borderRadius","marginHorizontal","padding","textStyle","color","fontWeight","textAlign","modalText","marginBottom","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;;AASA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAIlB;AAAA,MAHJC,cAGI,QAHJA,cAGI;AAAA,MAFJC,mBAEI,QAFJA,mBAEI;AAAA,MADJC,sBACI,QADJA,sBACI;;AAAA,kBAC4BR,QAAQ,CAAC,EAAD,CADpC;AAAA;AAAA,MACGS,QADH;AAAA,MACaC,WADb;;AAAA,mBAEsCV,QAAQ,CAAC,EAAD,CAF9C;AAAA;AAAA,MAEGW,aAFH;AAAA,MAEkBC,gBAFlB;;AAIJ,WAASC,WAAT,GAAuB;AACrBC,IAAAA,KAAK,CAACC,KAAN,CACE,UADF,EAEE,sBAFF,EAGE,CACE;AACEC,MAAAA,IAAI,EAAE,IADR;AAEEC,MAAAA,OAAO,EAAE;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AAAA,OAFX;AAGEC,MAAAA,KAAK,EAAE;AAHT,KADF,EAME;AACEJ,MAAAA,IAAI,EAAE,KADR;AAEEC,MAAAA,OAAO,EAAE,mBAAM;AACb,YAAI;AACFb,UAAAA,YAAY,CAACiB,UAAb,CAAwB,UAAxB;AACAC,UAAAA,WAAW,CAACC,OAAZ;AACD,SAHD,CAGE,OAAOC,CAAP,EAAU,CAEX;AACF;AATH,KANF,CAHF,EAqBE;AAACC,MAAAA,UAAU,EAAE;AAAb,KArBF;AAuBA,WAAO,IAAP;AACD;;AAEDxB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI;AACFG,MAAAA,YAAY,CAACsB,OAAb,CAAqB,oBAArB,EAA2CC,IAA3C,CAAgD,UAACC,IAAD,EAAU;AAAA,0BAClCC,IAAI,CAACC,KAAL,CAAWF,IAAX,CADkC;AAAA,YACjDG,IADiD,eACjDA,IADiD;AAAA,YAC3CC,KAD2C,eAC3CA,KAD2C;;AAExDtB,QAAAA,WAAW,CAACsB,KAAD,CAAX;AACApB,QAAAA,gBAAgB,CAACmB,IAAD,CAAhB;AACD,OAJD;AAKD,KAND,CAME,OAAOE,KAAP,EAAc;AAEdf,MAAAA,OAAO,CAACC,GAAR,CAAYc,KAAK,CAACC,OAAlB;AACD;;AAED,WAAO,YAAM,CAAE,CAAf;AACD,GAbQ,EAaN,EAbM,CAAT;AAeA,SACE,oBAAC,KAAD;AACE,IAAA,aAAa,EAAC,OADhB;AAEE,IAAA,WAAW,EAAE,IAFf;AAGE,IAAA,OAAO,EAAE3B,mBAHX;AAIE,IAAA,cAAc,EAAE,0BAAM;AACpBO,MAAAA,KAAK,CAACC,KAAN,CAAY,wBAAZ;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEoB,MAAM,CAACC,YADhB;AAEE,IAAA,yBAAyB,EAAE,qCAAM;AAC/B5B,MAAAA,sBAAsB,CAAC,CAACD,mBAAF,CAAtB;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4B,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AACE,IAAA,KAAK,EAAEF,MAAM,CAACG,OADhB;AAEE,IAAA,OAAO,EAAE,iBAACC,KAAD,EAAW;AAClBA,MAAAA,KAAK,CAACC,eAAN;AACAhC,MAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAF,MAAAA,cAAc,CAAC,kBAAD,EAAqBG,QAArB,CAAd;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,KAAK,EAAE0B,MAAM,CAACM,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAWE,oBAAC,kBAAD;AACE,IAAA,KAAK,EAAEN,MAAM,CAACG,OADhB;AAEE,IAAA,OAAO,EAAE,iBAACC,KAAD,EAAW;AAClBA,MAAAA,KAAK,CAACC,eAAN;AACAhC,MAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAF,MAAAA,cAAc,CAAC,gBAAD,EAAmBG,QAAnB,CAAd;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,SAAhB;AAA0B,IAAA,KAAK,EAAE0B,MAAM,CAACM,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAXF,CANF,EA4BE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AACE,IAAA,KAAK,EAAEF,MAAM,CAACG,OADhB;AAEE,IAAA,OAAO,EAAE,iBAACC,KAAD,EAAW;AAClBA,MAAAA,KAAK,CAACC,eAAN;AACAtB,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAEgB,MAAM,CAACM,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAUE,oBAAC,kBAAD;AACE,IAAA,KAAK,EAAEN,MAAM,CAACG,OADhB;AAEE,IAAA,OAAO,EAAE,iBAACC,KAAD,EAAW;AAClBA,MAAAA,KAAK,CAACC,eAAN;AACAtB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,KAAK,EAAEgB,MAAM,CAACM,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAVF,CA5BF,EAgDE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AACE,IAAA,KAAK,EAAEF,MAAM,CAACG,OADhB;AAEE,IAAA,OAAO,EAAE,iBAACC,KAAD,EAAW;AAClBA,MAAAA,KAAK,CAACC,eAAN;AACA3B,MAAAA,WAAW;AACZ,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,QAAhB;AAAyB,IAAA,KAAK,EAAEsB,MAAM,CAACM,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CAhDF,CARF,CADF;AAuED,CAzHD;;AA2HA,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,YAAY,EAAE;AACZQ,IAAAA,aAAa,EAAE,QADH;AAEZC,IAAAA,IAAI,EAAE,CAFM;AAGZC,IAAAA,cAAc,EAAE,QAHJ;AAIZC,IAAAA,UAAU,EAAE,QAJA;AAKZC,IAAAA,eAAe,EAAE,SALL;AAMZC,IAAAA,OAAO,EAAE;AANG,GADiB;AAS/BZ,EAAAA,SAAS,EAAE;AACTU,IAAAA,UAAU,EAAE,QADH;AAETH,IAAAA,aAAa,EAAE,KAFN;AAGTM,IAAAA,cAAc,EAAE,EAHP;AAITC,IAAAA,SAAS,EAAE;AAJF,GAToB;AAe/Bb,EAAAA,OAAO,EAAE;AACPU,IAAAA,eAAe,EAAE,SADV;AAEPI,IAAAA,YAAY,EAAE,EAFP;AAGPC,IAAAA,gBAAgB,EAAE,EAHX;AAIPC,IAAAA,OAAO,EAAE,EAJF;AAKPL,IAAAA,OAAO,EAAE,CALF;AAMPE,IAAAA,SAAS,EAAE;AANJ,GAfsB;AAuB/BI,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,OADE;AAETC,IAAAA,UAAU,EAAE,MAFH;AAGTC,IAAAA,SAAS,EAAE;AAHF,GAvBoB;AA4B/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,YAAY,EAAE,EADL;AAETF,IAAAA,SAAS,EAAE;AAFF,GA5BoB;AAgC/BjB,EAAAA,YAAY,EAAE;AACZoB,IAAAA,QAAQ,EAAE;AADE;AAhCiB,CAAlB,CAAf;AAqCA,eAAexD,eAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {\n  StyleSheet,\n  Modal,\n  TouchableHighlight,\n  View,\n  BackHandler,\n  Alert,\n} from \"react-native\";\nimport _ from \"lodash\";\nimport {AntDesign} from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nconst SettingsOverlay = ({\n  switchToScreen,\n  settingModalVisible,\n  setSettingModalVisible,\n}) => {\n  const [userData, setUserData] = useState({});\n  const [jobSeekerData, setJobSeekerData] = useState({});\n\n  function backPressed() {\n    Alert.alert(\n      \"Exit App\",\n      \"Do you want to exit?\",\n      [\n        {\n          text: \"No\",\n          onPress: () => console.log(\"Cancel Pressed\"),\n          style: \"cancel\",\n        },\n        {\n          text: \"Yes\",\n          onPress: () => {\n            try {\n              AsyncStorage.removeItem(\"userData\");\n              BackHandler.exitApp();\n            } catch (e) {\n              // remove error\n            }\n          },\n        },\n      ],\n      {cancelable: false}\n    );\n    return true;\n  }\n\n  useEffect(() => {\n    try {\n      AsyncStorage.getItem(\"jobSeekerLoginData\").then((data) => {\n        const {user, login} = JSON.parse(data);\n        setUserData(login);\n        setJobSeekerData(user);\n      });\n    } catch (error) {\n      // Error retrieving data\n      console.log(error.message);\n    }\n\n    return () => {};\n  }, []);\n\n  return (\n    <Modal\n      animationType=\"slide\"\n      transparent={true}\n      visible={settingModalVisible}\n      onRequestClose={() => {\n        Alert.alert(\"Modal has been closed.\");\n      }}\n    >\n      <View\n        style={styles.centeredView}\n        onStartShouldSetResponder={() => {\n          setSettingModalVisible(!settingModalVisible);\n        }}\n      >\n        <View style={styles.modalView}>\n          <TouchableHighlight\n            style={styles.contBtn}\n            onPress={(event) => {\n              event.stopPropagation();\n              setSettingModalVisible(false);\n              switchToScreen(\"JobSeekerProfile\", userData);\n            }}\n          >\n            <AntDesign name=\"user\" style={styles.contactIcons} />\n          </TouchableHighlight>\n          <TouchableHighlight\n            style={styles.contBtn}\n            onPress={(event) => {\n              event.stopPropagation();\n              setSettingModalVisible(false);\n              switchToScreen(\"ChangePassword\", userData);\n            }}\n          >\n            <AntDesign name=\"setting\" style={styles.contactIcons} />\n          </TouchableHighlight>\n        </View>\n        <View style={styles.modalView}>\n          <TouchableHighlight\n            style={styles.contBtn}\n            onPress={(event) => {\n              event.stopPropagation();\n              console.log(\"Question clicked\");\n            }}\n          >\n            <AntDesign name=\"question\" style={styles.contactIcons} />\n          </TouchableHighlight>\n          <TouchableHighlight\n            style={styles.contBtn}\n            onPress={(event) => {\n              event.stopPropagation();\n              console.log(\"Books clicked\");\n            }}\n          >\n            <AntDesign name=\"book\" style={styles.contactIcons} />\n          </TouchableHighlight>\n        </View>\n        <View style={styles.modalView}>\n          <TouchableHighlight\n            style={styles.contBtn}\n            onPress={(event) => {\n              event.stopPropagation();\n              backPressed();\n            }}\n          >\n            <AntDesign name=\"logout\" style={styles.contactIcons} />\n          </TouchableHighlight>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    flexDirection: \"column\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#388e3c\",\n    opacity: 0.8,\n  },\n  modalView: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    marginVertical: 15,\n    elevation: 5,\n  },\n  contBtn: {\n    backgroundColor: \"#ffffff\",\n    borderRadius: 35,\n    marginHorizontal: 20,\n    padding: 15,\n    opacity: 1,\n    elevation: 10,\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n  },\n  contactIcons: {\n    fontSize: 30,\n  },\n});\n\nexport default SettingsOverlay;\n"]},"metadata":{},"sourceType":"module"}