{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rahulsharma/Desktop/Project/frontend/src/containers/AdditionalInfo.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport _ from \"lodash\";\nimport CheckBox from \"@react-native-community/checkbox\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { baseUrl } from \"../utils/constants\";\nimport { Picker } from \"@react-native-community/picker\";\n\nvar world_cities = require(\"../../assets/jsonContent/world_cities.json\");\n\nvar AdditionalInfo = function (_React$Component) {\n  _inherits(AdditionalInfo, _React$Component);\n\n  var _super = _createSuper(AdditionalInfo);\n\n  function AdditionalInfo(props) {\n    var _this;\n\n    _classCallCheck(this, AdditionalInfo);\n\n    _this = _super.call(this, props);\n\n    _this.handleCity = function (event) {\n      var regex_name = /^[a-zA-Z ]*$/;\n\n      if (!_.isEmpty(event)) {\n        if (!regex_name.test(event)) {\n          _this.setState({\n            city_error: \"only Allow only character\"\n          });\n        } else {\n          _this.setState({\n            city: event\n          });\n\n          _this.setState({\n            city_error: null\n          });\n        }\n      } else {\n        _this.setState({\n          city_error: \"City is required\"\n        });\n      }\n    };\n\n    _this.handleSubmit = function () {\n      if (_this.state.city_error !== null) {\n        alert(\"Fill the Field.\");\n      } else {\n        _this.setState({\n          isLoading: true\n        });\n\n        fetch(baseUrl + \"api/employer/add-ctiy-services\", {\n          method: \"POST\",\n          mode: \"cors\",\n          cache: \"no-cache\",\n          credentials: \"same-origin\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          redirect: \"follow\",\n          referrerPolicy: \"no-referrer\",\n          body: JSON.stringify({\n            services: _this.state.services,\n            city: _this.state.city,\n            id: _this.props.navigation.getParam(\"id\")\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (response) {\n          console.log(response);\n\n          if (!response.success) {\n            throw new Error(response);\n          } else {\n            _this.props.navigation.navigate(\"UploadPic\", {\n              service_list: _this.state.serviceList,\n              id: _this.state.registeredUser.id,\n              registeredUser: _this.state.registeredUser\n            });\n          }\n        }).catch(function (err) {\n          _this.setState({\n            success: false,\n            err: err,\n            isLoading: false\n          });\n        });\n      }\n    };\n\n    _this.handlePress = function (val) {\n      var arr = _this.state.services;\n\n      var isChecked = _this.state.checkedItems.get(val.id);\n\n      console.log(isChecked);\n      !isChecked ? arr.push(val.id) : arr.pop(val.id);\n\n      _this.setState({\n        services: arr,\n        checkedItems: _this.state.checkedItems.set(val.id, !isChecked)\n      }, function () {\n        console.log(_this.state.services);\n      });\n    };\n\n    _this.state = {\n      city: \"\",\n      city_error: \"\",\n      services: [],\n      serviceList: [],\n      isLoading: false,\n      error: \"\",\n      cities: [],\n      success: true,\n      checkedItems: new Map()\n    };\n    return _this;\n  }\n\n  _createClass(AdditionalInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        cities: world_cities.filter(function (city) {\n          return city.country === \"Canada\";\n        }).sort(function (a, b) {\n          return a.city > b.city ? 1 : -1;\n        }),\n        registeredUser: this.props.navigation.state.params\n      });\n      this.setState({\n        isLoading: true\n      });\n      fetch(baseUrl + \"api/service/list\").then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        _this2.setState({\n          isLoading: false\n        });\n\n        if (!response.success) throw new Error(response);else {\n          response.result.map(function (key, index) {\n            _this2.setState({\n              checkedItems: _this2.state.checkedItems.set(key.id, false)\n            });\n          });\n\n          _this2.setState({\n            serviceList: response.result,\n            success: true\n          });\n        }\n      }).catch(function (err) {\n        _this2.setState({\n          isLoading: false,\n          success: true,\n          error: err\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(LinearGradient, {\n        colors: [\"#BA9ED1\", \"#765A8D\"],\n        style: styles.container,\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 0,\n          y: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.headingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }\n      }, \"Additional Information\")), React.createElement(View, {\n        style: styles.labelHeading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: styles.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.labelText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 33\n        }\n      }, \"Select Services\")), React.createElement(View, {\n        style: styles.MainContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.serviceList,\n        showsVerticalScrollIndicator: false,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            style: {\n              flex: 1,\n              flexDirection: \"column\",\n              margin: 1\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 41\n            }\n          }, React.createElement(View, {\n            style: styles.imageThumbnail,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 45\n            }\n          }, React.createElement(CheckBox, {\n            value: _this3.state.checkedItems.get(item.id),\n            onValueChange: function onValueChange() {\n              return _this3.handlePress(item);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 49\n            }\n          }), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 49\n            }\n          }, item.service_name)));\n        },\n        numColumns: 2,\n        keyExtractor: function keyExtractor(item, index) {\n          return index;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 33\n        }\n      }))), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: styles.rowContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.labelText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 33\n        }\n      }, \"City\"), React.createElement(View, {\n        style: styles.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 33\n        }\n      }, React.createElement(View, {\n        style: [styles.pickerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 37\n        }\n      }, React.createElement(Picker, {\n        selectedValue: this.state.city,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return _this3.handleCity(itemValue, \"city\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 41\n        }\n      }, this.state.cities.map(function (city) {\n        return React.createElement(Picker.Item, {\n          key: city.id,\n          label: city.city,\n          value: city.city,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 53\n          }\n        });\n      }))), this.state.city_error ? React.createElement(Text, {\n        style: styles.errorText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 41\n        }\n      }, this.state.city_error) : null))), React.createElement(View, {\n        style: styles.rowContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.updateBtn,\n        onPress: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: {\n          textTransform: \"uppercase\",\n          color: \"#ffffff\",\n          fontWeight: \"700\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 33\n        }\n      }, \"Submit\"))))));\n    }\n  }]);\n\n  return AdditionalInfo;\n}(React.Component);\n\nexport { AdditionalInfo as default };\nvar styles = StyleSheet.create({\n  nextBtnText: {\n    color: \"black\",\n    fontSize: 20\n  },\n  inputContainer: {\n    flex: 2\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginHorizontal: 20,\n    marginVertical: 10\n  },\n  pickerStyle: {\n    flex: 2,\n    height: 50,\n    borderRadius: 5,\n    backgroundColor: \"#64358D\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 4\n  },\n  inputStyle: {\n    flex: 2,\n    height: 50,\n    borderRadius: 5,\n    backgroundColor: \"#fff\",\n    paddingLeft: 10,\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 4\n  },\n  updateBtn: {\n    height: 50,\n    width: 180,\n    borderRadius: 25,\n    backgroundColor: \"#fb5b5a\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  label: {\n    margin: 8\n  },\n  errorText: {\n    textTransform: \"capitalize\",\n    color: \"red\",\n    marginLeft: 5\n  },\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  headingText: {\n    fontWeight: \"800\",\n    fontSize: 30,\n    alignSelf: \"center\",\n    marginTop: 30,\n    marginBottom: 20\n  },\n  checkboxContainer: {\n    flexDirection: \"row\",\n    marginBottom: 15,\n    alignContent: \"center\",\n    justifyContent: \"center\"\n  },\n  inputText: {\n    height: 30,\n    color: \"black\",\n    marginTop: -17,\n    marginLeft: -50\n  },\n  loginText: {\n    color: \"black\",\n    fontSize: 30,\n    marginTop: 20,\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    marginHorizontal: 30,\n    textTransform: \"uppercase\"\n  },\n  firstnameText: {\n    flexDirection: \"row\",\n    width: \"45%\",\n    backgroundColor: \"#64358D\",\n    borderRadius: 25,\n    height: 30,\n    marginTop: -40,\n    marginLeft: 160,\n    marginBottom: 10,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  loginBtn: {\n    width: \"20%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  loginBtn1: {\n    width: \"20%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 150\n  },\n  imageThumbnail: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\"\n  },\n  labelText: {\n    flex: 1,\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  MainContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginVertical: 15,\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/rahulsharma/Desktop/Project/frontend/src/containers/AdditionalInfo.js"],"names":["React","_","CheckBox","LinearGradient","baseUrl","Picker","world_cities","require","AdditionalInfo","props","handleCity","event","regex_name","isEmpty","test","setState","city_error","city","handleSubmit","state","alert","isLoading","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","services","id","navigation","getParam","then","response","json","console","log","success","Error","navigate","service_list","serviceList","registeredUser","catch","err","handlePress","val","arr","isChecked","checkedItems","get","push","pop","set","error","cities","Map","filter","country","sort","a","b","params","result","map","key","index","styles","container","x","y","headingText","labelHeading","label","labelText","MainContainer","item","flex","flexDirection","margin","imageThumbnail","service_name","rowContainer","inputContainer","pickerStyle","itemValue","itemIndex","errorText","updateBtn","textTransform","color","fontWeight","Component","StyleSheet","create","nextBtnText","fontSize","justifyContent","alignItems","marginHorizontal","marginVertical","height","borderRadius","backgroundColor","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","inputStyle","paddingLeft","marginLeft","alignSelf","marginTop","marginBottom","checkboxContainer","alignContent","inputText","loginText","firstnameText","padding","loginBtn","loginBtn1"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    ScrollView,\r\n    FlatList,\r\n} from \"react-native\";\r\nimport _ from \"lodash\";\r\nimport CheckBox from \"@react-native-community/checkbox\";\r\nimport {LinearGradient} from \"expo-linear-gradient\";\r\nimport {baseUrl} from \"../utils/constants\";\r\nimport {Picker} from \"@react-native-community/picker\";\r\nconst world_cities = require(\"../../assets/jsonContent/world_cities.json\");\r\nexport default class AdditionalInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            city: \"\",\r\n            city_error: \"\",\r\n            services: [],\r\n            serviceList: [],\r\n            isLoading: false,\r\n            error: \"\",\r\n            cities: [],\r\n            success: true,\r\n            checkedItems: new Map(),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            cities: world_cities\r\n                .filter((city) => city.country === \"Canada\")\r\n                .sort((a, b) => (a.city > b.city ? 1 : -1)),\r\n            registeredUser: this.props.navigation.state.params,\r\n        });\r\n\r\n        this.setState({isLoading: true});\r\n        fetch(baseUrl + \"api/service/list\")\r\n            .then((response) => response.json())\r\n            .then((response) => {\r\n                this.setState({isLoading: false});\r\n                if (!response.success) throw new Error(response);\r\n                else {\r\n                    response.result.map((key, index) => {\r\n                        this.setState({\r\n                            checkedItems: this.state.checkedItems.set(\r\n                                key.id,\r\n                                false\r\n                            ),\r\n                        });\r\n                    });\r\n                    this.setState({\r\n                        serviceList: response.result,\r\n                        success: true,\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    success: true,\r\n                    error: err,\r\n                });\r\n            });\r\n    }\r\n    handleCity = (event) => {\r\n        let regex_name = /^[a-zA-Z ]*$/;\r\n        if (!_.isEmpty(event)) {\r\n            if (!regex_name.test(event)) {\r\n                this.setState({city_error: \"only Allow only character\"});\r\n            } else {\r\n                this.setState({city: event});\r\n                this.setState({city_error: null});\r\n            }\r\n        } else {\r\n            this.setState({city_error: \"City is required\"});\r\n        }\r\n    };\r\n    handleSubmit = () => {\r\n        // this.props.navigation.navigate('UploadPic')\r\n        if (this.state.city_error !== null) {\r\n            alert(\"Fill the Field.\");\r\n        } else {\r\n            this.setState({isLoading: true});\r\n            fetch(baseUrl + \"api/employer/add-ctiy-services\", {\r\n                method: \"POST\",\r\n                mode: \"cors\", // no-cors, *cors, same-origin\r\n                cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n                credentials: \"same-origin\", // include, *same-origin, omit\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                redirect: \"follow\", // manual, *follow, error\r\n                referrerPolicy: \"no-referrer\",\r\n                body: JSON.stringify({\r\n                    services: this.state.services,\r\n                    city: this.state.city,\r\n                    id: this.props.navigation.getParam(\"id\"),\r\n                }),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((response) => {\r\n                    console.log(response);\r\n                    if (!response.success) {\r\n                        throw new Error(response);\r\n                    } else {\r\n                        this.props.navigation.navigate(\"UploadPic\", {\r\n                            service_list: this.state.serviceList,\r\n                            id: this.state.registeredUser.id,\r\n                            registeredUser: this.state.registeredUser,\r\n                        });\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    this.setState({\r\n                        success: false,\r\n                        err: err,\r\n                        isLoading: false,\r\n                    });\r\n                });\r\n        }\r\n    };\r\n    handlePress = (val) => {\r\n        const arr = this.state.services;\r\n        const isChecked = this.state.checkedItems.get(val.id);\r\n        console.log(isChecked);\r\n        !isChecked ? arr.push(val.id) : arr.pop(val.id);\r\n        this.setState(\r\n            {\r\n                services: arr,\r\n                checkedItems: this.state.checkedItems.set(val.id, !isChecked),\r\n            },\r\n            () => {\r\n                console.log(this.state.services);\r\n            }\r\n        );\r\n    };\r\n    render() {\r\n        return (\r\n            <LinearGradient\r\n                colors={[\"#BA9ED1\", \"#765A8D\"]}\r\n                style={styles.container}\r\n                //  Linear Gradient\r\n                start={{x: 0, y: 0}}\r\n                end={{x: 0, y: 1}}\r\n            >\r\n                <View style={styles.container}>\r\n                    <ScrollView>\r\n                        <View>\r\n                            <Text style={styles.headingText}>\r\n                                Additional Information\r\n                            </Text>\r\n                        </View>\r\n                        <View style={styles.labelHeading}>\r\n                            <View style={styles.label}>\r\n                                <Text style={styles.labelText}>\r\n                                    Select Services\r\n                                </Text>\r\n                            </View>\r\n                            <View style={styles.MainContainer}>\r\n                                <FlatList\r\n                                    data={this.state.serviceList}\r\n                                    showsVerticalScrollIndicator={false}\r\n                                    renderItem={({item}) => (\r\n                                        <View\r\n                                            style={{\r\n                                                flex: 1,\r\n                                                flexDirection: \"column\",\r\n                                                margin: 1,\r\n                                            }}\r\n                                        >\r\n                                            <View style={styles.imageThumbnail}>\r\n                                                <CheckBox\r\n                                                    value={this.state.checkedItems.get(\r\n                                                        item.id\r\n                                                    )}\r\n                                                    onValueChange={() =>\r\n                                                        this.handlePress(item)\r\n                                                    }\r\n                                                />\r\n                                                <Text>{item.service_name}</Text>\r\n                                            </View>\r\n                                        </View>\r\n                                    )}\r\n                                    //Setting the number of column\r\n                                    numColumns={2}\r\n                                    keyExtractor={(item, index) => index}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n                        <View>\r\n                            <View style={styles.rowContainer}>\r\n                                <Text style={styles.labelText}>City</Text>\r\n                                <View style={styles.inputContainer}>\r\n                                    <View style={[styles.pickerStyle]}>\r\n                                        <Picker\r\n                                            selectedValue={this.state.city}\r\n                                            onValueChange={(\r\n                                                itemValue,\r\n                                                itemIndex\r\n                                            ) =>\r\n                                                this.handleCity(\r\n                                                    itemValue,\r\n                                                    \"city\"\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            {this.state.cities.map((city) => {\r\n                                                return (\r\n                                                    <Picker.Item\r\n                                                        key={city.id}\r\n                                                        label={city.city}\r\n                                                        value={city.city}\r\n                                                    />\r\n                                                );\r\n                                            })}\r\n                                        </Picker>\r\n                                    </View>\r\n                                    {this.state.city_error ? (\r\n                                        <Text style={styles.errorText}>\r\n                                            {this.state.city_error}\r\n                                        </Text>\r\n                                    ) : null}\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                        <View style={styles.rowContainer}>\r\n                            <TouchableOpacity\r\n                                style={styles.updateBtn}\r\n                                onPress={this.handleSubmit}\r\n                            >\r\n                                <Text\r\n                                    style={{\r\n                                        textTransform: \"uppercase\",\r\n                                        color: \"#ffffff\",\r\n                                        fontWeight: \"700\",\r\n                                    }}\r\n                                >\r\n                                    Submit\r\n                                </Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </ScrollView>\r\n                </View>\r\n            </LinearGradient>\r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    nextBtnText: {\r\n        color: \"black\",\r\n        fontSize: 20,\r\n    },\r\n    inputContainer: {\r\n        flex: 2,\r\n    },\r\n    rowContainer: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginHorizontal: 20,\r\n        marginVertical: 10,\r\n    },\r\n    pickerStyle: {\r\n        flex: 2,\r\n        height: 50,\r\n        borderRadius: 5,\r\n        backgroundColor: \"#64358D\",\r\n        shadowColor: \"#dddddd\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 4.65,\r\n        elevation: 4,\r\n    },\r\n    inputStyle: {\r\n        flex: 2,\r\n        height: 50,\r\n        borderRadius: 5,\r\n        backgroundColor: \"#fff\",\r\n        paddingLeft: 10,\r\n        shadowColor: \"#dddddd\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 4.65,\r\n        elevation: 4,\r\n    },\r\n    updateBtn: {\r\n        height: 50,\r\n        width: 180,\r\n        borderRadius: 25,\r\n        backgroundColor: \"#fb5b5a\",\r\n        shadowColor: \"#dddddd\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 4.65,\r\n        elevation: 8,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    label: {\r\n        margin: 8,\r\n    },\r\n    errorText: {\r\n        textTransform: \"capitalize\",\r\n        color: \"red\",\r\n        marginLeft: 5,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    headingText: {\r\n        fontWeight: \"800\",\r\n        fontSize: 30,\r\n        alignSelf: \"center\",\r\n        marginTop: 30,\r\n        marginBottom: 20,\r\n    },\r\n    checkboxContainer: {\r\n        flexDirection: \"row\",\r\n        marginBottom: 15,\r\n        alignContent: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    inputText: {\r\n        height: 30,\r\n        color: \"black\",\r\n        marginTop: -17,\r\n        marginLeft: -50,\r\n    },\r\n    loginText: {\r\n        color: \"black\",\r\n        fontSize: 30,\r\n        marginTop: 20,\r\n        alignContent: \"center\",\r\n        justifyContent: \"center\",\r\n        marginHorizontal: 30,\r\n        textTransform: \"uppercase\",\r\n        // marginLeft: 50,\r\n    },\r\n    firstnameText: {\r\n        flexDirection: \"row\",\r\n        width: \"45%\",\r\n        backgroundColor: \"#64358D\",\r\n        borderRadius: 25,\r\n        height: 30,\r\n        marginTop: -40,\r\n        marginLeft: 160,\r\n        marginBottom: 10,\r\n\r\n        justifyContent: \"center\",\r\n        padding: 20,\r\n    },\r\n    loginBtn: {\r\n        width: \"20%\",\r\n        backgroundColor: \"#fb5b5a\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    loginBtn1: {\r\n        width: \"20%\",\r\n        backgroundColor: \"#fb5b5a\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 150,\r\n    },\r\n    imageThumbnail: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"center\",\r\n    },\r\n    labelText: {\r\n        flex: 1,\r\n        fontWeight: \"700\",\r\n        fontSize: 16,\r\n    },\r\n    MainContainer: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"center\",\r\n        marginVertical: 15,\r\n        flex: 1,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}