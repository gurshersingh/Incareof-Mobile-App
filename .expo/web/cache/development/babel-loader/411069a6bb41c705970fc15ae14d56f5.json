{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\frontend\\\\src\\\\components\\\\job_seeker\\\\FilterOverlay.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Slider from \"react-native-slider\";\nimport SearchFilterBar from \"./SearchFilterBar\";\nimport CheckBox from \"@react-native-community/checkbox\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { baseUrl } from \"../../utils/constants\";\nimport { ScrollView } from \"react-native-gesture-handler\";\n\nvar FilterOverlay = function FilterOverlay(_ref) {\n  var filterVisiblity = _ref.filterVisiblity,\n      setFilterVisibility = _ref.setFilterVisibility;\n\n  var _useState = useState(1000),\n      _useState2 = _slicedToArray(_useState, 2),\n      wager = _useState2[0],\n      setWager = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      date = _useState4[0],\n      setDate = _useState4[1];\n\n  var _useState5 = useState(\"date\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mode = _useState6[0],\n      setMode = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      show = _useState8[0],\n      setShow = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      service = _useState10[0],\n      setService = _useState10[1];\n\n  function dateTimerPickerChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(Platform.OS === \"ios\");\n    setDate(currentDate);\n  }\n\n  function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  }\n\n  function showDatepicker() {\n    showMode(\"date\");\n  }\n\n  function toggleCheckBox(id) {\n    service.map(function (data) {\n      if (data.id === id) {\n        data['checkbox_selected'] = data['checkbox_selected'] ? false : true;\n        console.log(data);\n      }\n    });\n    setService(service);\n  }\n\n  useEffect(function () {\n    var api_url = baseUrl + \"api/service/list\";\n    fetch(api_url, {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\"\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      if (response.success) {\n        var services = response.result;\n        services.map(function (service) {\n          service['checkbox_selected'] = false;\n        });\n        console.log(services);\n        setService(services);\n      } else {\n        throw new Error(response);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n    return function () {};\n  }, []);\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: filterVisiblity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      setFilterVisibility(!filterVisiblity);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: [styles.modalView, {\n      backgroundColor: \"rgba(221, 221, 221, 1)\"\n    }],\n    onStartShouldSetResponder: function onStartShouldSetResponder(event) {\n      event.stopPropagation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, React.createElement(SearchFilterBar, {\n    filterVisiblity: filterVisiblity,\n    setFilterVisibility: setFilterVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.sliderOuterContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.wagerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, \"Wager:\"), React.createElement(View, {\n    style: styles.sliderContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, React.createElement(Slider, {\n    value: wager,\n    minimumValue: 0,\n    maximumValue: 10000,\n    step: 1,\n    thumbTintColor: \"#3fa4db\",\n    minimumTrackTintColor: \"#3fa4db\",\n    maximumTrackTintColor: \"#b3b3b3\",\n    trackStyle: styles.trackStyle,\n    thumbStyle: styles.thumbStyle,\n    onValueChange: function onValueChange(value) {\n      return setWager(value);\n    },\n    onSlidingComplete: function onSlidingComplete(value) {\n      return console.log(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }))), React.createElement(View, {\n    style: styles.datePickerContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.inputView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: showDatepicker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, React.createElement(TextInput, {\n    name: \"created_at\",\n    type: \"text\",\n    style: styles.inputText,\n    placeholder: \"Filter by job post date\",\n    placeholderTextColor: \"#dddddd\",\n    editable: false,\n    value: date.toLocaleDateString(\"nl\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\"\n    }),\n    pointerEvents: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  })), show && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    timeZoneOffsetInMinutes: 0,\n    value: date,\n    mode: mode,\n    is24Hour: true,\n    display: \"default\",\n    onChange: dateTimerPickerChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }))), React.createElement(ScrollView, {\n    style: styles.scrollViewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.checkBoxOuterContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, service ? service.map(function (data) {\n    return React.createElement(View, {\n      key: data.id,\n      style: styles.checkBoxContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 41\n      }\n    }, React.createElement(CheckBox, {\n      value: data.checkbox_selected,\n      onValueChange: function onValueChange() {\n        return toggleCheckBox(data.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 45\n      }\n    }), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 45\n      }\n    }, data.service_name));\n  }) : null)))));\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    backgroundColor: \"#388e3c\",\n    opacity: 0.8\n  },\n  modalView: {\n    alignItems: \"center\",\n    height: 300,\n    backgroundColor: \"rgba(221, 221, 221, 0.9)\",\n    flexDirection: \"column\",\n    elevation: 5\n  },\n  contBtn: {\n    backgroundColor: \"#f8bbd0\",\n    borderRadius: 35,\n    marginHorizontal: 20,\n    padding: 15,\n    opacity: 1,\n    elevation: 10\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  contactIcons: {\n    fontSize: 30,\n    color: \"#ffffff\"\n  },\n  sliderOuterContainer: {\n    marginVertical: 10,\n    flexDirection: \"row\",\n    marginHorizontal: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  wagerText: {\n    fontWeight: \"700\"\n  },\n  sliderContainer: {\n    flex: 1,\n    alignItems: \"stretch\",\n    marginLeft: 15,\n    justifyContent: \"center\"\n  },\n  trackStyle: {\n    shadowColor: \"#3fa4db\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 6\n  },\n  thumbStyle: {\n    backgroundColor: \"#3fa4db\",\n    shadowColor: \"#3fa4db\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 10\n  },\n  datePickerContainer: {\n    flexDirection: \"row\",\n    marginHorizontal: 20\n  },\n  inputView: {\n    flex: 1,\n    backgroundColor: \"#ffffff\",\n    borderColor: \"#9E9E9E\",\n    borderWidth: 1,\n    borderRadius: 25,\n    paddingHorizontal: 15,\n    height: 40,\n    justifyContent: \"center\"\n  },\n  inputText: {\n    height: 40,\n    color: \"#333333\"\n  },\n  scrollViewContainer: {\n    marginVertical: 20\n  },\n  checkBoxOuterContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    marginLeft: 20\n  },\n  checkBoxContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    width: \"50%\"\n  }\n});\nexport default FilterOverlay;","map":{"version":3,"sources":["D:/frontend/src/components/job_seeker/FilterOverlay.js"],"names":["React","useState","useEffect","Slider","SearchFilterBar","CheckBox","DateTimePicker","baseUrl","ScrollView","FilterOverlay","filterVisiblity","setFilterVisibility","wager","setWager","Date","date","setDate","mode","setMode","show","setShow","service","setService","dateTimerPickerChange","event","selectedDate","currentDate","Platform","OS","showMode","currentMode","showDatepicker","toggleCheckBox","id","map","data","console","log","api_url","fetch","method","cache","credentials","headers","redirect","referrerPolicy","then","response","json","success","services","result","Error","catch","err","styles","centeredView","modalView","backgroundColor","stopPropagation","sliderOuterContainer","wagerText","sliderContainer","trackStyle","thumbStyle","value","datePickerContainer","inputView","inputText","toLocaleDateString","year","month","day","scrollViewContainer","checkBoxOuterContainer","checkBoxContainer","checkbox_selected","service_name","StyleSheet","create","flex","opacity","alignItems","height","flexDirection","elevation","contBtn","borderRadius","marginHorizontal","padding","textStyle","color","fontWeight","textAlign","modalText","marginBottom","contactIcons","fontSize","marginVertical","justifyContent","marginLeft","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","borderColor","borderWidth","paddingHorizontal","flexWrap"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    StyleSheet,\r\n    Modal,\r\n    TouchableOpacity,\r\n    View,\r\n    Text,\r\n    TextInput,\r\n} from \"react-native\";\r\nimport Slider from \"react-native-slider\";\r\nimport SearchFilterBar from \"./SearchFilterBar\";\r\nimport CheckBox from \"@react-native-community/checkbox\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\nimport { baseUrl } from \"../../utils/constants\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\n\r\nconst FilterOverlay = ({ filterVisiblity, setFilterVisibility }) => {\r\n    const [wager, setWager] = useState(1000);\r\n    const [date, setDate] = useState(new Date());\r\n    const [mode, setMode] = useState(\"date\");\r\n    const [show, setShow] = useState(false);\r\n    const [service, setService] = useState([]);\r\n\r\n    function dateTimerPickerChange(event, selectedDate) {\r\n        const currentDate = selectedDate || date;\r\n        setShow(Platform.OS === \"ios\");\r\n        setDate(currentDate);\r\n    }\r\n\r\n    function showMode(currentMode) {\r\n        setShow(true);\r\n        setMode(currentMode);\r\n    }\r\n\r\n    function showDatepicker() {\r\n        showMode(\"date\");\r\n    }\r\n\r\n    function toggleCheckBox(id) {\r\n        service.map(data => {\r\n            if (data.id === id) {\r\n                data['checkbox_selected'] = data['checkbox_selected'] ? false : true\r\n                console.log(data);\r\n            }\r\n        })\r\n        setService(service);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const api_url = baseUrl + `api/service/list`;\r\n        fetch(api_url, {\r\n            method: \"GET\",\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer\",\r\n        })\r\n            .then((response) => response.json())\r\n            .then((response) => {\r\n                if (response.success) {\r\n                    const services = response.result;\r\n                    services.map(service => {\r\n                        service['checkbox_selected'] = false;\r\n                    })\r\n                    console.log(services);\r\n                    setService(services);\r\n                } else {\r\n                    throw new Error(response);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n\r\n        return () => { };\r\n    }, []);\r\n\r\n    return (\r\n        <Modal\r\n            animationType=\"slide\"\r\n            transparent={true}\r\n            visible={filterVisiblity}\r\n        >\r\n            <View\r\n                style={styles.centeredView}\r\n                onStartShouldSetResponder={() => {\r\n                    setFilterVisibility(!filterVisiblity);\r\n                }}\r\n            >\r\n                <View\r\n                    style={[\r\n                        styles.modalView,\r\n                        { backgroundColor: \"rgba(221, 221, 221, 1)\" },\r\n                    ]}\r\n                    onStartShouldSetResponder={(event) => {\r\n                        event.stopPropagation();\r\n                    }}\r\n                >\r\n                    <SearchFilterBar\r\n                        filterVisiblity={filterVisiblity}\r\n                        setFilterVisibility={setFilterVisibility}\r\n                    />\r\n                    <View style={styles.sliderOuterContainer}>\r\n                        <Text style={styles.wagerText}>Wager:</Text>\r\n                        <View style={styles.sliderContainer}>\r\n                            <Slider\r\n                                value={wager}\r\n                                minimumValue={0}\r\n                                maximumValue={10000}\r\n                                step={1}\r\n                                thumbTintColor=\"#3fa4db\"\r\n                                minimumTrackTintColor=\"#3fa4db\"\r\n                                maximumTrackTintColor=\"#b3b3b3\"\r\n                                trackStyle={styles.trackStyle}\r\n                                thumbStyle={styles.thumbStyle}\r\n                                onValueChange={(value) => setWager(value)}\r\n                                onSlidingComplete={(value) =>\r\n                                    console.log(value)\r\n                                }\r\n                            />\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.datePickerContainer}>\r\n                        <View style={styles.inputView}>\r\n                            <TouchableOpacity onPress={showDatepicker}>\r\n                                <TextInput\r\n                                    name=\"created_at\"\r\n                                    type=\"text\"\r\n                                    style={styles.inputText}\r\n                                    placeholder=\"Filter by job post date\"\r\n                                    placeholderTextColor=\"#dddddd\"\r\n                                    editable={false}\r\n                                    value={date.toLocaleDateString(\"nl\", {\r\n                                        year: \"numeric\",\r\n                                        month: \"2-digit\",\r\n                                        day: \"2-digit\",\r\n                                    })}\r\n                                    pointerEvents=\"none\"\r\n                                />\r\n                            </TouchableOpacity>\r\n                            {show && (\r\n                                <DateTimePicker\r\n                                    testID=\"dateTimePicker\"\r\n                                    timeZoneOffsetInMinutes={0}\r\n                                    value={date}\r\n                                    mode={mode}\r\n                                    is24Hour={true}\r\n                                    display=\"default\"\r\n                                    onChange={dateTimerPickerChange}\r\n                                />\r\n                            )}\r\n                        </View>\r\n                    </View>\r\n                    <ScrollView style={styles.scrollViewContainer}>\r\n                        <View style={styles.checkBoxOuterContainer}>\r\n                            {service\r\n                                ? service.map((data) => {\r\n                                    return (\r\n                                        <View\r\n                                            key={data.id}\r\n                                            style={styles.checkBoxContainer}\r\n                                        >\r\n                                            <CheckBox\r\n                                                value={data.checkbox_selected}\r\n                                                onValueChange={() => toggleCheckBox(data.id)}\r\n                                            />\r\n                                            <Text>{data.service_name}</Text>\r\n                                        </View>\r\n                                    );\r\n                                })\r\n                                : null}\r\n                        </View>\r\n                    </ScrollView>\r\n                </View>\r\n            </View>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    centeredView: {\r\n        flex: 1,\r\n        backgroundColor: \"#388e3c\",\r\n        opacity: 0.8,\r\n    },\r\n    modalView: {\r\n        alignItems: \"center\",\r\n        height: 300,\r\n        backgroundColor: \"rgba(221, 221, 221, 0.9)\",\r\n        flexDirection: \"column\",\r\n        elevation: 5,\r\n    },\r\n    contBtn: {\r\n        backgroundColor: \"#f8bbd0\",\r\n        borderRadius: 35,\r\n        marginHorizontal: 20,\r\n        padding: 15,\r\n        opacity: 1,\r\n        elevation: 10,\r\n    },\r\n    textStyle: {\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\",\r\n    },\r\n    modalText: {\r\n        marginBottom: 15,\r\n        textAlign: \"center\",\r\n    },\r\n    contactIcons: {\r\n        fontSize: 30,\r\n        color: \"#ffffff\",\r\n    },\r\n    sliderOuterContainer: {\r\n        marginVertical: 10,\r\n        flexDirection: \"row\",\r\n        marginHorizontal: 20,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    wagerText: {\r\n        fontWeight: \"700\",\r\n    },\r\n    sliderContainer: {\r\n        flex: 1,\r\n        alignItems: \"stretch\",\r\n        marginLeft: 15,\r\n        justifyContent: \"center\",\r\n    },\r\n    trackStyle: {\r\n        shadowColor: \"#3fa4db\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 4.65,\r\n        elevation: 6,\r\n    },\r\n    thumbStyle: {\r\n        backgroundColor: \"#3fa4db\",\r\n        shadowColor: \"#3fa4db\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 4.65,\r\n        elevation: 10,\r\n    },\r\n    datePickerContainer: {\r\n        flexDirection: \"row\",\r\n        marginHorizontal: 20,\r\n    },\r\n    inputView: {\r\n        flex: 1,\r\n        backgroundColor: \"#ffffff\",\r\n        borderColor: \"#9E9E9E\",\r\n        borderWidth: 1,\r\n        borderRadius: 25,\r\n        paddingHorizontal: 15,\r\n        height: 40,\r\n        justifyContent: \"center\",\r\n    },\r\n    inputText: {\r\n        height: 40,\r\n        color: \"#333333\",\r\n    },\r\n    scrollViewContainer: {\r\n        marginVertical: 20,\r\n    },\r\n    checkBoxOuterContainer: {\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n        marginLeft: 20,\r\n    },\r\n    checkBoxContainer: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"center\",\r\n        width: \"50%\",\r\n    },\r\n});\r\n\r\nexport default FilterOverlay;\r\n"]},"metadata":{},"sourceType":"module"}