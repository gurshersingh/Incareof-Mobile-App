{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rahulsharma/Desktop/Project/frontend/src/components/employer/EditEmployerProfile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport _ from \"lodash\";\nimport Toast from \"react-native-toast-message\";\nimport EmployerBottomNavigator from \"./EmployerBottomNavigator\";\nimport EmployerSettingsOverlay from \"./EmployerSettingsOverlay\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { Picker } from \"@react-native-community/picker\";\nimport { baseUrl } from \"../../utils/constants\";\nimport EmployerImageUploadOverlay from \"./EmployerImageUploadOverlay\";\n\nvar EditEmployerProfile = function EditEmployerProfile(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      settingModalVisible = _useState4[0],\n      setSettingModalVisible = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loginData = _useState6[0],\n      setLoginData = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      employerData = _useState8[0],\n      setEmployerData = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      imagePath = _useState10[0],\n      setImagePath = _useState10[1];\n\n  var _useState11 = useState({\n    title_error: {\n      error: false,\n      message: null\n    },\n    first_name_error: {\n      error: false,\n      message: null\n    },\n    last_name_error: {\n      error: false,\n      message: null\n    },\n    phone_number_error: {\n      error: false,\n      message: null\n    },\n    company_name_error: {\n      error: false,\n      message: null\n    },\n    city_error: {\n      error: false,\n      message: null\n    }\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      validationError = _useState12[0],\n      setValidationError = _useState12[1];\n\n  var world_cities = require(\"../../../assets/jsonContent/world_cities.json\");\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      cities = _useState14[0],\n      setCities = _useState14[1];\n\n  function switchToScreen(screen, params) {\n    props.navigation.navigate(screen, params);\n  }\n\n  useEffect(function () {\n    setCities(world_cities.filter(function (city) {\n      return city.country === \"Canada\";\n    }).sort(function (a, b) {\n      return a.city > b.city ? 1 : -1;\n    }));\n\n    try {\n      AsyncStorage.getItem(\"employerLoginData\").then(function (data) {\n        var _JSON$parse = JSON.parse(data),\n            login = _JSON$parse.login,\n            user = _JSON$parse.user;\n\n        setLoginData(login);\n        setEmployerData(user);\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, []);\n  console.log(\"employer data ============> \", employerData);\n\n  function handleInputChange(text, name) {\n    var employer = _objectSpread({}, employerData);\n\n    employer[name] = text;\n\n    if (_.isEmpty(text)) {\n      validationError[name + \"_error\"] = {\n        error: true,\n        message: name.replace(\"_\", \" \") + \" is required.\"\n      };\n    } else {\n      validationError[name + \"_error\"] = {\n        error: false,\n        message: null\n      };\n    }\n\n    setEmployerData(employer);\n    setValidationError(validationError);\n  }\n\n  function setImageData(imageUri) {\n    setImagePath(imageUri);\n    employerData[\"image\"] = imageUri;\n    setEmployerData(employerData);\n    setModalVisible(false);\n  }\n\n  function updateProfile() {\n    if (!validationError.title_error.error && !validationError.first_name_error.error && !validationError.last_name_error.error && !validationError.phone_number_error.error && !validationError.company_name_error.error && !validationError.city_error.error) {\n      var data = new FormData();\n\n      if (imagePath) {\n        data.append(\"image\", Platform.OS === \"android\" ? {\n          uri: imagePath,\n          name: \"image.png\",\n          type: \"image/png\"\n        } : {\n          uri: imagePath.replace(\"file://\", \"\"),\n          name: \"image.png\",\n          type: \"image/png\"\n        });\n      }\n\n      data.append(\"title\", employerData.title);\n      data.append(\"first_name\", employerData.first_name);\n      data.append(\"last_name\", employerData.last_name);\n      data.append(\"phone_number\", employerData.phone_number);\n      data.append(\"company_name\", employerData.company_name);\n      data.append(\"city\", employerData.city);\n      data.append(\"id\", employerData.id);\n      fetch(baseUrl + \"api/employer/profile/edit\", {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\",\n        body: data\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        if (!response.success) {\n          Toast.show({\n            type: \"error\",\n            position: \"top\",\n            text1: \"Error\",\n            text2: \"Something went wrong.\"\n          });\n          throw new Error(response);\n        } else {\n          Toast.show({\n            type: \"success\",\n            position: \"top\",\n            text1: \"Success\",\n            text2: \"Profile updated successfully.\"\n          });\n        }\n      }).catch(function (err) {\n        Toast.show({\n          type: \"error\",\n          position: \"top\",\n          text1: \"Error\",\n          text2: \"Something went wrong.\"\n        });\n        console.log(err);\n      });\n    } else {\n      Toast.show({\n        type: \"error\",\n        position: \"top\",\n        text1: \"Warning\",\n        text2: \"Please, check input fileds\"\n      });\n    }\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.innerContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.imageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.imagePlaceholder,\n    onPress: function onPress() {\n      return setModalVisible(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, employerData.image ? React.createElement(Image, {\n    style: [styles.profileImage],\n    source: {\n      uri: employerData.image\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 37\n    }\n  }) : React.createElement(Image, {\n    source: {\n      uri: \"https://i.ya-webdesign.com/images/blank-profile-picture-png-8.png\"\n    },\n    style: styles.profileImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 37\n    }\n  }))), React.createElement(Text, {\n    style: styles.labelText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, \"Profile Picture\")), React.createElement(View, {\n    style: styles.rowContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.labelText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  }, \"Title\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: [styles.pickerStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }\n  }, React.createElement(Picker, {\n    selectedValue: employerData.title,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return handleInputChange(itemValue, \"title\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 33\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Select Title\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 37\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Mr.\",\n    value: \"Mr.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 37\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Ms.\",\n    value: \"Ms.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 37\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Mrs.\",\n    value: \"Mrs.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 37\n    }\n  }))), validationError.title_error.error ? React.createElement(Text, {\n    style: styles.errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 33\n    }\n  }, validationError.title_error.message) : null)), React.createElement(View, {\n    style: styles.rowContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.labelText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }, \"First Name\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(text) {\n      return handleInputChange(text, \"first_name\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  }, employerData.first_name), validationError.first_name_error.error ? React.createElement(Text, {\n    style: styles.errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 33\n    }\n  }, validationError.first_name_error.message) : null)), React.createElement(View, {\n    style: styles.rowContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.labelText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, \"Last Name\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(text) {\n      return handleInputChange(text, \"last_name\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 29\n    }\n  }, employerData.last_name), validationError.last_name_error.error ? React.createElement(Text, {\n    style: styles.errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 33\n    }\n  }, validationError.last_name_error.message) : null)), React.createElement(View, {\n    style: styles.rowContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.labelText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 25\n    }\n  }, \"Contact\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 25\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(text) {\n      return handleInputChange(text, \"phone_number\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 29\n    }\n  }, employerData.phone_number), validationError.phone_number_error.error ? React.createElement(Text, {\n    style: styles.errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 33\n    }\n  }, validationError.phone_number_error.message) : null)), React.createElement(View, {\n    style: styles.rowContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.labelText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 25\n    }\n  }, \"Organization\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 25\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(text) {\n      return handleInputChange(text, \"company_name\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 29\n    }\n  }, employerData.company_name), validationError.company_name_error.error ? React.createElement(Text, {\n    style: styles.errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 33\n    }\n  }, validationError.company_name_error.message) : null)), React.createElement(View, {\n    style: styles.rowContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.labelText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 25\n    }\n  }, \"City\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: [styles.pickerStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 29\n    }\n  }, React.createElement(Picker, {\n    selectedValue: employerData.city,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return handleInputChange(itemValue, \"city\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 33\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Select city\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 37\n    }\n  }), cities.map(function (city) {\n    return React.createElement(Picker.Item, {\n      key: city.id,\n      label: city.city,\n      value: city.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 45\n      }\n    });\n  }))), validationError.city_error.error ? React.createElement(Text, {\n    style: styles.errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 33\n    }\n  }, validationError.city_error.message) : null)), React.createElement(View, {\n    style: styles.rowContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.updateBtn,\n    onPress: updateProfile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 29\n    }\n  }, \"Update Profile\"))))), React.createElement(View, {\n    style: styles.bottomNavigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }\n  }, React.createElement(EmployerBottomNavigator, {\n    employerLoginData: loginData,\n    setSettingModalVisible: setSettingModalVisible,\n    switchToScreen: switchToScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 17\n    }\n  })), React.createElement(Toast, {\n    ref: function ref(_ref) {\n      return Toast.setRef(_ref);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }\n  }), React.createElement(EmployerImageUploadOverlay, {\n    setImageData: setImageData,\n    modalVisible: modalVisible,\n    setModalVisible: setModalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }\n  }), React.createElement(EmployerSettingsOverlay, {\n    settingModalVisible: settingModalVisible,\n    setSettingModalVisible: setSettingModalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }\n  }));\n};\n\nEditEmployerProfile[\"navigationOptions\"] = function (screenProps) {\n  return {\n    title: \"Edit Profile\"\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    flex: 1,\n    width: null,\n    height: null\n  },\n  innerContainer: {\n    flex: 9.2\n  },\n  bottomNavigation: {\n    flex: 0.8,\n    backgroundColor: \"#dddddd\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginHorizontal: 20,\n    marginVertical: 10\n  },\n  labelText: {\n    flex: 1,\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  inputContainer: {\n    flex: 2\n  },\n  pickerStyle: {\n    flex: 2,\n    height: 50,\n    overflow: \"hidden\",\n    borderRadius: 5,\n    backgroundColor: \"#ffffff\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 4\n  },\n  inputStyle: {\n    flex: 2,\n    height: 50,\n    overflow: \"hidden\",\n    borderRadius: 5,\n    backgroundColor: \"#ffffff\",\n    paddingLeft: 10,\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 4\n  },\n  imageContainer: {\n    flexDirection: \"column\",\n    margin: 15,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  imagePlaceholder: {\n    backgroundColor: \"#ffffff\",\n    borderRadius: 100,\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8\n  },\n  profileImage: {\n    height: 120,\n    width: 120,\n    borderRadius: 100,\n    alignSelf: \"center\"\n  },\n  errorText: {\n    textTransform: \"capitalize\",\n    color: \"red\",\n    marginLeft: 5\n  },\n  updateBtn: {\n    height: 50,\n    width: 180,\n    borderRadius: 25,\n    backgroundColor: \"#fb5b5a\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default EditEmployerProfile;","map":{"version":3,"sources":["/Users/rahulsharma/Desktop/Project/frontend/src/components/employer/EditEmployerProfile.js"],"names":["React","useState","useEffect","_","Toast","EmployerBottomNavigator","EmployerSettingsOverlay","AsyncStorage","Picker","baseUrl","EmployerImageUploadOverlay","EditEmployerProfile","props","modalVisible","setModalVisible","settingModalVisible","setSettingModalVisible","loginData","setLoginData","employerData","setEmployerData","imagePath","setImagePath","title_error","error","message","first_name_error","last_name_error","phone_number_error","company_name_error","city_error","validationError","setValidationError","world_cities","require","cities","setCities","switchToScreen","screen","params","navigation","navigate","filter","city","country","sort","a","b","getItem","then","data","JSON","parse","login","user","console","log","handleInputChange","text","name","employer","isEmpty","replace","setImageData","imageUri","updateProfile","FormData","append","Platform","OS","uri","type","title","first_name","last_name","phone_number","company_name","id","fetch","method","mode","cache","credentials","headers","Accept","redirect","referrerPolicy","body","response","json","success","show","position","text1","text2","Error","catch","err","styles","container","innerContainer","imageContainer","imagePlaceholder","image","profileImage","labelText","rowContainer","inputContainer","pickerStyle","itemValue","itemIndex","errorText","inputStyle","map","updateBtn","bottomNavigation","ref","setRef","screenProps","StyleSheet","create","flexDirection","flex","width","height","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","justifyContent","alignItems","marginHorizontal","marginVertical","fontWeight","fontSize","overflow","borderRadius","paddingLeft","margin","alignSelf","textTransform","color","marginLeft"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {\n    StyleSheet,\n    Text,\n    View,\n    ScrollView,\n    Image,\n    TouchableHighlight,\n    TextInput,\n} from \"react-native\";\nimport _ from \"lodash\";\nimport Toast from \"react-native-toast-message\";\nimport EmployerBottomNavigator from \"./EmployerBottomNavigator\";\nimport EmployerSettingsOverlay from \"./EmployerSettingsOverlay\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport {Picker} from \"@react-native-community/picker\";\nimport {baseUrl} from \"../../utils/constants\";\nimport EmployerImageUploadOverlay from \"./EmployerImageUploadOverlay\";\n\nconst EditEmployerProfile = (props) => {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [settingModalVisible, setSettingModalVisible] = useState(false);\n    const [loginData, setLoginData] = useState({});\n    const [employerData, setEmployerData] = useState({});\n    const [imagePath, setImagePath] = useState(null);\n    const [validationError, setValidationError] = useState({\n        title_error: {\n            error: false,\n            message: null,\n        },\n        first_name_error: {\n            error: false,\n            message: null,\n        },\n        last_name_error: {\n            error: false,\n            message: null,\n        },\n        phone_number_error: {\n            error: false,\n            message: null,\n        },\n        company_name_error: {\n            error: false,\n            message: null,\n        },\n        city_error: {\n            error: false,\n            message: null,\n        },\n    });\n\n    const world_cities = require(\"../../../assets/jsonContent/world_cities.json\");\n    const [cities, setCities] = useState([]);\n\n    function switchToScreen(screen, params) {\n        props.navigation.navigate(screen, params);\n    }\n\n    useEffect(() => {\n        setCities(\n            world_cities\n                .filter((city) => city.country === \"Canada\")\n                .sort((a, b) => (a.city > b.city ? 1 : -1))\n        );\n        try {\n            AsyncStorage.getItem(\"employerLoginData\").then((data) => {\n                const {login, user} = JSON.parse(data);\n                setLoginData(login);\n                setEmployerData(user);\n            });\n        } catch (error) {\n            // Error retrieving data\n            console.log(error.message);\n        }\n    }, []);\n\n    console.log(\"employer data ============> \", employerData);\n\n    function handleInputChange(text, name) {\n        const employer = {...employerData};\n        employer[name] = text;\n        if (_.isEmpty(text)) {\n            validationError[`${name}_error`] = {\n                error: true,\n                message: name.replace(\"_\", \" \") + \" is required.\",\n            };\n        } else {\n            validationError[`${name}_error`] = {\n                error: false,\n                message: null,\n            };\n        }\n        setEmployerData(employer);\n        setValidationError(validationError);\n    }\n\n    function setImageData(imageUri) {\n        setImagePath(imageUri);\n        employerData[\"image\"] = imageUri;\n        setEmployerData(employerData);\n        setModalVisible(false);\n    }\n\n    function updateProfile() {\n        if (\n            !validationError.title_error.error &&\n            !validationError.first_name_error.error &&\n            !validationError.last_name_error.error &&\n            !validationError.phone_number_error.error &&\n            !validationError.company_name_error.error &&\n            !validationError.city_error.error\n        ) {\n            let data = new FormData();\n            if (imagePath) {\n                data.append(\n                    \"image\",\n                    Platform.OS === \"android\"\n                        ? {uri: imagePath, name: \"image.png\", type: \"image/png\"}\n                        : {\n                              uri: imagePath.replace(\"file://\", \"\"),\n                              name: \"image.png\",\n                              type: \"image/png\",\n                          }\n                );\n            }\n            data.append(\"title\", employerData.title);\n            data.append(\"first_name\", employerData.first_name);\n            data.append(\"last_name\", employerData.last_name);\n            data.append(\"phone_number\", employerData.phone_number);\n            data.append(\"company_name\", employerData.company_name);\n            data.append(\"city\", employerData.city);\n            data.append(\"id\", employerData.id);\n\n            fetch(baseUrl + \"api/employer/profile/edit\", {\n                method: \"POST\",\n                mode: \"cors\", // no-cors, *cors, same-origin\n                cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n                credentials: \"same-origin\", // include, *same-origin, omit\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"multipart/form-data\",\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                redirect: \"follow\", // manual, *follow, error\n                referrerPolicy: \"no-referrer\",\n                body: data,\n            })\n                .then((response) => response.json())\n                .then((response) => {\n                    if (!response.success) {\n                        Toast.show({\n                            type: \"error\",\n                            position: \"top\",\n                            text1: \"Error\",\n                            text2: \"Something went wrong.\",\n                        });\n                        throw new Error(response);\n                    } else {\n                        // setJobSeekerData(response.result);\n                        Toast.show({\n                            type: \"success\",\n                            position: \"top\",\n                            text1: \"Success\",\n                            text2: \"Profile updated successfully.\",\n                        });\n                    }\n                })\n                .catch((err) => {\n                    Toast.show({\n                        type: \"error\",\n                        position: \"top\",\n                        text1: \"Error\",\n                        text2: \"Something went wrong.\",\n                    });\n                    console.log(err);\n                });\n        } else {\n            Toast.show({\n                type: \"error\",\n                position: \"top\",\n                text1: \"Warning\",\n                text2: \"Please, check input fileds\",\n            });\n        }\n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.innerContainer}>\n                <ScrollView>\n                    <View style={styles.imageContainer}>\n                        <TouchableHighlight\n                            style={styles.imagePlaceholder}\n                            onPress={() => setModalVisible(true)}\n                        >\n                            <View>\n                                {employerData.image ? (\n                                    <Image\n                                        style={[styles.profileImage]}\n                                        source={{uri: employerData.image}}\n                                    />\n                                ) : (\n                                    <Image\n                                        source={{\n                                            uri:\n                                                \"https://i.ya-webdesign.com/images/blank-profile-picture-png-8.png\",\n                                        }}\n                                        style={styles.profileImage}\n                                    />\n                                )}\n                            </View>\n                        </TouchableHighlight>\n                        <Text style={styles.labelText}>Profile Picture</Text>\n                    </View>\n                    <View style={styles.rowContainer}>\n                        <Text style={styles.labelText}>Title</Text>\n                        <View style={styles.inputContainer}>\n                            <View style={[styles.pickerStyle]}>\n                                <Picker\n                                    selectedValue={employerData.title}\n                                    onValueChange={(itemValue, itemIndex) =>\n                                        handleInputChange(itemValue, \"title\")\n                                    }\n                                >\n                                    <Picker.Item\n                                        label=\"Select Title\"\n                                        value=\"\"\n                                    />\n                                    <Picker.Item label=\"Mr.\" value=\"Mr.\" />\n                                    <Picker.Item label=\"Ms.\" value=\"Ms.\" />\n                                    <Picker.Item label=\"Mrs.\" value=\"Mrs.\" />\n                                </Picker>\n                            </View>\n                            {validationError.title_error.error ? (\n                                <Text style={styles.errorText}>\n                                    {validationError.title_error.message}\n                                </Text>\n                            ) : null}\n                        </View>\n                    </View>\n                    <View style={styles.rowContainer}>\n                        <Text style={styles.labelText}>First Name</Text>\n                        <View style={styles.inputContainer}>\n                            <TextInput\n                                style={styles.inputStyle}\n                                onChangeText={(text) =>\n                                    handleInputChange(text, \"first_name\")\n                                }\n                            >\n                                {employerData.first_name}\n                            </TextInput>\n                            {validationError.first_name_error.error ? (\n                                <Text style={styles.errorText}>\n                                    {validationError.first_name_error.message}\n                                </Text>\n                            ) : null}\n                        </View>\n                    </View>\n                    <View style={styles.rowContainer}>\n                        <Text style={styles.labelText}>Last Name</Text>\n                        <View style={styles.inputContainer}>\n                            <TextInput\n                                style={styles.inputStyle}\n                                onChangeText={(text) =>\n                                    handleInputChange(text, \"last_name\")\n                                }\n                            >\n                                {employerData.last_name}\n                            </TextInput>\n                            {validationError.last_name_error.error ? (\n                                <Text style={styles.errorText}>\n                                    {validationError.last_name_error.message}\n                                </Text>\n                            ) : null}\n                        </View>\n                    </View>\n                    <View style={styles.rowContainer}>\n                        <Text style={styles.labelText}>Contact</Text>\n                        <View style={styles.inputContainer}>\n                            <TextInput\n                                style={styles.inputStyle}\n                                keyboardType=\"numeric\"\n                                onChangeText={(text) =>\n                                    handleInputChange(text, \"phone_number\")\n                                }\n                            >\n                                {employerData.phone_number}\n                            </TextInput>\n                            {validationError.phone_number_error.error ? (\n                                <Text style={styles.errorText}>\n                                    {validationError.phone_number_error.message}\n                                </Text>\n                            ) : null}\n                        </View>\n                    </View>\n                    <View style={styles.rowContainer}>\n                        <Text style={styles.labelText}>Organization</Text>\n                        <View style={styles.inputContainer}>\n                            <TextInput\n                                style={styles.inputStyle}\n                                onChangeText={(text) =>\n                                    handleInputChange(text, \"company_name\")\n                                }\n                            >\n                                {employerData.company_name}\n                            </TextInput>\n                            {validationError.company_name_error.error ? (\n                                <Text style={styles.errorText}>\n                                    {validationError.company_name_error.message}\n                                </Text>\n                            ) : null}\n                        </View>\n                    </View>\n                    <View style={styles.rowContainer}>\n                        <Text style={styles.labelText}>City</Text>\n                        <View style={styles.inputContainer}>\n                            <View style={[styles.pickerStyle]}>\n                                <Picker\n                                    selectedValue={employerData.city}\n                                    onValueChange={(itemValue, itemIndex) =>\n                                        handleInputChange(itemValue, \"city\")\n                                    }\n                                >\n                                    <Picker.Item label=\"Select city\" value=\"\" />\n                                    {cities.map((city) => {\n                                        return (\n                                            <Picker.Item\n                                                key={city.id}\n                                                label={city.city}\n                                                value={city.city}\n                                            />\n                                        );\n                                    })}\n                                </Picker>\n                            </View>\n                            {validationError.city_error.error ? (\n                                <Text style={styles.errorText}>\n                                    {validationError.city_error.message}\n                                </Text>\n                            ) : null}\n                        </View>\n                    </View>\n                    <View style={styles.rowContainer}>\n                        <TouchableHighlight\n                            style={styles.updateBtn}\n                            onPress={updateProfile}\n                        >\n                            <Text>Update Profile</Text>\n                        </TouchableHighlight>\n                    </View>\n                </ScrollView>\n            </View>\n            <View style={styles.bottomNavigation}>\n                <EmployerBottomNavigator\n                    employerLoginData={loginData}\n                    setSettingModalVisible={setSettingModalVisible}\n                    switchToScreen={switchToScreen}\n                />\n            </View>\n            <Toast ref={(ref) => Toast.setRef(ref)} />\n            <EmployerImageUploadOverlay\n                setImageData={setImageData}\n                modalVisible={modalVisible}\n                setModalVisible={setModalVisible}\n            />\n            <EmployerSettingsOverlay\n                settingModalVisible={settingModalVisible}\n                setSettingModalVisible={setSettingModalVisible}\n            />\n        </View>\n    );\n};\n\nEditEmployerProfile[\"navigationOptions\"] = (screenProps) => ({\n    title: \"Edit Profile\",\n});\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: \"column\",\n        flex: 1,\n        width: null,\n        height: null,\n    },\n    innerContainer: {\n        flex: 9.2,\n    },\n    bottomNavigation: {\n        flex: 0.8,\n        backgroundColor: \"#dddddd\",\n        shadowColor: \"#dddddd\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 4.65,\n        elevation: 8,\n    },\n    rowContainer: {\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginHorizontal: 20,\n        marginVertical: 10,\n    },\n    labelText: {\n        flex: 1,\n        fontWeight: \"700\",\n        fontSize: 16,\n    },\n    inputContainer: {\n        flex: 2,\n    },\n    pickerStyle: {\n        flex: 2,\n        height: 50,\n        overflow: \"hidden\",\n        borderRadius: 5,\n        backgroundColor: \"#ffffff\",\n        shadowColor: \"#dddddd\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 4.65,\n        elevation: 4,\n    },\n    inputStyle: {\n        flex: 2,\n        height: 50,\n        overflow: \"hidden\",\n        borderRadius: 5,\n        backgroundColor: \"#ffffff\",\n        paddingLeft: 10,\n        shadowColor: \"#dddddd\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 4.65,\n        elevation: 4,\n    },\n    imageContainer: {\n        flexDirection: \"column\",\n        margin: 15,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    imagePlaceholder: {\n        backgroundColor: \"#ffffff\",\n        borderRadius: 100,\n        shadowColor: \"#dddddd\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 4.65,\n        elevation: 8,\n    },\n    profileImage: {\n        height: 120,\n        width: 120,\n        borderRadius: 100,\n        alignSelf: \"center\",\n    },\n    errorText: {\n        textTransform: \"capitalize\",\n        color: \"red\",\n        marginLeft: 5,\n    },\n    updateBtn: {\n        height: 50,\n        width: 180,\n        borderRadius: 25,\n        backgroundColor: \"#fb5b5a\",\n        shadowColor: \"#dddddd\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 4.65,\n        elevation: 8,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n});\n\nexport default EditEmployerProfile;\n"]},"metadata":{},"sourceType":"module"}