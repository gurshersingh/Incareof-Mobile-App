{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\frontend\\\\src\\\\components\\\\employer\\\\JobCard.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AntDesign } from \"@expo/vector-icons\";\n\nvar JobCard = function JobCard(_ref) {\n  var job = _ref.job,\n      switchToScreen = _ref.switchToScreen,\n      setModalVisible = _ref.setModalVisible,\n      setEmployerRecord = _ref.setEmployerRecord;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDescriptionVisible = _useState2[0],\n      setDescriptionVisible = _useState2[1];\n\n  var created_at = job.created_at,\n      employer_id = job.employer_id,\n      end_date = job.end_date,\n      id = job.id,\n      job_description = job.job_description,\n      job_seekers = job.job_seekers,\n      job_service_id = job.job_service_id,\n      job_title = job.job_title,\n      selected_user = job.selected_user,\n      start_date = job.start_date,\n      updated_at = job.updated_at,\n      wager_offered = job.wager_offered;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.jobContainer,\n    onStartShouldSetResponder: function onStartShouldSetResponder(event) {\n      setDescriptionVisible(!isDescriptionVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.detailContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, job_title), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, job_description ? job_description : job_post.job_description), React.createElement(Text, {\n    style: styles.subTitleText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, start_date))), isDescriptionVisible ? React.createElement(View, {\n    style: styles.toggleableView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.detailBtn,\n    onPress: function onPress() {\n      try {\n        AsyncStorage.setItem(\"jobSeekersList\", JSON.stringify(job_seekers));\n      } catch (error) {\n        console.log(error.message);\n      }\n\n      switchToScreen(\"ApplicantList\", job_seekers);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.detailBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"View Applicants\"))) : null);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    minHeight: 120,\n    borderWidth: 1,\n    borderColor: \"#dddddd\",\n    backgroundColor: \"#ffffff\",\n    borderRadius: 10,\n    margin: 15,\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8,\n    flexDirection: \"column\"\n  },\n  jobContainer: {\n    flexDirection: \"row\"\n  },\n  detailContainer: {\n    minHeight: 120,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    width: 0,\n    flexGrow: 1,\n    flex: 1\n  },\n  toggleableView: {\n    minHeight: 46,\n    padding: 5,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  profileImage: {\n    height: 120,\n    width: 120\n  },\n  titleText: {\n    fontSize: 15,\n    fontWeight: \"800\",\n    textDecorationLine: \"underline\"\n  },\n  subTitleText: {\n    fontWeight: \"600\",\n    fontSize: 13\n  },\n  detailBtn: {\n    width: \"40%\",\n    height: 36,\n    backgroundColor: \"#8fbc8f\",\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"flex-end\"\n  },\n  detailBtnText: {\n    color: \"white\"\n  },\n  contactBtn: {\n    width: \"40%\",\n    height: 36,\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"flex-end\"\n  },\n  contactBtnText: {\n    color: \"white\"\n  },\n  starBtn: {\n    width: 36,\n    backgroundColor: \"#ffee58\",\n    borderRadius: 25,\n    alignSelf: \"flex-end\"\n  },\n  starBtnIcon: {\n    fontSize: 30,\n    padding: 3,\n    color: \"#9E9E9E\"\n  }\n});\nexport default JobCard;","map":{"version":3,"sources":["D:/frontend/src/components/employer/JobCard.js"],"names":["React","useState","AntDesign","JobCard","job","switchToScreen","setModalVisible","setEmployerRecord","isDescriptionVisible","setDescriptionVisible","created_at","employer_id","end_date","id","job_description","job_seekers","job_service_id","job_title","selected_user","start_date","updated_at","wager_offered","styles","container","jobContainer","event","detailContainer","titleText","job_post","subTitleText","toggleableView","detailBtn","AsyncStorage","setItem","JSON","stringify","error","console","log","message","detailBtnText","StyleSheet","create","minHeight","borderWidth","borderColor","backgroundColor","borderRadius","margin","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","flexDirection","paddingVertical","paddingHorizontal","flexGrow","flex","padding","justifyContent","profileImage","fontSize","fontWeight","textDecorationLine","alignItems","alignSelf","color","contactBtn","contactBtnText","starBtn","starBtnIcon"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from \"react-native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nconst JobCard = ({\r\n    job,\r\n    switchToScreen,\r\n    setModalVisible,\r\n    setEmployerRecord,\r\n}) => {\r\n    const [isDescriptionVisible, setDescriptionVisible] = useState(false);\r\n    const {\r\n        created_at,\r\n        employer_id,\r\n        end_date,\r\n        id,\r\n        job_description,\r\n        job_seekers,\r\n        job_service_id,\r\n        job_title,\r\n        selected_user,\r\n        start_date,\r\n        updated_at,\r\n        wager_offered\r\n    } = job;\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View\r\n                style={styles.jobContainer}\r\n                onStartShouldSetResponder={(event) => {\r\n                    setDescriptionVisible(!isDescriptionVisible);\r\n                }}\r\n            >\r\n                <View style={styles.detailContainer}>\r\n                    <Text style={styles.titleText}>\r\n                        {job_title}\r\n                    </Text>\r\n                    <Text>\r\n                        {job_description\r\n                            ? job_description\r\n                            : job_post.job_description}\r\n                    </Text>\r\n                    <Text style={styles.subTitleText}>\r\n                        {start_date}\r\n                    </Text>\r\n                </View>\r\n            </View>\r\n            {isDescriptionVisible ? (\r\n                <View style={styles.toggleableView}>\r\n                    <TouchableOpacity\r\n                        style={styles.detailBtn}\r\n                        onPress={() => {\r\n                            try {\r\n                                AsyncStorage.setItem(\"jobSeekersList\", JSON.stringify(job_seekers))\r\n                            } catch (error) {\r\n                                // Error retrieving data\r\n                                console.log(error.message);\r\n                            }\r\n                            switchToScreen(\"ApplicantList\", job_seekers)\r\n                        }}\r\n                    >\r\n                        <Text style={styles.detailBtnText}>View Applicants</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            ) : null}\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        minHeight: 120,\r\n        borderWidth: 1,\r\n        borderColor: \"#dddddd\",\r\n        backgroundColor: \"#ffffff\",\r\n        borderRadius: 10,\r\n        margin: 15,\r\n        shadowColor: \"#dddddd\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 4.65,\r\n        elevation: 8,\r\n        flexDirection: \"column\",\r\n    },\r\n    jobContainer: {\r\n        flexDirection: \"row\",\r\n    },\r\n    detailContainer: {\r\n        minHeight: 120,\r\n        paddingVertical: 5,\r\n        paddingHorizontal: 10,\r\n        width: 0,\r\n        flexGrow: 1,\r\n        flex: 1,\r\n    },\r\n    toggleableView: {\r\n        minHeight: 46,\r\n        padding: 5,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n    },\r\n    profileImage: {\r\n        height: 120,\r\n        width: 120,\r\n    },\r\n    titleText: {\r\n        fontSize: 15,\r\n        fontWeight: \"800\",\r\n        textDecorationLine: \"underline\",\r\n    },\r\n    subTitleText: {\r\n        fontWeight: \"600\",\r\n        fontSize: 13,\r\n    },\r\n    detailBtn: {\r\n        width: \"40%\",\r\n        height: 36,\r\n        backgroundColor: \"#8fbc8f\",\r\n        borderRadius: 25,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        alignSelf: \"flex-end\",\r\n    },\r\n    detailBtnText: {\r\n        color: \"white\",\r\n    },\r\n    contactBtn: {\r\n        width: \"40%\",\r\n        height: 36,\r\n        backgroundColor: \"#fb5b5a\",\r\n        borderRadius: 25,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        alignSelf: \"flex-end\",\r\n    },\r\n    contactBtnText: {\r\n        color: \"white\",\r\n    },\r\n    starBtn: {\r\n        width: 36,\r\n        backgroundColor: \"#ffee58\",\r\n        borderRadius: 25,\r\n        alignSelf: \"flex-end\",\r\n    },\r\n    starBtnIcon: {\r\n        fontSize: 30,\r\n        padding: 3,\r\n        color: \"#9E9E9E\",\r\n    },\r\n});\r\n\r\nexport default JobCard;\r\n"]},"metadata":{},"sourceType":"module"}