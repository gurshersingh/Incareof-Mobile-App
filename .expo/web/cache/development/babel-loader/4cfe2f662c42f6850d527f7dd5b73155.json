{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\frontend\\\\src\\\\containers\\\\job_seeker\\\\ChangePassword.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport BottomTabNavigator from \"../../components/job_seeker/BottomTabNavigator\";\nimport SearchFilterBar from \"../../components/job_seeker/SearchFilterBar\";\nimport SettingsOverlay from \"../../components/job_seeker/SettingsOverlay\";\nimport FilterOverlay from \"../../components/job_seeker/FilterOverlay\";\nimport _ from \"lodash\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { baseUrl } from \"../../utils/constants\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar ChangePassword = function ChangePassword(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      filterVisiblity = _useState2[0],\n      setFilterVisibility = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      settingModalVisible = _useState4[0],\n      setSettingModalVisible = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userData = _useState6[0],\n      setUserData = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      jobSeekerData = _useState8[0],\n      setJobSeekerData = _useState8[1];\n\n  var _useState9 = useState({\n    old_password: null,\n    new_password: null,\n    confirm_password: null,\n    old_password_error: {\n      error: false,\n      message: null\n    },\n    new_password_error: {\n      error: false,\n      message: null\n    },\n    confirm_password_error: {\n      error: false,\n      message: null\n    }\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      passwordObj = _useState10[0],\n      setPasswordObj = _useState10[1];\n\n  var old_password = passwordObj.old_password,\n      old_password_error = passwordObj.old_password_error,\n      new_password = passwordObj.new_password,\n      new_password_error = passwordObj.new_password_error,\n      confirm_password = passwordObj.confirm_password,\n      confirm_password_error = passwordObj.confirm_password_error;\n\n  function switchToScreen(screen, params) {\n    props.navigation.navigate(screen, params);\n  }\n\n  useEffect(function () {\n    if (_.isEmpty(userData)) {\n      try {\n        AsyncStorage.getItem(\"userData\").then(function (user) {\n          setUserData(JSON.parse(user));\n        });\n        AsyncStorage.getItem(\"jobSeekerData\").then(function (user) {\n          setJobSeekerData(JSON.parse(user));\n        });\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n\n    return function () {\n      console.log(\"clean up\");\n    };\n  }, []);\n\n  function handlePasswordChange(text, name) {\n    var password = _objectSpread({}, passwordObj);\n\n    password[name] = text;\n\n    if (_.isEmpty(text)) {\n      password[name + \"_error\"] = {\n        error: true,\n        message: name.replace(\"_\", \" \") + \" is required.\"\n      };\n    } else {\n      password[name + \"_error\"] = {\n        error: false,\n        message: null\n      };\n    }\n\n    setPasswordObj(password);\n  }\n\n  function confirmPasswordChange(text, name) {\n    var password = _objectSpread({}, passwordObj);\n\n    password[name] = text;\n\n    if (_.isEmpty(text)) {\n      password[name + \"_error\"] = {\n        error: true,\n        message: name.replace(\"_\", \" \") + \" is required.\"\n      };\n    } else {\n      console.log(password.new_password, text);\n\n      if (password.new_password !== text) {\n        password[name + \"_error\"] = {\n          error: true,\n          message: \"Password not matched.\"\n        };\n      } else {\n        password[name + \"_error\"] = {\n          error: false,\n          message: null\n        };\n      }\n    }\n\n    setPasswordObj(password);\n    console.log(password);\n  }\n\n  function changePassword() {\n    if (old_password_error && new_password && !old_password_error.error && !new_password_error.error && !confirm_password_error.error) {\n      fetch(baseUrl + \"api/login/change-password\", {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\",\n        body: JSON.stringify({\n          user_id: userData.id,\n          old_password: old_password,\n          new_password: new_password\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        if (!response.success) throw new Error(response);else {\n          alert(\"Password changed successfully.\");\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    } else {\n      alert(\"Check fields.\");\n    }\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.jobSeekerDashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.headingText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, \"Change Password\")), React.createElement(View, {\n    style: styles.changePasswordContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    name: \"old_password\",\n    secureTextEntry: true,\n    style: styles.textInput,\n    placeholder: \"Enter current password\",\n    onChangeText: function onChangeText(text) {\n      return handlePasswordChange(text, \"old_password\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }), old_password_error.error ? React.createElement(Text, {\n    style: styles.errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, old_password_error.message) : null, React.createElement(TextInput, {\n    name: \"new_password\",\n    secureTextEntry: true,\n    style: styles.textInput,\n    placeholder: \"New password\",\n    onChangeText: function onChangeText(text) {\n      return handlePasswordChange(text, \"new_password\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }), new_password_error.error ? React.createElement(Text, {\n    style: styles.errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, new_password_error.message) : null, React.createElement(TextInput, {\n    name: \"confirm_password\",\n    secureTextEntry: true,\n    style: styles.textInput,\n    placeholder: \"Confirm password\",\n    onChangeText: function onChangeText(text) {\n      return confirmPasswordChange(text, \"confirm_password\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }), confirm_password_error.error ? React.createElement(Text, {\n    style: styles.errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, confirm_password_error.message) : null, React.createElement(TouchableOpacity, {\n    style: styles.contactBtn,\n    onPress: function onPress() {\n      changePassword();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.contactBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, \"Change Password\")))), React.createElement(View, {\n    style: styles.bottomNavigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, React.createElement(BottomTabNavigator, {\n    userData: userData,\n    setSettingModalVisible: setSettingModalVisible,\n    switchToScreen: switchToScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  })), React.createElement(SettingsOverlay, {\n    switchToScreen: switchToScreen,\n    settingModalVisible: settingModalVisible,\n    setSettingModalVisible: setSettingModalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  overlay: {\n    flex: 1,\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    backgroundColor: \"#dddddd\",\n    height: 300,\n    width: width,\n    elevation: 6\n  },\n  container: {\n    flexDirection: \"column\",\n    flex: 1,\n    width: null,\n    height: null\n  },\n  jobSeekerDashboard: {\n    flex: 9.2\n  },\n  headingText: {\n    fontWeight: \"800\",\n    fontSize: 30,\n    alignSelf: \"center\",\n    marginVertical: 15\n  },\n  bottomNavigation: {\n    flex: 0.8,\n    backgroundColor: \"#dddddd\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8\n  },\n  changePasswordContainer: {\n    marginHorizontal: 20\n  },\n  textInput: {\n    marginVertical: 10,\n    backgroundColor: \"#ffffff\",\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65\n  },\n  errorText: {\n    textTransform: \"capitalize\",\n    color: \"red\"\n  },\n  contactBtn: {\n    width: \"40%\",\n    height: 50,\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    borderColor: \"#dddddd\",\n    borderWidth: 1,\n    shadowColor: \"#9E9E9E\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 4.65\n  },\n  contactBtnText: {\n    color: \"white\"\n  },\n  loginText: {\n    color: \"black\",\n    fontSize: 30,\n    marginTop: 20,\n    marginLeft: 100\n  },\n  nextBtnText: {\n    color: \"black\",\n    fontSize: 20\n  },\n  loginBtn: {\n    width: \"20%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 550,\n    marginBottom: 100,\n    marginLeft: 300\n  }\n});\nexport default ChangePassword;","map":{"version":3,"sources":["D:/frontend/src/containers/job_seeker/ChangePassword.js"],"names":["React","useState","useEffect","BottomTabNavigator","SearchFilterBar","SettingsOverlay","FilterOverlay","_","AsyncStorage","baseUrl","Dimensions","get","width","height","ChangePassword","props","filterVisiblity","setFilterVisibility","settingModalVisible","setSettingModalVisible","userData","setUserData","jobSeekerData","setJobSeekerData","old_password","new_password","confirm_password","old_password_error","error","message","new_password_error","confirm_password_error","passwordObj","setPasswordObj","switchToScreen","screen","params","navigation","navigate","isEmpty","getItem","then","user","JSON","parse","console","log","handlePasswordChange","text","name","password","replace","confirmPasswordChange","changePassword","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","stringify","user_id","id","response","json","success","Error","alert","catch","err","styles","container","jobSeekerDashboard","headingText","changePasswordContainer","textInput","errorText","contactBtn","contactBtnText","bottomNavigation","StyleSheet","create","overlay","flex","position","left","top","backgroundColor","elevation","flexDirection","fontWeight","fontSize","alignSelf","marginVertical","shadowColor","shadowOffset","shadowOpacity","shadowRadius","marginHorizontal","paddingHorizontal","paddingVertical","textTransform","color","borderRadius","justifyContent","alignItems","borderColor","borderWidth","loginText","marginTop","marginLeft","nextBtnText","loginBtn","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport BottomTabNavigator from \"../../components/job_seeker/BottomTabNavigator\";\r\nimport SearchFilterBar from \"../../components/job_seeker/SearchFilterBar\";\r\nimport SettingsOverlay from \"../../components/job_seeker/SettingsOverlay\";\r\nimport FilterOverlay from \"../../components/job_seeker/FilterOverlay\";\r\nimport _ from \"lodash\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nimport { baseUrl } from \"../../utils/constants\";\r\n\r\n// We can use this to make the overlay fill the entire width\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\nconst ChangePassword = (props) => {\r\n  const [filterVisiblity, setFilterVisibility] = useState(false);\r\n  const [settingModalVisible, setSettingModalVisible] = useState(false);\r\n  const [userData, setUserData] = useState({});\r\n  const [jobSeekerData, setJobSeekerData] = useState({});\r\n  const [passwordObj, setPasswordObj] = useState({\r\n    old_password: null,\r\n    new_password: null,\r\n    confirm_password: null,\r\n    old_password_error: {\r\n      error: false,\r\n      message: null,\r\n    },\r\n    new_password_error: {\r\n      error: false,\r\n      message: null,\r\n    },\r\n    confirm_password_error: {\r\n      error: false,\r\n      message: null,\r\n    },\r\n  });\r\n\r\n  const {\r\n    old_password,\r\n    old_password_error,\r\n    new_password,\r\n    new_password_error,\r\n    confirm_password,\r\n    confirm_password_error,\r\n  } = passwordObj;\r\n\r\n  function switchToScreen(screen, params) {\r\n    props.navigation.navigate(screen, params);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (_.isEmpty(userData)) {\r\n      try {\r\n        AsyncStorage.getItem(\"userData\").then((user) => {\r\n          setUserData(JSON.parse(user));\r\n        });\r\n        AsyncStorage.getItem(\"jobSeekerData\").then((user) => {\r\n          setJobSeekerData(JSON.parse(user));\r\n        });\r\n      } catch (error) {\r\n        // Error retrieving data\r\n        console.log(error.message);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      console.log(\"clean up\");\r\n    };\r\n  }, []);\r\n\r\n  function handlePasswordChange(text, name) {\r\n    const password = { ...passwordObj };\r\n    password[name] = text;\r\n    if (_.isEmpty(text)) {\r\n      password[`${name}_error`] = {\r\n        error: true,\r\n        message: name.replace(\"_\", \" \") + \" is required.\",\r\n      };\r\n    } else {\r\n      password[`${name}_error`] = {\r\n        error: false,\r\n        message: null,\r\n      };\r\n    }\r\n    setPasswordObj(password);\r\n  }\r\n\r\n  function confirmPasswordChange(text, name) {\r\n    const password = { ...passwordObj };\r\n    password[name] = text;\r\n    if (_.isEmpty(text)) {\r\n      password[`${name}_error`] = {\r\n        error: true,\r\n        message: name.replace(\"_\", \" \") + \" is required.\",\r\n      };\r\n    } else {\r\n      console.log(password.new_password, text);\r\n      if (password.new_password !== text) {\r\n        password[`${name}_error`] = {\r\n          error: true,\r\n          message: \"Password not matched.\",\r\n        };\r\n      } else {\r\n        password[`${name}_error`] = {\r\n          error: false,\r\n          message: null,\r\n        };\r\n      }\r\n    }\r\n    setPasswordObj(password);\r\n    console.log(password);\r\n  }\r\n\r\n  function changePassword() {\r\n    if (\r\n      old_password_error &&\r\n      new_password &&\r\n      !old_password_error.error &&\r\n      !new_password_error.error &&\r\n      !confirm_password_error.error\r\n    ) {\r\n      fetch(baseUrl + \"api/login/change-password\", {\r\n        method: \"POST\",\r\n        mode: \"cors\", // no-cors, *cors, same-origin\r\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: \"same-origin\", // include, *same-origin, omit\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: \"follow\", // manual, *follow, error\r\n        referrerPolicy: \"no-referrer\",\r\n        body: JSON.stringify({\r\n          user_id: userData.id,\r\n          old_password,\r\n          new_password,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n          if (!response.success) throw new Error(response);\r\n          else {\r\n            alert(\"Password changed successfully.\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      alert(\"Check fields.\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.jobSeekerDashboard}>\r\n        <View>\r\n          <Text style={styles.headingText}>Change Password</Text>\r\n        </View>\r\n        <View style={styles.changePasswordContainer}>\r\n          <TextInput\r\n            name=\"old_password\"\r\n            secureTextEntry={true}\r\n            style={styles.textInput}\r\n            placeholder=\"Enter current password\"\r\n            onChangeText={(text) => handlePasswordChange(text, \"old_password\")}\r\n          />\r\n          {old_password_error.error ? (\r\n            <Text style={styles.errorText}>{old_password_error.message}</Text>\r\n          ) : null}\r\n          <TextInput\r\n            name=\"new_password\"\r\n            secureTextEntry={true}\r\n            style={styles.textInput}\r\n            placeholder=\"New password\"\r\n            onChangeText={(text) => handlePasswordChange(text, \"new_password\")}\r\n          />\r\n          {new_password_error.error ? (\r\n            <Text style={styles.errorText}>{new_password_error.message}</Text>\r\n          ) : null}\r\n          <TextInput\r\n            name=\"confirm_password\"\r\n            secureTextEntry={true}\r\n            style={styles.textInput}\r\n            placeholder=\"Confirm password\"\r\n            onChangeText={(text) =>\r\n              confirmPasswordChange(text, \"confirm_password\")\r\n            }\r\n          />\r\n          {confirm_password_error.error ? (\r\n            <Text style={styles.errorText}>\r\n              {confirm_password_error.message}\r\n            </Text>\r\n          ) : null}\r\n          <TouchableOpacity\r\n            style={styles.contactBtn}\r\n            onPress={() => {\r\n              changePassword();\r\n            }}\r\n          >\r\n            <Text style={styles.contactBtnText}>Change Password</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      <View style={styles.bottomNavigation}>\r\n        <BottomTabNavigator\r\n          userData={userData}\r\n          setSettingModalVisible={setSettingModalVisible}\r\n          switchToScreen={switchToScreen}\r\n        />\r\n      </View>\r\n      <SettingsOverlay\r\n        switchToScreen={switchToScreen}\r\n        settingModalVisible={settingModalVisible}\r\n        setSettingModalVisible={setSettingModalVisible}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  overlay: {\r\n    flex: 1,\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    backgroundColor: \"#dddddd\",\r\n    height: 300,\r\n    width,\r\n    elevation: 6,\r\n  },\r\n  container: {\r\n    flexDirection: \"column\",\r\n    flex: 1,\r\n    width: null,\r\n    height: null,\r\n  },\r\n  jobSeekerDashboard: {\r\n    flex: 9.2,\r\n  },\r\n  headingText: {\r\n    fontWeight: \"800\",\r\n    fontSize: 30,\r\n    alignSelf: \"center\",\r\n    marginVertical: 15,\r\n  },\r\n  bottomNavigation: {\r\n    flex: 0.8,\r\n    backgroundColor: \"#dddddd\",\r\n    shadowColor: \"#dddddd\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 4,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4.65,\r\n    elevation: 8,\r\n  },\r\n  changePasswordContainer: {\r\n    marginHorizontal: 20,\r\n  },\r\n  textInput: {\r\n    marginVertical: 10,\r\n    backgroundColor: \"#ffffff\",\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 10,\r\n    shadowColor: \"#dddddd\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 4,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4.65,\r\n  },\r\n  errorText: {\r\n    textTransform: \"capitalize\",\r\n    color: \"red\",\r\n  },\r\n  contactBtn: {\r\n    width: \"40%\",\r\n    height: 50,\r\n    backgroundColor: \"#fb5b5a\",\r\n    borderRadius: 25,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n    borderColor: \"#dddddd\",\r\n    borderWidth: 1,\r\n    shadowColor: \"#9E9E9E\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 4,\r\n    },\r\n    shadowOpacity: 0.8,\r\n    shadowRadius: 4.65,\r\n  },\r\n  contactBtnText: {\r\n    color: \"white\",\r\n  },\r\n  loginText: {\r\n    color: \"black\",\r\n    fontSize: 30,\r\n    marginTop: 20,\r\n    marginLeft: 100,\r\n  },\r\n  nextBtnText: {\r\n    color: \"black\",\r\n    fontSize: 20,\r\n  },\r\n  loginBtn: {\r\n    width: \"20%\",\r\n    backgroundColor: \"#fb5b5a\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 550,\r\n    marginBottom: 100,\r\n    marginLeft: 300,\r\n  },\r\n});\r\n\r\nexport default ChangePassword;\r\n"]},"metadata":{},"sourceType":"module"}