{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\frontend\\\\src\\\\containers\\\\HomeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Toast from \"react-native-root-toast\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { baseUrl } from \"../utils/constants\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#ffffff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputView: {\n    width: \"70%\",\n    backgroundColor: \"#64358D\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  text: {\n    fontSize: 30\n  },\n  inputText: {\n    height: 50,\n    color: \"white\"\n  },\n  forgot: {\n    color: \"black\",\n    fontSize: 11\n  },\n  error: {\n    color: \"red\",\n    fontSize: 12,\n    marginTop: 20,\n    marginLeft: 35,\n    justifyContent: \"center\"\n  },\n  loginBtn: {\n    width: \"70%\",\n    backgroundColor: \"#8fbc8f\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  loginText: {\n    color: \"white\"\n  },\n  signupBtn: {\n    width: \"70%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 10,\n    marginBottom: 10\n  },\n  signupBtnText: {\n    color: \"white\"\n  }\n});\n\nvar HomeScreen = function (_React$Component) {\n  _inherits(HomeScreen, _React$Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this, props);\n\n    _this.handleEmailChange = function (event) {\n      _this.setState({\n        email: event\n      });\n    };\n\n    _this.handlePasswordChange = function (event) {\n      _this.setState({\n        password: event\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      _this.loginUser();\n    };\n\n    _this.loginUser = function () {\n      console.log(\"login uesr\");\n      fetch(baseUrl + \"api/login/check\", {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\",\n        body: JSON.stringify(_this.state)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        if (response.success) {\n          _this.setState({\n            success: true\n          });\n\n          if (response.result.type == \"EMPLOYER\") {\n            AsyncStorage.setItem(\"employerLoginData\", JSON.stringify(response.result));\n\n            _this.props.navigation.navigate(\"EmployerScreen\", response.result);\n          } else _this.props.navigation.navigate(\"JobSeekerScreen\", response.result);\n        } else throw new Error(response);\n      }).catch(function (err) {\n        console.log(\"in error block\", err);\n\n        _this.setState({\n          err: \"Login Failed\",\n          success: false\n        });\n      });\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      success: true,\n      routeName: null\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/logo.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        name: \"email\",\n        type: \"text\",\n        style: styles.inputText,\n        placeholder: \"Email\",\n        placeholderTextColor: \"#dddddd\",\n        onChangeText: this.handleEmailChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        name: \"password\",\n        type: \"text\",\n        secureTextEntry: true,\n        style: styles.inputText,\n        placeholder: \"Password\",\n        placeholderTextColor: \"#dddddd\",\n        onChangeText: this.handlePasswordChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      })), React.createElement(Toast, {\n        visible: !this.state.success,\n        duration: Toast.durations.SHORT,\n        position: Toast.positions.BOTTOM,\n        backgroundColor: \"red\",\n        shadowColor: \"#dddddd\",\n        shadow: true,\n        animation: false,\n        hideOnPress: true,\n        onHidden: function onHidden() {\n          return _this2.setState({\n            success: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }, this.state.err), React.createElement(TouchableOpacity, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.forgot,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }, \"Forgot Password?\")), React.createElement(TouchableOpacity, {\n        style: styles.loginBtn,\n        onPress: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }\n      }, \"LOGIN\")), React.createElement(TouchableOpacity, {\n        style: styles.signupBtn,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"RegisterScr\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.signupBtnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }\n      }, \"SIGN UP\")));\n    }\n  }]);\n\n  return HomeScreen;\n}(React.Component);\n\nexport default HomeScreen;","map":{"version":3,"sources":["D:/frontend/src/containers/HomeScreen.js"],"names":["React","Toast","AsyncStorage","baseUrl","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","inputView","width","borderRadius","height","marginBottom","padding","text","fontSize","inputText","color","forgot","error","marginTop","marginLeft","loginBtn","loginText","signupBtn","signupBtnText","HomeScreen","props","handleEmailChange","event","setState","email","handlePasswordChange","password","handleSubmit","loginUser","console","log","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","state","then","response","json","success","result","type","setItem","navigation","navigate","Error","catch","err","routeName","image","require","durations","SHORT","positions","BOTTOM","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    Image,\r\n} from \"react-native\";\r\nimport Toast from \"react-native-root-toast\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\n\r\nimport { baseUrl } from \"../utils/constants\";\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#ffffff\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    inputView: {\r\n        width: \"70%\",\r\n        backgroundColor: \"#64358D\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        marginBottom: 20,\r\n        justifyContent: \"center\",\r\n        padding: 20,\r\n    },\r\n    text: {\r\n        fontSize: 30,\r\n    },\r\n    inputText: {\r\n        height: 50,\r\n        color: \"white\",\r\n    },\r\n    forgot: {\r\n        color: \"black\",\r\n        fontSize: 11,\r\n    },\r\n    error: {\r\n        color: \"red\",\r\n        fontSize: 12,\r\n        marginTop: 20,\r\n        marginLeft: 35,\r\n        justifyContent: \"center\",\r\n    },\r\n    loginBtn: {\r\n        width: \"70%\",\r\n        backgroundColor: \"#8fbc8f\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 40,\r\n        marginBottom: 10,\r\n    },\r\n    loginText: {\r\n        color: \"white\",\r\n    },\r\n    signupBtn: {\r\n        width: \"70%\",\r\n        backgroundColor: \"#fb5b5a\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n    },\r\n    signupBtnText: {\r\n        color: \"white\",\r\n    },\r\n});\r\n\r\nclass HomeScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            success: true,\r\n            routeName: null,\r\n        };\r\n    }\r\n\r\n    handleEmailChange = (event) => {\r\n        this.setState({\r\n            email: event,\r\n        });\r\n    };\r\n    handlePasswordChange = (event) => {\r\n        this.setState({\r\n            password: event,\r\n        });\r\n    };\r\n    handleSubmit = (event) => {\r\n        this.loginUser();\r\n    };\r\n\r\n    loginUser = () => {\r\n        console.log(\"login uesr\");\r\n        fetch(baseUrl + \"api/login/check\", {\r\n            method: \"POST\",\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer\",\r\n            body: JSON.stringify(this.state),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((response) => {\r\n                if (response.success) {\r\n                    this.setState({ success: true });\r\n                    // this.props.navigation.navigate('Login', {user_type:response.result.user_type})\r\n                    if (response.result.type == \"EMPLOYER\") {\r\n                        AsyncStorage.setItem(\r\n                            \"employerLoginData\",\r\n                            JSON.stringify(response.result)\r\n                        );\r\n                        this.props.navigation.navigate(\r\n                            \"EmployerScreen\",\r\n                            response.result\r\n                        );\r\n                    } else\r\n                        this.props.navigation.navigate(\r\n                            \"JobSeekerScreen\",\r\n                            response.result\r\n                        );\r\n                } else throw new Error(response);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"in error block\", err);\r\n                this.setState({ err: \"Login Failed\", success: false });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.image}>\r\n                    <Image source={require(\"../../assets/logo.png\")} />\r\n                </View>\r\n                <View style={styles.inputView}>\r\n                    <TextInput\r\n                        name=\"email\"\r\n                        type=\"text\"\r\n                        style={styles.inputText}\r\n                        placeholder=\"Email\"\r\n                        placeholderTextColor=\"#dddddd\"\r\n                        onChangeText={this.handleEmailChange}\r\n                    />\r\n                </View>\r\n                <View style={styles.inputView}>\r\n                    <TextInput\r\n                        name=\"password\"\r\n                        type=\"text\"\r\n                        secureTextEntry\r\n                        style={styles.inputText}\r\n                        placeholder=\"Password\"\r\n                        placeholderTextColor=\"#dddddd\"\r\n                        onChangeText={this.handlePasswordChange}\r\n                    />\r\n                </View>\r\n                <Toast\r\n                    visible={!this.state.success}\r\n                    duration={Toast.durations.SHORT}\r\n                    position={Toast.positions.BOTTOM}\r\n                    backgroundColor=\"red\"\r\n                    shadowColor=\"#dddddd\"\r\n                    shadow={true}\r\n                    animation={false}\r\n                    hideOnPress={true}\r\n                    onHidden={() => this.setState({ success: true })}\r\n                >\r\n                    {this.state.err}\r\n                </Toast>\r\n                <TouchableOpacity>\r\n                    <Text style={styles.forgot}>Forgot Password?</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    style={styles.loginBtn}\r\n                    onPress={this.handleSubmit}\r\n                >\r\n                    <Text style={styles.loginText}>LOGIN</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    style={styles.signupBtn}\r\n                    onPress={() =>\r\n                        this.props.navigation.navigate(\"RegisterScr\")\r\n                    }\r\n                >\r\n                    <Text style={styles.signupBtnText}>SIGN UP</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeScreen;\r\n"]},"metadata":{},"sourceType":"module"}