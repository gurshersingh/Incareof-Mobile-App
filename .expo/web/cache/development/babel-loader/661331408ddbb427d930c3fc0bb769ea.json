{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rahulsharma/Desktop/Project/frontend/src/components/job_seeker/FilterOverlay.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Slider from \"react-native-slider\";\nimport SearchFilterBar from \"./SearchFilterBar\";\nimport CheckBox from \"@react-native-community/checkbox\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { baseUrl } from \"../../utils/constants\";\nimport { ScrollView } from \"react-native-gesture-handler\";\n\nvar FilterOverlay = function FilterOverlay(_ref) {\n  var jobs = _ref.jobs,\n      handleFilterByText = _ref.handleFilterByText,\n      handleFilterByWager = _ref.handleFilterByWager,\n      filterVisiblity = _ref.filterVisiblity,\n      setFilterVisibility = _ref.setFilterVisibility,\n      handleSelectedService = _ref.handleSelectedService;\n\n  var _useState = useState(1000),\n      _useState2 = _slicedToArray(_useState, 2),\n      wager = _useState2[0],\n      setWager = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      date = _useState4[0],\n      setDate = _useState4[1];\n\n  var _useState5 = useState(\"date\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mode = _useState6[0],\n      setMode = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      show = _useState8[0],\n      setShow = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      services = _useState10[0],\n      setServices = _useState10[1];\n\n  var _useState11 = useState(new Map()),\n      _useState12 = _slicedToArray(_useState11, 2),\n      checkedService = _useState12[0],\n      setCheckedService = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      minWager = _useState14[0],\n      setMinWager = _useState14[1];\n\n  var _useState15 = useState(10000),\n      _useState16 = _slicedToArray(_useState15, 2),\n      maxWager = _useState16[0],\n      setMaxWager = _useState16[1];\n\n  function dateTimerPickerChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(Platform.OS === \"ios\");\n    setDate(currentDate);\n  }\n\n  function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  }\n\n  function showDatepicker() {\n    showMode(\"date\");\n  }\n\n  function searchByService(id) {\n    var isChecked = checkedService.get(id);\n    setCheckedService(new Map(checkedService.set(id, !isChecked)));\n    handleSelectedService(checkedService);\n  }\n\n  function getMinWager(jobsArr) {\n    var job = jobsArr.reduce(function (prevJob, currJob) {\n      parseInt(prevJob.wager_offered) < parseInt(currJob.wager_offered) ? prevJob : prevJob = currJob;\n      return prevJob;\n    });\n    return parseInt(job.wager_offered);\n  }\n\n  function getMaxWager(jobsArr) {\n    var job = jobsArr.reduce(function (prevJob, currJob) {\n      parseInt(prevJob.wager_offered) < parseInt(currJob.wager_offered) ? currJob : currJob = prevJob;\n      return currJob;\n    });\n    return parseInt(job.wager_offered);\n  }\n\n  useEffect(function () {\n    if (jobs.length > 0) {\n      setWager(getMinWager(jobs));\n      setMinWager(getMinWager(jobs));\n      setMaxWager(getMaxWager(jobs));\n    }\n\n    var api_url = baseUrl + \"api/service/list\";\n    fetch(api_url, {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\"\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      if (response.success) {\n        console.log(\"in filter overlay =============> \", response.result);\n        setServices(response.result);\n      } else {\n        throw new Error(response);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n    return function () {};\n  }, []);\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: filterVisiblity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      setFilterVisibility(!filterVisiblity);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [styles.modalView, {\n      backgroundColor: \"rgba(221, 221, 221, 1)\"\n    }],\n    onStartShouldSetResponder: function onStartShouldSetResponder(event) {\n      event.stopPropagation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, React.createElement(SearchFilterBar, {\n    handleFilterByText: handleFilterByText,\n    filterVisiblity: filterVisiblity,\n    setFilterVisibility: setFilterVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.sliderOuterContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.wagerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Wager:\"), React.createElement(View, {\n    style: styles.sliderContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, React.createElement(Slider, {\n    value: wager,\n    minimumValue: 0,\n    maximumValue: 10000,\n    step: 1,\n    thumbTintColor: \"#3fa4db\",\n    minimumTrackTintColor: \"#3fa4db\",\n    maximumTrackTintColor: \"#b3b3b3\",\n    trackStyle: styles.trackStyle,\n    thumbStyle: styles.thumbStyle,\n    onValueChange: function onValueChange(value) {\n      return setWager(value);\n    },\n    onSlidingComplete: function onSlidingComplete(value) {\n      return handleFilterByWager(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    style: styles.MainContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, React.createElement(FlatList, {\n    data: services,\n    showsVerticalScrollIndicator: false,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: \"column\",\n          margin: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.imageThumbnail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 19\n        }\n      }, React.createElement(CheckBox, {\n        value: checkedService.get(item.id),\n        onValueChange: function onValueChange() {\n          return searchByService(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }\n      }, item.service_name)));\n    },\n    numColumns: 2,\n    keyExtractor: function keyExtractor(item, index) {\n      return index;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    backgroundColor: \"#388e3c\",\n    opacity: 0.8\n  },\n  modalView: {\n    alignItems: \"center\",\n    height: 300,\n    backgroundColor: \"rgba(221, 221, 221, 0.9)\",\n    flexDirection: \"column\",\n    elevation: 5\n  },\n  contBtn: {\n    backgroundColor: \"#f8bbd0\",\n    borderRadius: 35,\n    marginHorizontal: 20,\n    padding: 15,\n    opacity: 1,\n    elevation: 10\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  contactIcons: {\n    fontSize: 30,\n    color: \"#ffffff\"\n  },\n  sliderOuterContainer: {\n    marginVertical: 10,\n    flexDirection: \"row\",\n    marginHorizontal: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  wagerText: {\n    fontWeight: \"700\"\n  },\n  sliderContainer: {\n    flex: 1,\n    alignItems: \"stretch\",\n    marginLeft: 15,\n    justifyContent: \"center\"\n  },\n  trackStyle: {\n    shadowColor: \"#3fa4db\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 6\n  },\n  thumbStyle: {\n    backgroundColor: \"#3fa4db\",\n    shadowColor: \"#3fa4db\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 10\n  },\n  datePickerContainer: {\n    flexDirection: \"row\",\n    marginHorizontal: 20\n  },\n  inputView: {\n    flex: 1,\n    backgroundColor: \"#ffffff\",\n    borderColor: \"#9E9E9E\",\n    borderWidth: 1,\n    borderRadius: 25,\n    paddingHorizontal: 15,\n    height: 40,\n    justifyContent: \"center\"\n  },\n  inputText: {\n    height: 40,\n    color: \"#333333\"\n  },\n  scrollViewContainer: {\n    marginVertical: 20\n  },\n  MainContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginHorizontal: 20,\n    marginVertical: 15,\n    flex: 1\n  },\n  imageThumbnail: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\"\n  }\n});\nexport default FilterOverlay;","map":{"version":3,"sources":["/Users/rahulsharma/Desktop/Project/frontend/src/components/job_seeker/FilterOverlay.js"],"names":["React","useState","useEffect","Slider","SearchFilterBar","CheckBox","DateTimePicker","baseUrl","ScrollView","FilterOverlay","jobs","handleFilterByText","handleFilterByWager","filterVisiblity","setFilterVisibility","handleSelectedService","wager","setWager","Date","date","setDate","mode","setMode","show","setShow","services","setServices","Map","checkedService","setCheckedService","minWager","setMinWager","maxWager","setMaxWager","dateTimerPickerChange","event","selectedDate","currentDate","Platform","OS","showMode","currentMode","showDatepicker","searchByService","id","isChecked","get","set","getMinWager","jobsArr","job","reduce","prevJob","currJob","parseInt","wager_offered","getMaxWager","length","api_url","fetch","method","cache","credentials","headers","redirect","referrerPolicy","then","response","json","success","console","log","result","Error","catch","err","styles","centeredView","modalView","backgroundColor","stopPropagation","sliderOuterContainer","wagerText","sliderContainer","trackStyle","thumbStyle","value","MainContainer","item","flex","flexDirection","margin","imageThumbnail","service_name","index","StyleSheet","create","opacity","alignItems","height","elevation","contBtn","borderRadius","marginHorizontal","padding","textStyle","color","fontWeight","textAlign","modalText","marginBottom","contactIcons","fontSize","marginVertical","justifyContent","marginLeft","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","datePickerContainer","inputView","borderColor","borderWidth","paddingHorizontal","inputText","scrollViewContainer"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {\n  StyleSheet,\n  Modal,\n  TouchableOpacity,\n  View,\n  Text,\n  TextInput,\n  FlatList,\n} from \"react-native\";\nimport Slider from \"react-native-slider\";\nimport SearchFilterBar from \"./SearchFilterBar\";\nimport CheckBox from \"@react-native-community/checkbox\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport {baseUrl} from \"../../utils/constants\";\nimport {ScrollView} from \"react-native-gesture-handler\";\n\nconst FilterOverlay = ({\n  jobs,\n  handleFilterByText,\n  handleFilterByWager,\n  filterVisiblity,\n  setFilterVisibility,\n  handleSelectedService,\n}) => {\n  const [wager, setWager] = useState(1000);\n  const [date, setDate] = useState(new Date());\n  const [mode, setMode] = useState(\"date\");\n  const [show, setShow] = useState(false);\n  const [services, setServices] = useState([]);\n  const [checkedService, setCheckedService] = useState(new Map());\n  const [minWager, setMinWager] = useState(0);\n  const [maxWager, setMaxWager] = useState(10000);\n\n  function dateTimerPickerChange(event, selectedDate) {\n    const currentDate = selectedDate || date;\n    setShow(Platform.OS === \"ios\");\n    setDate(currentDate);\n  }\n\n  function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  }\n\n  function showDatepicker() {\n    showMode(\"date\");\n  }\n\n  function searchByService(id) {\n    const isChecked = checkedService.get(id);\n    setCheckedService(new Map(checkedService.set(id, !isChecked)));\n    handleSelectedService(checkedService);\n  }\n\n  function getMinWager(jobsArr) {\n    const job = jobsArr.reduce(function (prevJob, currJob) {\n      parseInt(prevJob.wager_offered) < parseInt(currJob.wager_offered)\n        ? prevJob\n        : (prevJob = currJob);\n      return prevJob;\n    });\n    return parseInt(job.wager_offered);\n  }\n\n  function getMaxWager(jobsArr) {\n    const job = jobsArr.reduce(function (prevJob, currJob) {\n      parseInt(prevJob.wager_offered) < parseInt(currJob.wager_offered)\n        ? currJob\n        : (currJob = prevJob);\n      return currJob;\n    });\n    return parseInt(job.wager_offered);\n  }\n\n  useEffect(() => {\n    if (jobs.length > 0) {\n      setWager(getMinWager(jobs));\n      setMinWager(getMinWager(jobs));\n      setMaxWager(getMaxWager(jobs));\n    }\n    const api_url = baseUrl + `api/service/list`;\n    fetch(api_url, {\n      method: \"GET\",\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\",\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.success) {\n          console.log(\"in filter overlay =============> \", response.result);\n          setServices(response.result);\n        } else {\n          throw new Error(response);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    return () => {};\n  }, []);\n\n  return (\n    <Modal animationType=\"slide\" transparent={true} visible={filterVisiblity}>\n      <View\n        style={styles.centeredView}\n        onStartShouldSetResponder={() => {\n          setFilterVisibility(!filterVisiblity);\n        }}\n      >\n        <View\n          style={[\n            styles.modalView,\n            {backgroundColor: \"rgba(221, 221, 221, 1)\"},\n          ]}\n          onStartShouldSetResponder={(event) => {\n            event.stopPropagation();\n          }}\n        >\n          <SearchFilterBar\n            handleFilterByText={handleFilterByText}\n            filterVisiblity={filterVisiblity}\n            setFilterVisibility={setFilterVisibility}\n          />\n          <View style={styles.sliderOuterContainer}>\n            <Text style={styles.wagerText}>Wager:</Text>\n            <View style={styles.sliderContainer}>\n              <Slider\n                value={wager}\n                minimumValue={0}\n                maximumValue={10000}\n                step={1}\n                thumbTintColor=\"#3fa4db\"\n                minimumTrackTintColor=\"#3fa4db\"\n                maximumTrackTintColor=\"#b3b3b3\"\n                trackStyle={styles.trackStyle}\n                thumbStyle={styles.thumbStyle}\n                onValueChange={(value) => setWager(value)}\n                onSlidingComplete={(value) => handleFilterByWager(value)}\n              />\n            </View>\n          </View>\n          {/*<View style={styles.datePickerContainer}>\n            <View style={styles.inputView}>\n              <TouchableOpacity onPress={showDatepicker}>\n                <TextInput\n                  name=\"created_at\"\n                  type=\"text\"\n                  style={styles.inputText}\n                  placeholder=\"Filter by job post date\"\n                  placeholderTextColor=\"#dddddd\"\n                  editable={false}\n                  value={date.toLocaleDateString(\"nl\", {\n                    year: \"numeric\",\n                    month: \"2-digit\",\n                    day: \"2-digit\",\n                  })}\n                  pointerEvents=\"none\"\n                />\n              </TouchableOpacity>\n              {show && (\n                <DateTimePicker\n                  testID=\"dateTimePicker\"\n                  timeZoneOffsetInMinutes={0}\n                  value={date}\n                  mode={mode}\n                  is24Hour={true}\n                  display=\"default\"\n                  onChange={dateTimerPickerChange}\n                />\n              )}\n              </View>\n          </View>*/}\n          <View style={styles.MainContainer}>\n            <FlatList\n              data={services}\n              showsVerticalScrollIndicator={false}\n              renderItem={({item}) => (\n                <View style={{flex: 1, flexDirection: \"column\", margin: 1}}>\n                  <View style={styles.imageThumbnail}>\n                    <CheckBox\n                      value={checkedService.get(item.id)}\n                      onValueChange={() => searchByService(item.id)}\n                    />\n                    <Text>{item.service_name}</Text>\n                  </View>\n                </View>\n              )}\n              //Setting the number of column\n              numColumns={2}\n              keyExtractor={(item, index) => index}\n            />\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    backgroundColor: \"#388e3c\",\n    opacity: 0.8,\n  },\n  modalView: {\n    alignItems: \"center\",\n    height: 300,\n    backgroundColor: \"rgba(221, 221, 221, 0.9)\",\n    flexDirection: \"column\",\n    elevation: 5,\n  },\n  contBtn: {\n    backgroundColor: \"#f8bbd0\",\n    borderRadius: 35,\n    marginHorizontal: 20,\n    padding: 15,\n    opacity: 1,\n    elevation: 10,\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n  },\n  contactIcons: {\n    fontSize: 30,\n    color: \"#ffffff\",\n  },\n  sliderOuterContainer: {\n    marginVertical: 10,\n    flexDirection: \"row\",\n    marginHorizontal: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  wagerText: {\n    fontWeight: \"700\",\n  },\n  sliderContainer: {\n    flex: 1,\n    alignItems: \"stretch\",\n    marginLeft: 15,\n    justifyContent: \"center\",\n  },\n  trackStyle: {\n    shadowColor: \"#3fa4db\",\n    shadowOffset: {\n      width: 0,\n      height: 4,\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 6,\n  },\n  thumbStyle: {\n    backgroundColor: \"#3fa4db\",\n    shadowColor: \"#3fa4db\",\n    shadowOffset: {\n      width: 0,\n      height: 4,\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 10,\n  },\n  datePickerContainer: {\n    flexDirection: \"row\",\n    marginHorizontal: 20,\n  },\n  inputView: {\n    flex: 1,\n    backgroundColor: \"#ffffff\",\n    borderColor: \"#9E9E9E\",\n    borderWidth: 1,\n    borderRadius: 25,\n    paddingHorizontal: 15,\n    height: 40,\n    justifyContent: \"center\",\n  },\n  inputText: {\n    height: 40,\n    color: \"#333333\",\n  },\n  scrollViewContainer: {\n    marginVertical: 20,\n  },\n  MainContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginHorizontal: 20,\n    marginVertical: 15,\n    flex: 1,\n  },\n\n  imageThumbnail: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n  },\n});\n\nexport default FilterOverlay;\n"]},"metadata":{},"sourceType":"module"}