{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\frontend\\\\src\\\\components\\\\employer\\\\EmployerSettingsOverlay.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport _ from \"lodash\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nvar EmployerSettingsOverlay = function EmployerSettingsOverlay(_ref) {\n  var switchToScreen = _ref.switchToScreen,\n      settingModalVisible = _ref.settingModalVisible,\n      setSettingModalVisible = _ref.setSettingModalVisible;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      employerLoginData = _useState2[0],\n      setEmployerLoginData = _useState2[1];\n\n  function backPressed() {\n    Alert.alert(\"Exit App\", \"Do you want to exit?\", [{\n      text: \"No\",\n      onPress: function onPress() {\n        return console.log(\"Cancel Pressed\");\n      },\n      style: \"cancel\"\n    }, {\n      text: \"Yes\",\n      onPress: function onPress() {\n        try {\n          AsyncStorage.removeItem(\"employerLoginData\");\n          BackHandler.exitApp();\n        } catch (e) {}\n      }\n    }], {\n      cancelable: false\n    });\n    return true;\n  }\n\n  useEffect(function () {\n    try {\n      AsyncStorage.getItem(\"employerLoginData\").then(function (data) {\n        var _JSON$parse = JSON.parse(data),\n            login = _JSON$parse.login,\n            user = _JSON$parse.user;\n\n        setEmployerLoginData(login);\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, []);\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: settingModalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      setSettingModalVisible(!settingModalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      setSettingModalVisible(false);\n      switchToScreen(\"EmployerProfile1\", employerLoginData);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, React.createElement(AntDesign, {\n    name: \"user\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })), React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      setSettingModalVisible(false);\n      switchToScreen(\"ChangeEmployerPassword\", employerLoginData);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, React.createElement(AntDesign, {\n    name: \"setting\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      console.log(\"Question clicked\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, React.createElement(AntDesign, {\n    name: \"question\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  })), React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      console.log(\"Books clicked\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, React.createElement(AntDesign, {\n    name: \"book\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      backPressed();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, React.createElement(AntDesign, {\n    name: \"logout\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flexDirection: \"column\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#388e3c\",\n    opacity: 0.8\n  },\n  modalView: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    marginVertical: 15,\n    elevation: 5\n  },\n  contBtn: {\n    backgroundColor: \"#ffffff\",\n    borderRadius: 35,\n    marginHorizontal: 20,\n    padding: 15,\n    opacity: 1,\n    elevation: 10\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  contactIcons: {\n    fontSize: 30\n  }\n});\nexport default EmployerSettingsOverlay;","map":{"version":3,"sources":["D:/frontend/src/components/employer/EmployerSettingsOverlay.js"],"names":["React","useState","useEffect","_","AntDesign","AsyncStorage","EmployerSettingsOverlay","switchToScreen","settingModalVisible","setSettingModalVisible","employerLoginData","setEmployerLoginData","backPressed","Alert","alert","text","onPress","console","log","style","removeItem","BackHandler","exitApp","e","cancelable","getItem","then","data","JSON","parse","login","user","error","message","styles","centeredView","modalView","contBtn","event","stopPropagation","contactIcons","StyleSheet","create","flexDirection","flex","justifyContent","alignItems","backgroundColor","opacity","marginVertical","elevation","borderRadius","marginHorizontal","padding","textStyle","color","fontWeight","textAlign","modalText","marginBottom","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Modal,\r\n  TouchableHighlight,\r\n  View,\r\n  BackHandler,\r\n  Alert,\r\n} from \"react-native\";\r\nimport _ from \"lodash\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\n\r\nconst EmployerSettingsOverlay = ({\r\n  switchToScreen,\r\n  settingModalVisible,\r\n  setSettingModalVisible,\r\n}) => {\r\n  const [employerLoginData, setEmployerLoginData] = useState({});\r\n\r\n  function backPressed() {\r\n    Alert.alert(\r\n      \"Exit App\",\r\n      \"Do you want to exit?\",\r\n      [\r\n        {\r\n          text: \"No\",\r\n          onPress: () => console.log(\"Cancel Pressed\"),\r\n          style: \"cancel\",\r\n        },\r\n        {\r\n          text: \"Yes\",\r\n          onPress: () => {\r\n            try {\r\n              AsyncStorage.removeItem(\"employerLoginData\");\r\n              BackHandler.exitApp();\r\n            } catch (e) {\r\n              // remove error\r\n            }\r\n          },\r\n        },\r\n      ],\r\n      { cancelable: false }\r\n    );\r\n    return true;\r\n  }\r\n\r\n  useEffect(() => {\r\n    try {\r\n      AsyncStorage.getItem(\"employerLoginData\").then((data) => {\r\n        const { login, user } = JSON.parse(data);\r\n        setEmployerLoginData(login);\r\n      });\r\n    } catch (error) {\r\n      // Error retrieving data\r\n      console.log(error.message);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Modal\r\n      animationType=\"slide\"\r\n      transparent={true}\r\n      visible={settingModalVisible}\r\n      onRequestClose={() => {\r\n        Alert.alert(\"Modal has been closed.\");\r\n      }}\r\n    >\r\n      <View\r\n        style={styles.centeredView}\r\n        onStartShouldSetResponder={() => {\r\n          setSettingModalVisible(!settingModalVisible);\r\n        }}\r\n      >\r\n        <View style={styles.modalView}>\r\n          <TouchableHighlight\r\n            style={styles.contBtn}\r\n            onPress={(event) => {\r\n              event.stopPropagation();\r\n              setSettingModalVisible(false);\r\n              switchToScreen(\"EmployerProfile1\", employerLoginData);\r\n            }}\r\n          >\r\n            <AntDesign name=\"user\" style={styles.contactIcons} />\r\n          </TouchableHighlight>\r\n          <TouchableHighlight\r\n            style={styles.contBtn}\r\n            onPress={(event) => {\r\n              event.stopPropagation();\r\n              setSettingModalVisible(false);\r\n              switchToScreen(\"ChangeEmployerPassword\", employerLoginData);\r\n            }}\r\n          >\r\n            <AntDesign name=\"setting\" style={styles.contactIcons} />\r\n          </TouchableHighlight>\r\n        </View>\r\n        <View style={styles.modalView}>\r\n          <TouchableHighlight\r\n            style={styles.contBtn}\r\n            onPress={(event) => {\r\n              event.stopPropagation();\r\n              console.log(\"Question clicked\");\r\n            }}\r\n          >\r\n            <AntDesign name=\"question\" style={styles.contactIcons} />\r\n          </TouchableHighlight>\r\n          <TouchableHighlight\r\n            style={styles.contBtn}\r\n            onPress={(event) => {\r\n              event.stopPropagation();\r\n              console.log(\"Books clicked\");\r\n            }}\r\n          >\r\n            <AntDesign name=\"book\" style={styles.contactIcons} />\r\n          </TouchableHighlight>\r\n        </View>\r\n        <View style={styles.modalView}>\r\n          <TouchableHighlight\r\n            style={styles.contBtn}\r\n            onPress={(event) => {\r\n              event.stopPropagation();\r\n              backPressed();\r\n            }}\r\n          >\r\n            <AntDesign name=\"logout\" style={styles.contactIcons} />\r\n          </TouchableHighlight>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n    flexDirection: \"column\",\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#388e3c\",\r\n    opacity: 0.8,\r\n  },\r\n  modalView: {\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    marginVertical: 15,\r\n    elevation: 5,\r\n  },\r\n  contBtn: {\r\n    backgroundColor: \"#ffffff\",\r\n    borderRadius: 35,\r\n    marginHorizontal: 20,\r\n    padding: 15,\r\n    opacity: 1,\r\n    elevation: 10,\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n  contactIcons: {\r\n    fontSize: 30,\r\n  },\r\n});\r\n\r\nexport default EmployerSettingsOverlay;\r\n"]},"metadata":{},"sourceType":"module"}