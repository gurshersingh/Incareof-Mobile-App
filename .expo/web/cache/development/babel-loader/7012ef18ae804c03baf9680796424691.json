{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/rahulsharma/Desktop/Project/frontend/src/components/employer/EmployerImageUploadOverlay.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport Constants from \"expo-constants\";\nimport * as Permissions from \"expo-permissions\";\n\nvar EmployerImageUploadOverlay = function EmployerImageUploadOverlay(_ref) {\n  var modalVisible = _ref.modalVisible,\n      setModalVisible = _ref.setModalVisible,\n      setImageData = _ref.setImageData;\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 0.4\n            }));\n\n          case 3:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              setImageData(result.uri);\n            } else {\n              console.log(result);\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var imageFromCamera = function imageFromCamera() {\n    var _await$Permissions$as, cameraPerm, _await$Permissions$as2, cameraRollPerm, pickerResult;\n\n    return _regeneratorRuntime.async(function imageFromCamera$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n          case 2:\n            _await$Permissions$as = _context2.sent;\n            cameraPerm = _await$Permissions$as.status;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n          case 6:\n            _await$Permissions$as2 = _context2.sent;\n            cameraRollPerm = _await$Permissions$as2.status;\n\n            if (!(cameraPerm === \"granted\" && cameraRollPerm === \"granted\")) {\n              _context2.next = 13;\n              break;\n            }\n\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 0.4\n            }));\n\n          case 11:\n            pickerResult = _context2.sent;\n\n            if (!pickerResult.cancelled) {\n              setImageData(pickerResult.uri);\n            }\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      pickImage();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, React.createElement(Ionicons, {\n    name: \"md-images\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  })), React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"Upload from Gallery\")), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      imageFromCamera();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, React.createElement(Ionicons, {\n    name: \"md-camera\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  })), React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"Open Camera\")))));\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#388e3c\",\n    opacity: 0.8\n  },\n  modalView: {\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    elevation: 5\n  },\n  contBtn: {\n    alignSelf: \"center\",\n    backgroundColor: \"#f8bbd0\",\n    borderRadius: 50,\n    marginVertical: 20,\n    padding: 15,\n    opacity: 1,\n    elevation: 10\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  contactIcons: {\n    fontSize: 40,\n    color: \"#ffffff\"\n  }\n});\nexport default EmployerImageUploadOverlay;","map":{"version":3,"sources":["/Users/rahulsharma/Desktop/Project/frontend/src/components/employer/EmployerImageUploadOverlay.js"],"names":["React","useState","Ionicons","ImagePicker","Constants","Permissions","EmployerImageUploadOverlay","modalVisible","setModalVisible","setImageData","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","result","cancelled","uri","console","log","imageFromCamera","askAsync","CAMERA","cameraPerm","status","CAMERA_ROLL","cameraRollPerm","launchCameraAsync","pickerResult","styles","centeredView","modalView","contBtn","event","stopPropagation","contactIcons","textStyle","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","opacity","flexDirection","elevation","alignSelf","borderRadius","marginVertical","padding","color","fontWeight","textAlign","modalText","marginBottom","fontSize"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {StyleSheet, Modal, TouchableHighlight, View, Text} from \"react-native\";\nimport {Ionicons} from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport Constants from \"expo-constants\";\nimport * as Permissions from \"expo-permissions\";\n\nconst EmployerImageUploadOverlay = ({\n    modalVisible,\n    setModalVisible,\n    setImageData,\n}) => {\n    const pickImage = async () => {\n        try {\n            const result = await ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.Images,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 0.4,\n            });\n\n            if (!result.cancelled) {\n                setImageData(result.uri);\n            } else {\n                console.log(result);\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const imageFromCamera = async () => {\n        const {status: cameraPerm} = await Permissions.askAsync(\n            Permissions.CAMERA\n        );\n\n        const {status: cameraRollPerm} = await Permissions.askAsync(\n            Permissions.CAMERA_ROLL\n        );\n\n        // only if user allows permission to camera AND camera roll\n        if (cameraPerm === \"granted\" && cameraRollPerm === \"granted\") {\n            const pickerResult = await ImagePicker.launchCameraAsync({\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 0.4,\n            });\n\n            if (!pickerResult.cancelled) {\n                setImageData(pickerResult.uri);\n            }\n        }\n    };\n\n    return (\n        <Modal animationType=\"slide\" transparent={true} visible={modalVisible}>\n            <View\n                style={styles.centeredView}\n                onStartShouldSetResponder={() => {\n                    setModalVisible(!modalVisible);\n                }}\n            >\n                <View style={styles.modalView}>\n                    <View>\n                        <TouchableHighlight\n                            style={styles.contBtn}\n                            onPress={(event) => {\n                                event.stopPropagation();\n                                pickImage();\n                            }}\n                        >\n                            <Ionicons\n                                name=\"md-images\"\n                                style={styles.contactIcons}\n                            />\n                        </TouchableHighlight>\n                        <Text style={styles.textStyle}>\n                            Upload from Gallery\n                        </Text>\n                    </View>\n                    <View>\n                        <TouchableHighlight\n                            style={styles.contBtn}\n                            onPress={(event) => {\n                                event.stopPropagation();\n                                imageFromCamera();\n                            }}\n                        >\n                            <Ionicons\n                                name=\"md-camera\"\n                                style={styles.contactIcons}\n                            />\n                        </TouchableHighlight>\n                        <Text style={styles.textStyle}>Open Camera</Text>\n                    </View>\n                </View>\n            </View>\n        </Modal>\n    );\n};\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#388e3c\",\n        opacity: 0.8,\n    },\n    modalView: {\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        elevation: 5,\n    },\n    contBtn: {\n        alignSelf: \"center\",\n        backgroundColor: \"#f8bbd0\",\n        borderRadius: 50,\n        marginVertical: 20,\n        padding: 15,\n        opacity: 1,\n        elevation: 10,\n    },\n    textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: \"center\",\n    },\n    contactIcons: {\n        fontSize: 40,\n        color: \"#ffffff\",\n    },\n});\n\nexport default EmployerImageUploadOverlay;\n"]},"metadata":{},"sourceType":"module"}