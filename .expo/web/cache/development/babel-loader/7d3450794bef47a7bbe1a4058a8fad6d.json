{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rahulsharma/Desktop/Project/frontend/src/components/employer/ChangeEmployerPassword.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport EmployerSearchFilter from \"./EmployerSearchFilter\";\nimport EmployerBottomNavigator from \"./EmployerBottomNavigator\";\nimport EmployerFilterOverlay from \"./EmployerFilterOverlay\";\nimport UserContactOverlay from \"./UserContactOverlay\";\nimport EmployerSettingsOverlay from \"./EmployerSettingsOverlay\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nvar ChangeEmployerPassword = function ChangeEmployerPassword(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filterVisiblity = _useState4[0],\n      setFilterVisibility = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      settingModalVisible = _useState6[0],\n      setSettingModalVisible = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      employerLoginData = _useState8[0],\n      setEmployerLoginData = _useState8[1];\n\n  var _useState9 = useState({\n    old_password: null,\n    new_password: null,\n    confirm_password: null,\n    old_password_error: {\n      error: false,\n      message: null\n    },\n    new_password_error: {\n      error: false,\n      message: null\n    },\n    confirm_password_error: {\n      error: false,\n      message: null\n    }\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      passwordObj = _useState10[0],\n      setPasswordObj = _useState10[1];\n\n  function switchToScreen(screen, params) {\n    props.navigation.navigate(screen, params);\n  }\n\n  useEffect(function () {\n    try {\n      AsyncStorage.getItem(\"employerLoginData\").then(function (employer) {\n        setEmployerLoginData(JSON.parse(employer));\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, []);\n  var old_password = passwordObj.old_password,\n      old_password_error = passwordObj.old_password_error,\n      new_password = passwordObj.new_password,\n      new_password_error = passwordObj.new_password_error,\n      confirm_password = passwordObj.confirm_password,\n      confirm_password_error = passwordObj.confirm_password_error;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.jobSeekerDashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: \"stretch\",\n      marginVertical: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.headingText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Change Password\")), React.createElement(View, {\n    style: styles.changePasswordContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    name: \"old_password\",\n    secureTextEntry: true,\n    style: styles.textInput,\n    placeholder: \"Enter current password\",\n    onChangeText: function onChangeText(text) {\n      return handlePasswordChange(text, \"old_password\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), old_password_error.error ? React.createElement(Text, {\n    style: styles.errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, old_password_error.message) : null, React.createElement(TextInput, {\n    name: \"new_password\",\n    secureTextEntry: true,\n    style: styles.textInput,\n    placeholder: \"New password\",\n    onChangeText: function onChangeText(text) {\n      return handlePasswordChange(text, \"new_password\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), new_password_error.error ? React.createElement(Text, {\n    style: styles.errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, new_password_error.message) : null, React.createElement(TextInput, {\n    name: \"confirm_password\",\n    secureTextEntry: true,\n    style: styles.textInput,\n    placeholder: \"Confirm password\",\n    onChangeText: function onChangeText(text) {\n      return confirmPasswordChange(text, \"confirm_password\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }), confirm_password_error.error ? React.createElement(Text, {\n    style: styles.errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, confirm_password_error.message) : null, React.createElement(TouchableOpacity, {\n    style: styles.contactBtn,\n    onPress: function onPress() {\n      changePassword();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.contactBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, \"Change Password\")))), React.createElement(View, {\n    style: styles.bottomNavigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, React.createElement(EmployerBottomNavigator, {\n    employerLoginData: employerLoginData,\n    setSettingModalVisible: setSettingModalVisible,\n    switchToScreen: switchToScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  })), React.createElement(EmployerSettingsOverlay, {\n    switchToScreen: switchToScreen,\n    settingModalVisible: settingModalVisible,\n    setSettingModalVisible: setSettingModalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    flex: 1,\n    width: null,\n    height: null\n  },\n  jobSeekerDashboard: {\n    flex: 9.2\n  },\n  bottomNavigation: {\n    flex: 0.8,\n    backgroundColor: \"#dddddd\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8\n  },\n  changePasswordContainer: {\n    marginHorizontal: 20\n  },\n  headingText: {\n    fontWeight: '800',\n    fontSize: 30,\n    alignSelf: \"center\"\n  },\n  textInput: {\n    marginVertical: 10,\n    backgroundColor: \"#ffffff\",\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65\n  },\n  errorText: {\n    textTransform: \"capitalize\",\n    color: \"red\"\n  },\n  contactBtn: {\n    width: \"40%\",\n    height: 50,\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    justifyContent: \"center\",\n    marginVertical: 15,\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    borderColor: \"#dddddd\",\n    borderWidth: 1,\n    shadowColor: \"#9E9E9E\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 4.65\n  },\n  contactBtnText: {\n    color: \"white\"\n  },\n  loginText: {\n    color: \"black\",\n    fontSize: 30,\n    marginTop: 20,\n    marginLeft: 100\n  },\n  nextBtnText: {\n    color: \"black\",\n    fontSize: 20\n  },\n  loginBtn: {\n    width: \"20%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 550,\n    marginBottom: 100,\n    marginLeft: 300\n  }\n});\nexport default ChangeEmployerPassword;","map":{"version":3,"sources":["/Users/rahulsharma/Desktop/Project/frontend/src/components/employer/ChangeEmployerPassword.js"],"names":["React","useState","useEffect","EmployerSearchFilter","EmployerBottomNavigator","EmployerFilterOverlay","UserContactOverlay","EmployerSettingsOverlay","AsyncStorage","ChangeEmployerPassword","props","modalVisible","setModalVisible","filterVisiblity","setFilterVisibility","settingModalVisible","setSettingModalVisible","employerLoginData","setEmployerLoginData","old_password","new_password","confirm_password","old_password_error","error","message","new_password_error","confirm_password_error","passwordObj","setPasswordObj","switchToScreen","screen","params","navigation","navigate","getItem","then","employer","JSON","parse","console","log","styles","container","jobSeekerDashboard","alignItems","marginVertical","headingText","changePasswordContainer","textInput","text","handlePasswordChange","errorText","confirmPasswordChange","contactBtn","changePassword","contactBtnText","bottomNavigation","StyleSheet","create","flexDirection","flex","width","height","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginHorizontal","fontWeight","fontSize","alignSelf","paddingHorizontal","paddingVertical","textTransform","color","borderRadius","justifyContent","borderColor","borderWidth","loginText","marginTop","marginLeft","nextBtnText","loginBtn","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, TextInput, TouchableOpacity, View, SafeAreaView } from 'react-native';\nimport EmployerSearchFilter from './EmployerSearchFilter';\nimport EmployerBottomNavigator from './EmployerBottomNavigator';\nimport EmployerFilterOverlay from './EmployerFilterOverlay';\nimport UserContactOverlay from './UserContactOverlay';\nimport EmployerSettingsOverlay from './EmployerSettingsOverlay';\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nconst ChangeEmployerPassword = (props) => {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [filterVisiblity, setFilterVisibility] = useState(false);\n    const [settingModalVisible, setSettingModalVisible] = useState(false);\n    const [employerLoginData, setEmployerLoginData] = useState({});\n    const [passwordObj, setPasswordObj] = useState({\n        old_password: null,\n        new_password: null,\n        confirm_password: null,\n        old_password_error: {\n            error: false,\n            message: null,\n        },\n        new_password_error: {\n            error: false,\n            message: null,\n        },\n        confirm_password_error: {\n            error: false,\n            message: null,\n        },\n    });\n\n    function switchToScreen(screen, params) {\n        props.navigation.navigate(screen, params);\n    }\n\n    useEffect(() => {\n        try {\n            AsyncStorage.getItem(\"employerLoginData\").then((employer) => {\n                setEmployerLoginData(JSON.parse(employer));\n            });\n        } catch (error) {\n            // Error retrieving data\n            console.log(error.message);\n        }\n    }, [])\n\n    const {\n        old_password,\n        old_password_error,\n        new_password,\n        new_password_error,\n        confirm_password,\n        confirm_password_error,\n    } = passwordObj;\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.jobSeekerDashboard}>\n                <View style={{ alignItems: \"stretch\", marginVertical: 20 }}>\n                    <Text style={styles.headingText}>Change Password</Text>\n                </View>\n                <View style={styles.changePasswordContainer}>\n                    <TextInput\n                        name=\"old_password\"\n                        secureTextEntry={true}\n                        style={styles.textInput}\n                        placeholder=\"Enter current password\"\n                        onChangeText={(text) =>\n                            handlePasswordChange(text, \"old_password\")\n                        }\n                    />\n                    {old_password_error.error ? (\n                        <Text style={styles.errorText}>\n                            {old_password_error.message}\n                        </Text>\n                    ) : null}\n                    <TextInput\n                        name=\"new_password\"\n                        secureTextEntry={true}\n                        style={styles.textInput}\n                        placeholder=\"New password\"\n                        onChangeText={(text) =>\n                            handlePasswordChange(text, \"new_password\")\n                        }\n                    />\n                    {new_password_error.error ? (\n                        <Text style={styles.errorText}>\n                            {new_password_error.message}\n                        </Text>\n                    ) : null}\n                    <TextInput\n                        name=\"confirm_password\"\n                        secureTextEntry={true}\n                        style={styles.textInput}\n                        placeholder=\"Confirm password\"\n                        onChangeText={(text) =>\n                            confirmPasswordChange(text, \"confirm_password\")\n                        }\n                    />\n                    {confirm_password_error.error ? (\n                        <Text style={styles.errorText}>\n                            {confirm_password_error.message}\n                        </Text>\n                    ) : null}\n                    <TouchableOpacity\n                        style={styles.contactBtn}\n                        onPress={() => {\n                            changePassword();\n                        }}\n                    >\n                        <Text style={styles.contactBtnText}>Change Password</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n            <View style={styles.bottomNavigation}>\n                <EmployerBottomNavigator\n                    employerLoginData={employerLoginData}\n                    setSettingModalVisible={setSettingModalVisible}\n                    switchToScreen={switchToScreen}\n                />\n            </View>\n            <EmployerSettingsOverlay\n                switchToScreen={switchToScreen}\n                settingModalVisible={settingModalVisible}\n                setSettingModalVisible={setSettingModalVisible}\n            />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: \"column\",\n        flex: 1,\n        width: null,\n        height: null,\n    },\n    jobSeekerDashboard: {\n        flex: 9.2,\n    },\n    bottomNavigation: {\n        flex: 0.8,\n        backgroundColor: \"#dddddd\",\n        shadowColor: \"#dddddd\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 4.65,\n        elevation: 8,\n    },\n    changePasswordContainer: {\n        marginHorizontal: 20,\n    },\n    headingText: {\n        fontWeight: '800',\n        fontSize: 30,\n        alignSelf: \"center\"\n    },\n    textInput: {\n        marginVertical: 10,\n        backgroundColor: \"#ffffff\",\n        paddingHorizontal: 10,\n        paddingVertical: 10,\n        shadowColor: \"#dddddd\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 4.65,\n    },\n    errorText: {\n        textTransform: \"capitalize\",\n        color: \"red\",\n    },\n    contactBtn: {\n        width: \"40%\",\n        height: 50,\n        backgroundColor: \"#fb5b5a\",\n        borderRadius: 25,\n        justifyContent: \"center\",\n        marginVertical: 15,\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        borderColor: \"#dddddd\",\n        borderWidth: 1,\n        shadowColor: \"#9E9E9E\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.8,\n        shadowRadius: 4.65,\n    },\n    contactBtnText: {\n        color: \"white\",\n    },\n    loginText: {\n        color: \"black\",\n        fontSize: 30,\n        marginTop: 20,\n        marginLeft: 100,\n    },\n    nextBtnText: {\n        color: \"black\",\n        fontSize: 20,\n    },\n    loginBtn: {\n        width: \"20%\",\n        backgroundColor: \"#fb5b5a\",\n        borderRadius: 25,\n        height: 50,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginTop: 550,\n        marginBottom: 100,\n        marginLeft: 300,\n    },\n})\n\nexport default ChangeEmployerPassword;\n"]},"metadata":{},"sourceType":"module"}