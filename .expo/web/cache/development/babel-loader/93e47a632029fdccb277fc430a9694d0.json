{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\frontend\\\\src\\\\components\\\\job_seeker\\\\JobDetail.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AntDesign } from \"@expo/vector-icons\";\n\nvar JobDetail = function JobDetail(_ref) {\n  var job = _ref.job,\n      userData = _ref.userData,\n      jobSeekerData = _ref.jobSeekerData,\n      markStarredJob = _ref.markStarredJob,\n      switchToScreen = _ref.switchToScreen,\n      setModalVisible = _ref.setModalVisible,\n      setEmployerRecord = _ref.setEmployerRecord;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDescriptionVisible = _useState2[0],\n      setDescriptionVisible = _useState2[1];\n\n  var id = job.id,\n      employer_id = job.employer_id,\n      employer = job.employer,\n      job_title = job.job_title,\n      job_description = job.job_description,\n      job_service_id = job.job_service_id,\n      service = job.service,\n      start_date = job.start_date,\n      end_date = job.end_date,\n      wager_offered = job.wager_offered,\n      created_at = job.created_at,\n      updated_at = job.updated_at,\n      job_post = job.job_post;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.jobContainer,\n    onStartShouldSetResponder: function onStartShouldSetResponder(event) {\n      setDescriptionVisible(!isDescriptionVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.imageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: \"https://i.ya-webdesign.com/images/blank-profile-picture-png-8.png\"\n    },\n    style: styles.profileImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.detailContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, job_title ? job_title : job_post.job_title), React.createElement(Text, {\n    style: styles.subTitleText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, employer ? employer.company_name : job_post.employer.company_name), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, job_description ? job_description : job_post.job_description))), isDescriptionVisible ? React.createElement(View, {\n    style: styles.toggleableView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.detailBtn,\n    onPress: function onPress() {\n      return switchToScreen(\"EmployerProfile\", {\n        employer: employer,\n        userData: userData\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.detailBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, \"View Details\")), React.createElement(TouchableOpacity, {\n    style: styles.contactBtn,\n    onPress: function onPress() {\n      setEmployerRecord(employer ? employer : job_post.employer);\n      setModalVisible(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.contactBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, \"Contact\")), React.createElement(TouchableOpacity, {\n    style: styles.starBtn,\n    onPress: function onPress() {\n      return markStarredJob(jobSeekerData.id, id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, React.createElement(AntDesign, {\n    name: \"staro\",\n    style: styles.starBtnIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }))) : null);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    minHeight: 150,\n    borderWidth: 1,\n    borderColor: \"#dddddd\",\n    backgroundColor: \"#ffffff\",\n    borderRadius: 10,\n    marginLeft: 70,\n    margin: 15,\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8,\n    flexDirection: \"column\"\n  },\n  jobContainer: {\n    flexDirection: \"row\"\n  },\n  imageContainer: {\n    height: 120,\n    width: 120,\n    borderColor: \"#dddddd\",\n    backgroundColor: \"#ffffff\",\n    borderRadius: 100,\n    marginLeft: -60,\n    marginRight: 10,\n    marginVertical: 15,\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 10\n  },\n  detailContainer: {\n    paddingVertical: 5,\n    width: 0,\n    flexGrow: 1,\n    flex: 1\n  },\n  toggleableView: {\n    minHeight: 46,\n    padding: 5,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  profileImage: {\n    height: 120,\n    width: 120\n  },\n  titleText: {\n    fontSize: 15,\n    fontWeight: \"800\",\n    textDecorationLine: \"underline\"\n  },\n  subTitleText: {\n    fontWeight: \"600\",\n    fontSize: 13\n  },\n  detailBtn: {\n    width: \"40%\",\n    height: 36,\n    backgroundColor: \"#8fbc8f\",\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"flex-end\"\n  },\n  detailBtnText: {\n    color: \"white\"\n  },\n  contactBtn: {\n    width: \"40%\",\n    height: 36,\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"flex-end\"\n  },\n  contactBtnText: {\n    color: \"white\"\n  },\n  starBtn: {\n    width: 36,\n    backgroundColor: \"#ffee58\",\n    borderRadius: 25,\n    alignSelf: \"flex-end\"\n  },\n  starBtnIcon: {\n    fontSize: 30,\n    padding: 3,\n    color: \"#9E9E9E\"\n  }\n});\nexport default JobDetail;","map":{"version":3,"sources":["D:/frontend/src/components/job_seeker/JobDetail.js"],"names":["React","useState","AntDesign","JobDetail","job","userData","jobSeekerData","markStarredJob","switchToScreen","setModalVisible","setEmployerRecord","isDescriptionVisible","setDescriptionVisible","id","employer_id","employer","job_title","job_description","job_service_id","service","start_date","end_date","wager_offered","created_at","updated_at","job_post","styles","container","jobContainer","event","imageContainer","uri","profileImage","detailContainer","titleText","subTitleText","company_name","toggleableView","detailBtn","detailBtnText","contactBtn","contactBtnText","starBtn","starBtnIcon","StyleSheet","create","minHeight","borderWidth","borderColor","backgroundColor","borderRadius","marginLeft","margin","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","flexDirection","marginRight","marginVertical","paddingVertical","flexGrow","flex","padding","justifyContent","fontSize","fontWeight","textDecorationLine","alignItems","alignSelf","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from \"react-native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nconst JobDetail = ({\r\n    job,\r\n    userData,\r\n    jobSeekerData,\r\n    markStarredJob,\r\n    switchToScreen,\r\n    setModalVisible,\r\n    setEmployerRecord,\r\n}) => {\r\n    const [isDescriptionVisible, setDescriptionVisible] = useState(false);\r\n    const {\r\n        id,\r\n        employer_id,\r\n        employer,\r\n        job_title,\r\n        job_description,\r\n        job_service_id,\r\n        service,\r\n        start_date,\r\n        end_date,\r\n        wager_offered,\r\n        created_at,\r\n        updated_at,\r\n        job_post,\r\n    } = job;\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View\r\n                style={styles.jobContainer}\r\n                onStartShouldSetResponder={(event) => {\r\n                    setDescriptionVisible(!isDescriptionVisible);\r\n                }}\r\n            >\r\n                <View style={styles.imageContainer}>\r\n                    <Image\r\n                        source={{\r\n                            uri:\r\n                                \"https://i.ya-webdesign.com/images/blank-profile-picture-png-8.png\",\r\n                        }}\r\n                        style={styles.profileImage}\r\n                    />\r\n                </View>\r\n                <View style={styles.detailContainer}>\r\n                    <Text style={styles.titleText}>\r\n                        {job_title ? job_title : job_post.job_title}\r\n                    </Text>\r\n                    <Text style={styles.subTitleText}>\r\n                        {employer\r\n                            ? employer.company_name\r\n                            : job_post.employer.company_name}\r\n                    </Text>\r\n                    <Text>\r\n                        {job_description\r\n                            ? job_description\r\n                            : job_post.job_description}\r\n                    </Text>\r\n                </View>\r\n            </View>\r\n            {isDescriptionVisible ? (\r\n                <View style={styles.toggleableView}>\r\n                    <TouchableOpacity\r\n                        style={styles.detailBtn}\r\n                        onPress={() =>\r\n                            switchToScreen(\"EmployerProfile\", {\r\n                                employer,\r\n                                userData,\r\n                            })\r\n                        }\r\n                    >\r\n                        <Text style={styles.detailBtnText}>View Details</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        style={styles.contactBtn}\r\n                        onPress={() => {\r\n                            setEmployerRecord(\r\n                                employer ? employer : job_post.employer\r\n                            );\r\n                            setModalVisible(true);\r\n                        }}\r\n                    >\r\n                        <Text style={styles.contactBtnText}>Contact</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        style={styles.starBtn}\r\n                        onPress={() => markStarredJob(jobSeekerData.id, id)}\r\n                    >\r\n                        <AntDesign name=\"staro\" style={styles.starBtnIcon} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            ) : null}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        minHeight: 150,\r\n        borderWidth: 1,\r\n        borderColor: \"#dddddd\",\r\n        backgroundColor: \"#ffffff\",\r\n        borderRadius: 10,\r\n        marginLeft: 70,\r\n        margin: 15,\r\n        shadowColor: \"#dddddd\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 4.65,\r\n        elevation: 8,\r\n        flexDirection: \"column\",\r\n    },\r\n    jobContainer: {\r\n        flexDirection: \"row\",\r\n    },\r\n    imageContainer: {\r\n        height: 120,\r\n        width: 120,\r\n        borderColor: \"#dddddd\",\r\n        backgroundColor: \"#ffffff\",\r\n        borderRadius: 100,\r\n        marginLeft: -60,\r\n        marginRight: 10,\r\n        marginVertical: 15,\r\n        shadowColor: \"#dddddd\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 4.65,\r\n        elevation: 10,\r\n    },\r\n    detailContainer: {\r\n        paddingVertical: 5,\r\n        width: 0,\r\n        flexGrow: 1,\r\n        flex: 1,\r\n    },\r\n    toggleableView: {\r\n        minHeight: 46,\r\n        padding: 5,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n    },\r\n    profileImage: {\r\n        height: 120,\r\n        width: 120,\r\n    },\r\n    titleText: {\r\n        fontSize: 15,\r\n        fontWeight: \"800\",\r\n        textDecorationLine: \"underline\",\r\n    },\r\n    subTitleText: {\r\n        fontWeight: \"600\",\r\n        fontSize: 13,\r\n    },\r\n    detailBtn: {\r\n        width: \"40%\",\r\n        height: 36,\r\n        backgroundColor: \"#8fbc8f\",\r\n        borderRadius: 25,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        alignSelf: \"flex-end\",\r\n    },\r\n    detailBtnText: {\r\n        color: \"white\",\r\n    },\r\n    contactBtn: {\r\n        width: \"40%\",\r\n        height: 36,\r\n        backgroundColor: \"#fb5b5a\",\r\n        borderRadius: 25,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        alignSelf: \"flex-end\",\r\n    },\r\n    contactBtnText: {\r\n        color: \"white\",\r\n    },\r\n    starBtn: {\r\n        width: 36,\r\n        backgroundColor: \"#ffee58\",\r\n        borderRadius: 25,\r\n        alignSelf: \"flex-end\",\r\n    },\r\n    starBtnIcon: {\r\n        fontSize: 30,\r\n        padding: 3,\r\n        color: \"#9E9E9E\",\r\n    },\r\n});\r\n\r\nexport default JobDetail;\r\n"]},"metadata":{},"sourceType":"module"}