{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rahulsharma/Desktop/Project/frontend/src/components/employer/ApplicantList.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport EmployerSearchFilter from \"./EmployerSearchFilter\";\nimport EmployerBottomNavigator from \"./EmployerBottomNavigator\";\nimport EmployerFilterOverlay from \"./EmployerFilterOverlay\";\nimport UserContactOverlay from \"./UserContactOverlay\";\nimport EmployerSettingsOverlay from \"./EmployerSettingsOverlay\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport UserCard from \"./UserCard\";\nimport Toast from \"react-native-toast-message\";\nimport { baseUrl } from \"../../utils/constants\";\n\nvar ApplicantList = function ApplicantList(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filterVisiblity = _useState4[0],\n      setFilterVisibility = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      settingModalVisible = _useState6[0],\n      setSettingModalVisible = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loginData = _useState8[0],\n      setLoginData = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      employerData = _useState10[0],\n      setEmployerData = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      applicants = _useState12[0],\n      setApplicants = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      userRecord = _useState14[0],\n      setUserRecord = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      jobsData = _useState16[0],\n      setJobsData = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      jobs = _useState18[0],\n      setJobs = _useState18[1];\n\n  var _useState19 = useState(null),\n      _useState20 = _slicedToArray(_useState19, 2),\n      credits = _useState20[0],\n      setCredits = _useState20[1];\n\n  function switchToScreen(screen, params) {\n    props.navigation.navigate(screen, params);\n  }\n\n  useEffect(function () {\n    setApplicants(props.navigation.state.params);\n\n    try {\n      AsyncStorage.getItem(\"employerLoginData\").then(function (data) {\n        var _JSON$parse = JSON.parse(data),\n            login = _JSON$parse.login,\n            user = _JSON$parse.user;\n\n        setLoginData(login);\n        setEmployerData(user);\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, []);\n  useEffect(function () {\n    var abortController = new AbortController();\n    var signal = abortController.signal;\n\n    if (employerData.id) {\n      fetch(baseUrl + (\"api/employer-membership-plans/verify/credits/\" + employerData.id), {\n        signal: signal,\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\"\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        if (response.success) {\n          setCredits(response.result);\n        } else {\n          setCredits(response.result);\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n\n    return function () {\n      abortController.abort();\n    };\n  }, [employerData]);\n\n  function handleSelectedService(serviceMap) {\n    var selectedService = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(serviceMap.keys()), _step; !(_step = _iterator()).done;) {\n      var key = _step.value;\n      if (serviceMap.get(key)) selectedService.push(key);\n    }\n\n    if (selectedService.length > 0) {\n      var _jobs = jobsData.filter(function (job) {\n        return selectedService.includes(job.job_service_id);\n      });\n\n      setJobs(_jobs);\n    } else {\n      setJobs(jobsData);\n    }\n  }\n\n  function handleFilterByText(text) {\n    if (text.length >= 3) {\n      var _jobs2 = jobsData.filter(function (job) {\n        return job.job_title.includes(text);\n      });\n\n      setJobs(_jobs2);\n    } else {\n      setJobs(jobsData);\n    }\n  }\n\n  function handleFilterByWager(wager) {\n    var jobs = jobsData.filter(function (job) {\n      return parseInt(job.wager_offered) >= wager;\n    });\n    setJobs(jobs);\n  }\n\n  var phone_number = userRecord.phone_number;\n  console.log(credits);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.innerContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, applicants.length > 0 ? React.createElement(FlatList, {\n    showsVerticalScrollIndicator: false,\n    data: applicants,\n    keyExtractor: function keyExtractor(applicant) {\n      return applicant.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(UserCard, {\n        credits: credits,\n        applicant: item,\n        setModalVisible: setModalVisible,\n        switchToScreen: switchToScreen,\n        setUserRecord: setUserRecord,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 37\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }) : React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, \"No applicant.\")))), React.createElement(View, {\n    style: styles.bottomNavigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, React.createElement(EmployerBottomNavigator, {\n    employerLoginData: loginData,\n    setSettingModalVisible: setSettingModalVisible,\n    switchToScreen: switchToScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  })), React.createElement(Toast, {\n    ref: function ref(_ref2) {\n      return Toast.setRef(_ref2);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), React.createElement(EmployerFilterOverlay, {\n    jobs: jobs,\n    handleFilterByText: handleFilterByText,\n    handleFilterByWager: handleFilterByWager,\n    handleSelectedService: handleSelectedService,\n    filterVisiblity: filterVisiblity,\n    setFilterVisibility: setFilterVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }), React.createElement(UserContactOverlay, {\n    mobile: phone_number,\n    modalVisible: modalVisible,\n    setModalVisible: setModalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }), React.createElement(EmployerSettingsOverlay, {\n    switchToScreen: switchToScreen,\n    settingModalVisible: settingModalVisible,\n    setSettingModalVisible: setSettingModalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }));\n};\n\nApplicantList[\"navigationOptions\"] = function (screenProps) {\n  return {\n    title: \"Applicants\"\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    flex: 1,\n    width: null,\n    height: null\n  },\n  innerContainer: {\n    flex: 9.2\n  },\n  bottomNavigation: {\n    flex: 0.8,\n    backgroundColor: \"#dddddd\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8\n  },\n  loginText: {\n    color: \"black\",\n    fontSize: 30,\n    marginTop: 20,\n    marginLeft: 100\n  },\n  nextBtnText: {\n    color: \"black\",\n    fontSize: 20\n  },\n  loginBtn: {\n    width: \"20%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 550,\n    marginBottom: 100,\n    marginLeft: 300\n  }\n});\nexport default ApplicantList;","map":{"version":3,"sources":["/Users/rahulsharma/Desktop/Project/frontend/src/components/employer/ApplicantList.js"],"names":["React","useState","useEffect","EmployerSearchFilter","EmployerBottomNavigator","EmployerFilterOverlay","UserContactOverlay","EmployerSettingsOverlay","AsyncStorage","UserCard","Toast","baseUrl","ApplicantList","props","modalVisible","setModalVisible","filterVisiblity","setFilterVisibility","settingModalVisible","setSettingModalVisible","loginData","setLoginData","employerData","setEmployerData","applicants","setApplicants","userRecord","setUserRecord","jobsData","setJobsData","jobs","setJobs","credits","setCredits","switchToScreen","screen","params","navigation","navigate","state","getItem","then","data","JSON","parse","login","user","error","console","log","message","abortController","AbortController","signal","id","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","response","json","success","result","catch","err","abort","handleSelectedService","serviceMap","selectedService","keys","key","get","push","length","filter","job","includes","job_service_id","handleFilterByText","text","job_title","handleFilterByWager","wager","parseInt","wager_offered","phone_number","styles","container","innerContainer","flex","applicant","toString","item","bottomNavigation","ref","setRef","screenProps","title","StyleSheet","create","flexDirection","width","height","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","loginText","color","fontSize","marginTop","marginLeft","nextBtnText","loginBtn","borderRadius","alignItems","justifyContent","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View, SafeAreaView, FlatList } from \"react-native\";\n// import Toast from \"react-native-root-toast\";\nimport EmployerSearchFilter from \"./EmployerSearchFilter\";\nimport EmployerBottomNavigator from \"./EmployerBottomNavigator\";\nimport EmployerFilterOverlay from \"./EmployerFilterOverlay\";\nimport UserContactOverlay from \"./UserContactOverlay\";\nimport EmployerSettingsOverlay from \"./EmployerSettingsOverlay\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport UserCard from \"./UserCard\";\nimport Toast from \"react-native-toast-message\";\nimport { baseUrl } from \"../../utils/constants\";\n\nconst ApplicantList = (props) => {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [filterVisiblity, setFilterVisibility] = useState(false);\n    const [settingModalVisible, setSettingModalVisible] = useState(false);\n    const [loginData, setLoginData] = useState({});\n    const [employerData, setEmployerData] = useState({});\n    const [applicants, setApplicants] = useState([]);\n    const [userRecord, setUserRecord] = useState({});\n    const [jobsData, setJobsData] = useState([]);\n    const [jobs, setJobs] = useState([]);\n    const [credits, setCredits] = useState(null);\n\n    function switchToScreen(screen, params) {\n        props.navigation.navigate(screen, params);\n    }\n\n    useEffect(() => {\n        setApplicants(props.navigation.state.params);\n        try {\n            AsyncStorage.getItem(\"employerLoginData\").then((data) => {\n                const { login, user } = JSON.parse(data);\n                setLoginData(login);\n                setEmployerData(user);\n            });\n        } catch (error) {\n            // Error retrieving data\n            console.log(error.message);\n        }\n    }, []);\n\n    useEffect(() => {\n        const abortController = new AbortController();\n        const signal = abortController.signal;\n\n        if (employerData.id) {\n            fetch(baseUrl + `api/employer-membership-plans/verify/credits/${employerData.id}`, {\n                signal: signal,\n                method: \"GET\",\n                mode: \"cors\", // no-cors, *cors, same-origin\n                cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n                credentials: \"same-origin\", // include, *same-origin, omit\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                redirect: \"follow\", // manual, *follow, error\n                referrerPolicy: \"no-referrer\",\n            })\n                .then((response) => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        setCredits(response.result);\n                    } else {\n                        setCredits(response.result);\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        }\n\n        return () => {\n            abortController.abort();\n        };\n    }, [employerData])\n\n    function handleSelectedService(serviceMap) {\n        const selectedService = [];\n        for (var key of serviceMap.keys()) {\n            if (serviceMap.get(key)) selectedService.push(key);\n        }\n        if (selectedService.length > 0) {\n            const jobs = jobsData.filter((job) =>\n                selectedService.includes(job.job_service_id)\n            );\n            setJobs(jobs);\n        } else {\n            setJobs(jobsData);\n        }\n    }\n\n    function handleFilterByText(text) {\n        if (text.length >= 3) {\n            const jobs = jobsData.filter((job) => job.job_title.includes(text));\n            setJobs(jobs);\n        } else {\n            setJobs(jobsData);\n        }\n    }\n\n    function handleFilterByWager(wager) {\n        const jobs = jobsData.filter((job) => parseInt(job.wager_offered) >= wager);\n        setJobs(jobs);\n    }\n\n    const { phone_number } = userRecord;\n    console.log(credits);\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.innerContainer}>\n                {/*<EmployerSearchFilter\n                    handleFilterByText={handleFilterByText}\n                    filterVisiblity={filterVisiblity}\n                    setFilterVisibility={setFilterVisibility}\n                />*/}\n                <SafeAreaView style={{ flex: 1 }}>\n                    {applicants.length > 0 ? (\n                        <FlatList\n                            showsVerticalScrollIndicator={false}\n                            data={applicants}\n                            keyExtractor={(applicant) => applicant.id.toString()}\n                            renderItem={({ item }) => {\n                                return (\n                                    <UserCard\n                                        credits={credits}\n                                        applicant={item}\n                                        setModalVisible={setModalVisible}\n                                        switchToScreen={switchToScreen}\n                                        setUserRecord={setUserRecord}\n                                    />\n                                );\n                            }}\n                        />\n                    ) : (\n                            <View style={styles.container}>\n                                <Text>No applicant.</Text>\n                            </View>\n                        )}\n                </SafeAreaView>\n            </View>\n            <View style={styles.bottomNavigation}>\n                <EmployerBottomNavigator\n                    employerLoginData={loginData}\n                    setSettingModalVisible={setSettingModalVisible}\n                    switchToScreen={switchToScreen}\n                />\n            </View>\n            <Toast ref={(ref) => Toast.setRef(ref)} />\n            <EmployerFilterOverlay\n                jobs={jobs}\n                handleFilterByText={handleFilterByText}\n                handleFilterByWager={handleFilterByWager}\n                handleSelectedService={handleSelectedService}\n                filterVisiblity={filterVisiblity}\n                setFilterVisibility={setFilterVisibility}\n            />\n            <UserContactOverlay\n                mobile={phone_number}\n                modalVisible={modalVisible}\n                setModalVisible={setModalVisible}\n            />\n            <EmployerSettingsOverlay\n                switchToScreen={switchToScreen}\n                settingModalVisible={settingModalVisible}\n                setSettingModalVisible={setSettingModalVisible}\n            />\n        </View>\n    );\n};\n\nApplicantList[\"navigationOptions\"] = (screenProps) => ({\n    title: \"Applicants\",\n});\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: \"column\",\n        flex: 1,\n        width: null,\n        height: null,\n    },\n    innerContainer: {\n        flex: 9.2,\n    },\n    bottomNavigation: {\n        flex: 0.8,\n        backgroundColor: \"#dddddd\",\n        shadowColor: \"#dddddd\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 4.65,\n        elevation: 8,\n    },\n    loginText: {\n        color: \"black\",\n        fontSize: 30,\n        marginTop: 20,\n        marginLeft: 100,\n    },\n    nextBtnText: {\n        color: \"black\",\n        fontSize: 20,\n    },\n    loginBtn: {\n        width: \"20%\",\n        backgroundColor: \"#fb5b5a\",\n        borderRadius: 25,\n        height: 50,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginTop: 550,\n        marginBottom: 100,\n        marginLeft: 300,\n    },\n});\n\nexport default ApplicantList;\n"]},"metadata":{},"sourceType":"module"}