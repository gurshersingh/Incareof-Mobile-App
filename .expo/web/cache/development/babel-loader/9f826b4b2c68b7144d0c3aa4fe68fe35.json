{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rahulsharma/Desktop/Project/frontend/src/containers/job_seeker/JobUploadImage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport Constants from \"expo-constants\";\nimport * as Permissions from \"expo-permissions\";\nimport { baseUrl } from \"../../utils/constants\";\nimport Toast from \"react-native-toast-message\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nvar JobUploadImage = function (_React$Component) {\n  _inherits(JobUploadImage, _React$Component);\n\n  var _super = _createSuper(JobUploadImage);\n\n  function JobUploadImage() {\n    var _this;\n\n    _classCallCheck(this, JobUploadImage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      image: null,\n      showMessage: \"\",\n      success: false\n    };\n\n    _this.getPermissionAsync = function _callee() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!Constants.platform.ios) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 3:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              if (status !== \"granted\") {}\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.pickImage = function _callee2() {\n      var result;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 1\n              }));\n\n            case 3:\n              result = _context2.sent;\n\n              if (!result.cancelled) {\n                _this.setState({\n                  image: result.uri\n                });\n              }\n\n              console.log(result);\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    _this.takePhoto = function _callee3() {\n      var _await$Permissions$as2, cameraPerm, _await$Permissions$as3, cameraRollPerm, pickerResult;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as2 = _context3.sent;\n              cameraPerm = _await$Permissions$as2.status;\n              _context3.next = 6;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 6:\n              _await$Permissions$as3 = _context3.sent;\n              cameraRollPerm = _await$Permissions$as3.status;\n\n              if (!(cameraPerm === \"granted\" && cameraRollPerm === \"granted\")) {\n                _context3.next = 14;\n                break;\n              }\n\n              _context3.next = 11;\n              return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n                allowsEditing: true,\n                aspect: [4, 3]\n              }));\n\n            case 11:\n              pickerResult = _context3.sent;\n\n              if (!pickerResult.cancelled) {\n                _this.setState({\n                  image: pickerResult.uri\n                });\n              }\n\n              _this.uploadImageAsync(pickerResult.uri);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleSubmit = function () {\n      var data = new FormData();\n\n      if (_this.state.image) {\n        data.append(\"image\", Platform.OS === \"android\" ? {\n          uri: _this.state.image,\n          name: \"image.png\",\n          type: \"image/png\"\n        } : {\n          uri: _this.state.image.replace(\"file://\", \"\"),\n          name: \"image.png\",\n          type: \"image/png\"\n        });\n        data.append(\"id\", _this.state.registeredUser.id);\n      }\n\n      var that = _assertThisInitialized(_this);\n\n      fetch(baseUrl + \"api/job-seeker/add-image\", {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\",\n        body: data\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        if (!response.success) {\n          Toast.show({\n            type: \"error\",\n            position: \"top\",\n            text1: \"Warning\",\n            text2: \"Something went wrong.\",\n            onHide: function onHide() {\n              _this.setState({\n                isTryAgainVisible: true,\n                uploadBtnText: \"Try Again\"\n              });\n            }\n          });\n        } else {\n          Toast.show({\n            type: \"success\",\n            position: \"top\",\n            text1: \"Success\",\n            text2: \"Profile pic has been uploaded successfully.\",\n            onHide: function onHide() {\n              _this.setState({\n                isTryAgainVisible: false\n              });\n\n              that.props.navigation.navigate(\"Home\");\n            }\n          });\n        }\n      }).catch(function (err) {\n        _this.setState({\n          success: false,\n          err: err,\n          isLoading: false\n        }, function () {\n          Toast.show({\n            type: \"error\",\n            position: \"top\",\n            text1: \"Warning\",\n            text2: \"\" + _this.state.err,\n            onHide: function onHide() {\n              _this.setState({\n                isTryAgainVisible: true,\n                uploadBtnText: \"Try Again\"\n              });\n            }\n          });\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(JobUploadImage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getPermissionAsync();\n      var registeredUser = this.props.navigation.state.params.registeredUser;\n      this.setState({\n        image: registeredUser.image,\n        isTryAgainVisible: true,\n        uploadBtnText: \"Upload Image\",\n        registeredUser: registeredUser\n      }, function () {\n        console.log(\"in upload image ===========> \", _this2.state);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var image = this.state.image;\n      return React.createElement(LinearGradient, {\n        colors: [\"#BA9ED1\", \"#765A8D\"],\n        style: styles.container,\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 0,\n          y: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.headingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }\n      }, \"Upload Profile Pic\")), React.createElement(View, {\n        style: styles.imageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      }, image ? React.createElement(Image, {\n        source: {\n          uri: image\n        },\n        style: styles.profileImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }\n      }) : React.createElement(Image, {\n        source: {\n          uri: \"https://i.ya-webdesign.com/images/blank-profile-picture-png-8.png\"\n        },\n        style: styles.profileImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.submitBtn,\n        onPress: this.pickImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.btnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }\n      }, \"Pick an image from camera roll\")), React.createElement(TouchableOpacity, {\n        style: styles.submitBtn,\n        onPress: this.takePhoto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.btnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }\n      }, \"Click an image from camera\")), this.state.isTryAgainVisible ? React.createElement(TouchableOpacity, {\n        style: styles.btnTry,\n        onPress: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.btnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }\n      }, this.state.uploadBtnText)) : null, React.createElement(Toast, {\n        ref: function ref(_ref) {\n          return Toast.setRef(_ref);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return JobUploadImage;\n}(React.Component);\n\nexport { JobUploadImage as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  headingText: {\n    fontWeight: \"800\",\n    fontSize: 30,\n    alignSelf: \"center\",\n    marginTop: 30,\n    marginBottom: 20\n  },\n  imageContainer: {\n    height: 150,\n    width: 150,\n    borderColor: \"#dddddd\",\n    backgroundColor: \"#ffffff\",\n    borderRadius: 100,\n    marginLeft: 15,\n    shadowColor: \"#000000\",\n    shadowOffset: {\n      width: 4,\n      height: 4\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 6,\n    elevation: 10\n  },\n  profileImage: {\n    height: 150,\n    width: 150,\n    borderRadius: 100\n  },\n  submitBtn: {\n    width: \"60%\",\n    backgroundColor: \"#8fbc8f\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40\n  },\n  btnText: {\n    color: \"black\"\n  },\n  btnTry: {\n    width: \"50%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40\n  }\n});","map":{"version":3,"sources":["/Users/rahulsharma/Desktop/Project/frontend/src/containers/job_seeker/JobUploadImage.js"],"names":["React","ImagePicker","Constants","Permissions","baseUrl","Toast","LinearGradient","JobUploadImage","state","image","showMessage","success","getPermissionAsync","platform","ios","askAsync","CAMERA_ROLL","status","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","setState","uri","console","log","takePhoto","CAMERA","cameraPerm","cameraRollPerm","launchCameraAsync","pickerResult","uploadImageAsync","handleSubmit","data","FormData","append","Platform","OS","name","type","replace","registeredUser","id","that","fetch","method","mode","cache","credentials","headers","Accept","redirect","referrerPolicy","body","then","response","json","show","position","text1","text2","onHide","isTryAgainVisible","uploadBtnText","props","navigation","navigate","catch","err","isLoading","params","styles","container","x","y","headingText","imageContainer","profileImage","submitBtn","btnText","btnTry","ref","setRef","Component","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","fontWeight","fontSize","alignSelf","marginTop","marginBottom","height","width","borderColor","backgroundColor","borderRadius","marginLeft","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","color"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {Image, View, Text, StyleSheet, TouchableOpacity} from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport Constants from \"expo-constants\";\nimport * as Permissions from \"expo-permissions\";\nimport {baseUrl} from \"../../utils/constants\";\nimport Toast from \"react-native-toast-message\";\nimport {LinearGradient} from \"expo-linear-gradient\";\n\nexport default class JobUploadImage extends React.Component {\n    state = {\n        image: null,\n        showMessage: \"\",\n        success: false,\n    };\n\n    componentDidMount() {\n        this.getPermissionAsync();\n        const {registeredUser} = this.props.navigation.state.params;\n        this.setState(\n            {\n                image: registeredUser.image,\n                isTryAgainVisible: true,\n                uploadBtnText: \"Upload Image\",\n                registeredUser,\n            },\n            () => {\n                console.log(\"in upload image ===========> \", this.state);\n            }\n        );\n    }\n\n    getPermissionAsync = async () => {\n        if (Constants.platform.ios) {\n            const {status} = await Permissions.askAsync(\n                Permissions.CAMERA_ROLL\n            );\n            if (status !== \"granted\") {\n                //alert('Sorry, we need camera roll permissions to make this work!');\n            }\n        }\n    };\n    pickImage = async () => {\n        try {\n            const result = await ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 1,\n            });\n            if (!result.cancelled) {\n                this.setState({image: result.uri});\n            }\n\n            console.log(result);\n        } catch (E) {\n            console.log(E);\n        }\n    };\n    takePhoto = async () => {\n        const {status: cameraPerm} = await Permissions.askAsync(\n            Permissions.CAMERA\n        );\n\n        const {status: cameraRollPerm} = await Permissions.askAsync(\n            Permissions.CAMERA_ROLL\n        );\n\n        // only if user allows permission to camera AND camera roll\n        if (cameraPerm === \"granted\" && cameraRollPerm === \"granted\") {\n            const pickerResult = await ImagePicker.launchCameraAsync({\n                allowsEditing: true,\n                aspect: [4, 3],\n            });\n\n            if (!pickerResult.cancelled) {\n                this.setState({image: pickerResult.uri});\n            }\n\n            this.uploadImageAsync(pickerResult.uri);\n        }\n    };\n    handleSubmit = () => {\n        let data = new FormData();\n        if (this.state.image) {\n            data.append(\n                \"image\",\n                Platform.OS === \"android\"\n                    ? {\n                          uri: this.state.image,\n                          name: \"image.png\",\n                          type: \"image/png\",\n                      }\n                    : {\n                          uri: this.state.image.replace(\"file://\", \"\"),\n                          name: \"image.png\",\n                          type: \"image/png\",\n                      }\n            );\n            data.append(\"id\", this.state.registeredUser.id);\n        }\n        const that = this;\n        fetch(baseUrl + \"api/job-seeker/add-image\", {\n            method: \"POST\",\n            mode: \"cors\", // no-cors, *cors, same-origin\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: \"same-origin\", // include, *same-origin, omit\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"multipart/form-data\",\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            redirect: \"follow\", // manual, *follow, error\n            referrerPolicy: \"no-referrer\",\n            body: data,\n        })\n            .then((response) => response.json())\n            .then((response) => {\n                if (!response.success) {\n                    Toast.show({\n                        type: \"error\",\n                        position: \"top\",\n                        text1: \"Warning\",\n                        text2: `Something went wrong.`,\n                        onHide: () => {\n                            this.setState({\n                                isTryAgainVisible: true,\n                                uploadBtnText: \"Try Again\",\n                            });\n                        },\n                    });\n                    // throw new Error(response);\n                } else {\n                    Toast.show({\n                        type: \"success\",\n                        position: \"top\",\n                        text1: \"Success\",\n                        text2: `Profile pic has been uploaded successfully.`,\n                        onHide: () => {\n                            this.setState({isTryAgainVisible: false});\n                            that.props.navigation.navigate(\"Home\");\n                        },\n                    });\n                }\n            })\n            .catch((err) => {\n                this.setState(\n                    {\n                        success: false,\n                        err: err,\n                        isLoading: false,\n                    },\n                    () => {\n                        Toast.show({\n                            type: \"error\",\n                            position: \"top\",\n                            text1: \"Warning\",\n                            text2: `${this.state.err}`,\n                            onHide: () => {\n                                this.setState({\n                                    isTryAgainVisible: true,\n                                    uploadBtnText: \"Try Again\",\n                                });\n                            },\n                        });\n                    }\n                );\n            });\n    };\n\n    render() {\n        const {image} = this.state;\n\n        return (\n            <LinearGradient\n                colors={[\"#BA9ED1\", \"#765A8D\"]}\n                style={styles.container}\n                //  Linear Gradient\n                start={{x: 0, y: 0}}\n                end={{x: 0, y: 1}}\n            >\n                <View>\n                    <Text style={styles.headingText}>Upload Profile Pic</Text>\n                </View>\n                <View style={styles.imageContainer}>\n                    {image ? (\n                        <Image\n                            source={{uri: image}}\n                            style={styles.profileImage}\n                        />\n                    ) : (\n                        <Image\n                            source={{\n                                uri:\n                                    \"https://i.ya-webdesign.com/images/blank-profile-picture-png-8.png\",\n                            }}\n                            style={styles.profileImage}\n                        />\n                    )}\n                </View>\n                <TouchableOpacity\n                    style={styles.submitBtn}\n                    onPress={this.pickImage}\n                >\n                    <Text style={styles.btnText}>\n                        Pick an image from camera roll\n                    </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                    style={styles.submitBtn}\n                    onPress={this.takePhoto}\n                >\n                    <Text style={styles.btnText}>\n                        Click an image from camera\n                    </Text>\n                </TouchableOpacity>\n                {this.state.isTryAgainVisible ? (\n                    <TouchableOpacity\n                        style={styles.btnTry}\n                        onPress={this.handleSubmit}\n                    >\n                        <Text style={styles.btnText}>\n                            {this.state.uploadBtnText}\n                        </Text>\n                    </TouchableOpacity>\n                ) : null}\n\n                <Toast ref={(ref) => Toast.setRef(ref)} />\n            </LinearGradient>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    headingText: {\n        fontWeight: \"800\",\n        fontSize: 30,\n        alignSelf: \"center\",\n        marginTop: 30,\n        marginBottom: 20,\n    },\n    imageContainer: {\n        height: 150,\n        width: 150,\n        borderColor: \"#dddddd\",\n        backgroundColor: \"#ffffff\",\n        borderRadius: 100,\n        marginLeft: 15,\n        shadowColor: \"#000000\",\n        shadowOffset: {\n            width: 4,\n            height: 4,\n        },\n        shadowOpacity: 0.8,\n        shadowRadius: 6,\n        elevation: 10,\n    },\n    profileImage: {\n        height: 150,\n        width: 150,\n        borderRadius: 100,\n    },\n    submitBtn: {\n        width: \"60%\",\n        backgroundColor: \"#8fbc8f\",\n        borderRadius: 25,\n        height: 50,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginTop: 40,\n    },\n    btnText: {\n        color: \"black\",\n    },\n    btnTry: {\n        width: \"50%\",\n        backgroundColor: \"#fb5b5a\",\n        borderRadius: 25,\n        height: 50,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginTop: 40,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}