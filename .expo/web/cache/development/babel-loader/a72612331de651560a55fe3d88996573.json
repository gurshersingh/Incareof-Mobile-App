{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\frontend\\\\src\\\\components\\\\job_seeker\\\\EmployerProfile.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Toast from \"react-native-root-toast\";\nimport _ from \"lodash\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport BottomTabNavigator from \"./BottomTabNavigator\";\nimport ContactOverlay from \"./ContactOverlay\";\nimport SettingsOverlay from \"./SettingsOverlay\";\nimport { baseUrl } from \"../../utils/constants\";\nimport { AntDesign } from \"@expo/vector-icons\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar EmployerProfile = function EmployerProfile(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      routeName = _useState2[0],\n      setRouteName = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      settingModalVisible = _useState6[0],\n      setSettingModalVisible = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      employerData = _useState8[0],\n      setEmployerData = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userData = _useState10[0],\n      setUserData = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      jobSeekerData = _useState12[0],\n      setJobSeekerData = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      jobsData = _useState14[0],\n      setJobsData = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      jobs = _useState16[0],\n      setJobs = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      success = _useState18[0],\n      setSuccess = _useState18[1];\n\n  function switchToScreen(screen, params) {\n    props.navigation.navigate(screen, params);\n  }\n\n  useEffect(function () {\n    var _props$navigation$sta = props.navigation.state.params,\n        userData = _props$navigation$sta.userData,\n        employer = _props$navigation$sta.employer;\n    setEmployerData(employer);\n    setUserData(userData);\n    setRouteName(props.navigation.state.routeName);\n    console.log(\"job seeker data ========> \", jobSeekerData);\n\n    if (_.isEmpty(jobSeekerData)) {\n      try {\n        AsyncStorage.getItem(\"jobSeekerData\").then(function (job_seeker) {\n          setJobSeekerData(JSON.parse(job_seeker));\n        });\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n\n    fetch(baseUrl + \"api/employer/get-jobs\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify({\n        employer_id: employer.id\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      if (!response.success) throw new Error(response);else {\n        setJobsData(response.result);\n\n        if (response.result) {\n          setJobs([response.result[0]]);\n        }\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }, []);\n\n  function viewMoreJobs() {\n    setJobs(jobsData);\n  }\n\n  function applyJobs(job_post_id) {\n    var user_id = jobSeekerData.id;\n    fetch(baseUrl + \"api/job-seeker/apply-job\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify({\n        user_id: user_id,\n        job_post_id: job_post_id\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      if (!response.success) {\n        setSuccess(false);\n        setTimeout(function () {\n          setSuccess(null);\n        }, 3000);\n        throw new Error(response);\n      } else {\n        setSuccess(true);\n        setTimeout(function () {\n          setSuccess(null);\n        }, 3000);\n      }\n    }).catch(function (err) {\n      console.log(err);\n      setSuccess(false);\n      setTimeout(function () {\n        setSuccess(null);\n      }, 3000);\n    });\n  }\n\n  var image = employerData.image,\n      company_name = employerData.company_name,\n      first_name = employerData.first_name,\n      last_name = employerData.last_name,\n      phone_number = employerData.phone_number,\n      email = employerData.email;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.jobSeekerDashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"column\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.backDrop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }), React.createElement(View, {\n    style: styles.imageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, image ? React.createElement(Image, {\n    style: styles.profileImage,\n    source: {\n      uri: image\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }) : React.createElement(Image, {\n    source: {\n      uri: \"https://i.ya-webdesign.com/images/blank-profile-picture-png-8.png\"\n    },\n    style: styles.profileImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 37\n    }\n  })), React.createElement(View, {\n    style: styles.metaContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, employerData !== null ? React.createElement(View, {\n    style: styles.subMetaDataContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: [styles.jobSeekerName],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 41\n    }\n  }, company_name)), React.createElement(View, {\n    style: styles.nameContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: [styles.boldText],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 41\n    }\n  }, first_name), React.createElement(Text, {\n    style: [styles.boldText],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 41\n    }\n  }, last_name)), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: [styles.boldText],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 41\n    }\n  }, phone_number))) : null, React.createElement(View, {\n    style: styles.actionContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 29\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.starBtn,\n    onPress: function onPress() {\n      return alert(\"Contact overlay should be displayed.\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 33\n    }\n  }, React.createElement(AntDesign, {\n    name: \"staro\",\n    style: styles.starBtnIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 37\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.contactBtn,\n    onPress: function onPress() {\n      setModalVisible(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: styles.contactBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 37\n    }\n  }, \"Contact\")))), React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  }, jobs.length > 0 ? React.createElement(FlatList, {\n    showsVerticalScrollIndicator: false,\n    data: jobs,\n    keyExtractor: function keyExtractor(job) {\n      return job.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.dataContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 45\n        }\n      }, React.createElement(View, {\n        style: styles.jobRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 49\n        }\n      }, React.createElement(Text, {\n        style: styles.labelText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 53\n        }\n      }, \"Job Title:\"), React.createElement(Text, {\n        style: styles.dataText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 53\n        }\n      }, item.job_title)), React.createElement(View, {\n        style: styles.jobRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 49\n        }\n      }, React.createElement(Text, {\n        style: styles.labelText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 53\n        }\n      }, \"Job Description:\"), React.createElement(Text, {\n        style: styles.dataText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 53\n        }\n      }, item.job_description)), React.createElement(View, {\n        style: styles.jobRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 49\n        }\n      }, React.createElement(Text, {\n        style: styles.labelText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 53\n        }\n      }, \"Wager Offered:\"), React.createElement(Text, {\n        style: styles.dataText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 53\n        }\n      }, item.wager_offered)), React.createElement(TouchableOpacity, {\n        style: styles.applyBtn,\n        onPress: function onPress() {\n          applyJobs(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 49\n        }\n      }, React.createElement(Text, {\n        style: styles.moreBtnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 53\n        }\n      }, \"Easy Apply\")));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 33\n    }\n  }) : React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 41\n    }\n  }, \"Job Post not found.\"))), React.createElement(TouchableOpacity, {\n    style: styles.moreBtn,\n    onPress: function onPress() {\n      viewMoreJobs();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.moreBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 29\n    }\n  }, \"View more jobs\"))))), React.createElement(View, {\n    style: styles.bottomNavigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, React.createElement(BottomTabNavigator, {\n    userData: userData,\n    routeName: routeName,\n    setSettingModalVisible: setSettingModalVisible,\n    switchToScreen: switchToScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  })), React.createElement(Toast, {\n    visible: success,\n    duration: Toast.durations.LONG,\n    position: Toast.positions.BOTTOM,\n    backgroundColor: \"green\",\n    shadowColor: \"#dddddd\",\n    shadow: true,\n    animation: false,\n    hideOnPress: true,\n    onHidden: function onHidden() {\n      return setSuccess(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, \"You have successfully applied for current job.\"), React.createElement(Toast, {\n    visible: success !== null && !success,\n    duration: Toast.durations.LONG,\n    position: Toast.positions.BOTTOM,\n    backgroundColor: \"red\",\n    shadowColor: \"#dddddd\",\n    shadow: true,\n    animation: false,\n    hideOnPress: true,\n    onHidden: function onHidden() {\n      return setSuccess(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }\n  }, \"Something went wrong.\"), React.createElement(ContactOverlay, {\n    mobile: phone_number,\n    email: email,\n    modalVisible: modalVisible,\n    setModalVisible: setModalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }), React.createElement(SettingsOverlay, {\n    settingModalVisible: settingModalVisible,\n    setSettingModalVisible: setSettingModalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }));\n};\n\nEmployerProfile[\"navigationOptions\"] = function (screenProps) {\n  return {\n    title: \"Employer's Profile\"\n  };\n};\n\nvar styles = StyleSheet.create({\n  overlay: {\n    flex: 1,\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    backgroundColor: \"#dddddd\",\n    height: 300,\n    width: width,\n    elevation: 6\n  },\n  container: {\n    flexDirection: \"column\",\n    flex: 1,\n    width: null,\n    height: null\n  },\n  jobSeekerDashboard: {\n    flex: 9.2\n  },\n  bottomNavigation: {\n    flex: 0.8,\n    backgroundColor: \"#dddddd\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8\n  },\n  loginText: {\n    color: \"black\",\n    fontSize: 30,\n    marginTop: 20,\n    marginLeft: 100\n  },\n  nextBtnText: {\n    color: \"black\",\n    fontSize: 20\n  },\n  loginBtn: {\n    width: \"20%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 550,\n    marginBottom: 100,\n    marginLeft: 300\n  },\n  backDrop: {\n    height: 170,\n    backgroundColor: \"#f8bbd0\"\n  },\n  imageContainer: {\n    height: 120,\n    width: 120,\n    borderColor: \"#dddddd\",\n    backgroundColor: \"#ffffff\",\n    borderRadius: 100,\n    marginLeft: 15,\n    marginTop: 15,\n    position: \"absolute\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 10\n  },\n  metaContainer: {\n    backgroundColor: \"#f8bbd0\",\n    position: \"absolute\",\n    marginTop: 30,\n    width: \"100%\",\n    paddingBottom: 10\n  },\n  subMetaDataContainer: {\n    marginLeft: 150,\n    width: \"100%\"\n  },\n  nameContainer: {\n    marginTop: 5,\n    flexDirection: \"row\"\n  },\n  jobSeekerName: {\n    marginRight: 5,\n    fontWeight: \"700\",\n    fontSize: 18\n  },\n  boldText: {\n    fontWeight: \"700\"\n  },\n  profileImage: {\n    height: 120,\n    width: 120\n  },\n  actionContainer: {\n    height: 60,\n    width: 200,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    width: \"100%\"\n  },\n  contactBtn: {\n    width: \"40%\",\n    height: 40,\n    backgroundColor: \"#8fbc8f\",\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"flex-end\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 10,\n    marginHorizontal: 15\n  },\n  contactBtnText: {\n    color: \"white\",\n    fontSize: 16\n  },\n  starBtn: {\n    width: 40,\n    backgroundColor: \"#ffee58\",\n    borderRadius: 25,\n    alignSelf: \"flex-end\",\n    marginHorizontal: 5,\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 10\n  },\n  starBtnIcon: {\n    fontSize: 30,\n    padding: 5,\n    color: \"#9E9E9E\"\n  },\n  dataContainer: {\n    minHeight: 150,\n    backgroundColor: \"#ffffff\",\n    borderRadius: 5,\n    marginHorizontal: 15,\n    marginVertical: 10,\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 1,\n    elevation: 10\n  },\n  jobRow: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginVertical: 5,\n    marginHorizontal: 10\n  },\n  labelText: {\n    flex: 1,\n    fontWeight: \"700\"\n  },\n  dataText: {\n    flex: 1\n  },\n  applyBtn: {\n    width: \"40%\",\n    height: 40,\n    backgroundColor: \"#90caf9\",\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 10,\n    marginVertical: 5,\n    marginHorizontal: 10\n  },\n  moreBtn: {\n    width: \"40%\",\n    height: 40,\n    backgroundColor: \"#b9f6ca\",\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 10,\n    marginVertical: 15\n  },\n  moreBtnText: {\n    color: \"white\",\n    fontSize: 16\n  }\n});\nexport default EmployerProfile;","map":{"version":3,"sources":["D:/frontend/src/components/job_seeker/EmployerProfile.js"],"names":["React","useState","useEffect","Toast","_","AsyncStorage","BottomTabNavigator","ContactOverlay","SettingsOverlay","baseUrl","AntDesign","Dimensions","get","width","height","EmployerProfile","props","routeName","setRouteName","modalVisible","setModalVisible","settingModalVisible","setSettingModalVisible","employerData","setEmployerData","userData","setUserData","jobSeekerData","setJobSeekerData","jobsData","setJobsData","jobs","setJobs","success","setSuccess","switchToScreen","screen","params","navigation","navigate","state","employer","console","log","isEmpty","getItem","then","job_seeker","JSON","parse","error","message","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","stringify","employer_id","id","response","json","Error","result","catch","err","viewMoreJobs","applyJobs","job_post_id","user_id","setTimeout","image","company_name","first_name","last_name","phone_number","email","styles","container","jobSeekerDashboard","flexDirection","backDrop","imageContainer","profileImage","uri","metaContainer","subMetaDataContainer","jobSeekerName","nameContainer","boldText","actionContainer","starBtn","alert","starBtnIcon","contactBtn","contactBtnText","flex","length","job","toString","item","dataContainer","jobRow","labelText","dataText","job_title","job_description","wager_offered","applyBtn","moreBtnText","moreBtn","bottomNavigation","durations","LONG","positions","BOTTOM","screenProps","title","StyleSheet","create","overlay","position","left","top","backgroundColor","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","loginText","color","fontSize","marginTop","marginLeft","nextBtnText","loginBtn","borderRadius","alignItems","justifyContent","marginBottom","borderColor","paddingBottom","marginRight","fontWeight","alignSelf","marginHorizontal","padding","minHeight","marginVertical"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    ScrollView,\r\n    Dimensions,\r\n    Image,\r\n    TouchableHighlight,\r\n    TouchableOpacity,\r\n    SafeAreaView,\r\n    FlatList,\r\n} from \"react-native\";\r\nimport Toast from \"react-native-root-toast\";\r\nimport _ from \"lodash\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nimport BottomTabNavigator from \"./BottomTabNavigator\";\r\nimport ContactOverlay from \"./ContactOverlay\";\r\nimport SettingsOverlay from \"./SettingsOverlay\";\r\nimport { baseUrl } from \"../../utils/constants\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\n// We can use this to make the overlay fill the entire width\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\nconst EmployerProfile = (props) => {\r\n    const [routeName, setRouteName] = useState(null);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [settingModalVisible, setSettingModalVisible] = useState(false);\r\n    const [employerData, setEmployerData] = useState({});\r\n    const [userData, setUserData] = useState({});\r\n    const [jobSeekerData, setJobSeekerData] = useState({});\r\n    const [jobsData, setJobsData] = useState([]);\r\n    const [jobs, setJobs] = useState([]);\r\n    const [success, setSuccess] = useState(null);\r\n\r\n    function switchToScreen(screen, params) {\r\n        props.navigation.navigate(screen, params);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let { userData, employer } = props.navigation.state.params;\r\n        setEmployerData(employer);\r\n        setUserData(userData);\r\n        setRouteName(props.navigation.state.routeName);\r\n\r\n        console.log(\"job seeker data ========> \", jobSeekerData);\r\n\r\n        if (_.isEmpty(jobSeekerData)) {\r\n            try {\r\n                AsyncStorage.getItem(\"jobSeekerData\").then((job_seeker) => {\r\n                    setJobSeekerData(JSON.parse(job_seeker));\r\n                });\r\n            } catch (error) {\r\n                // Error retrieving data\r\n                console.log(error.message);\r\n            }\r\n        }\r\n\r\n        fetch(baseUrl + \"api/employer/get-jobs\", {\r\n            method: \"POST\",\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer\",\r\n            body: JSON.stringify({\r\n                employer_id: employer.id,\r\n            }),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((response) => {\r\n                if (!response.success) throw new Error(response);\r\n                else {\r\n                    setJobsData(response.result);\r\n                    if (response.result) {\r\n                        setJobs([response.result[0]]);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    function viewMoreJobs() {\r\n        setJobs(jobsData);\r\n    }\r\n\r\n    function applyJobs(job_post_id) {\r\n        const user_id = jobSeekerData.id;\r\n\r\n        fetch(baseUrl + \"api/job-seeker/apply-job\", {\r\n            method: \"POST\",\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer\",\r\n            body: JSON.stringify({\r\n                user_id,\r\n                job_post_id\r\n            }),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((response) => {\r\n                if (!response.success) {\r\n                    setSuccess(false);\r\n                    setTimeout(function () {\r\n                        setSuccess(null);\r\n                    }, 3000);\r\n                    throw new Error(response);\r\n                }\r\n                else {\r\n                    setSuccess(true);\r\n                    setTimeout(function () {\r\n                        setSuccess(null);\r\n                    }, 3000);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setSuccess(false);\r\n                setTimeout(function () {\r\n                    setSuccess(null);\r\n                }, 3000);\r\n            });\r\n    }\r\n\r\n    const {\r\n        image,\r\n        company_name,\r\n        first_name,\r\n        last_name,\r\n        phone_number,\r\n        email,\r\n    } = employerData;\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.jobSeekerDashboard}>\r\n                <ScrollView>\r\n                    <View style={{ flexDirection: \"column\" }}>\r\n                        <View style={styles.backDrop}></View>\r\n                        <View style={styles.imageContainer}>\r\n                            {image ? (\r\n                                <Image\r\n                                    style={styles.profileImage}\r\n                                    source={{ uri: image }}\r\n                                />\r\n                            ) : (\r\n                                    <Image\r\n                                        source={{\r\n                                            uri:\r\n                                                \"https://i.ya-webdesign.com/images/blank-profile-picture-png-8.png\",\r\n                                        }}\r\n                                        style={styles.profileImage}\r\n                                    />\r\n                                )}\r\n                        </View>\r\n                        <View style={styles.metaContainer}>\r\n                            {employerData !== null ? (\r\n                                <View style={styles.subMetaDataContainer}>\r\n                                    <View>\r\n                                        <Text style={[styles.jobSeekerName]}>\r\n                                            {company_name}\r\n                                        </Text>\r\n                                    </View>\r\n                                    <View style={styles.nameContainer}>\r\n                                        <Text style={[styles.boldText]}>\r\n                                            {first_name}\r\n                                        </Text>\r\n                                        <Text style={[styles.boldText]}>\r\n                                            {last_name}\r\n                                        </Text>\r\n                                    </View>\r\n                                    <View>\r\n                                        <Text style={[styles.boldText]}>\r\n                                            {phone_number}\r\n                                        </Text>\r\n                                    </View>\r\n                                </View>\r\n                            ) : null}\r\n                            <View style={styles.actionContainer}>\r\n                                <TouchableHighlight\r\n                                    style={styles.starBtn}\r\n                                    onPress={() =>\r\n                                        alert(\r\n                                            \"Contact overlay should be displayed.\"\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    <AntDesign\r\n                                        name=\"staro\"\r\n                                        style={styles.starBtnIcon}\r\n                                    />\r\n                                </TouchableHighlight>\r\n                                <TouchableOpacity\r\n                                    style={styles.contactBtn}\r\n                                    onPress={() => {\r\n                                        setModalVisible(true);\r\n                                    }}\r\n                                >\r\n                                    <Text style={styles.contactBtnText}>\r\n                                        Contact\r\n                                    </Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n\r\n                        <SafeAreaView style={{ flex: 1 }}>\r\n                            {jobs.length > 0 ? (\r\n                                <FlatList\r\n                                    showsVerticalScrollIndicator={false}\r\n                                    data={jobs}\r\n                                    keyExtractor={(job) => job.id.toString()}\r\n                                    renderItem={({ item }) => {\r\n                                        return (\r\n                                            <View style={styles.dataContainer}>\r\n                                                <View style={styles.jobRow}>\r\n                                                    <Text\r\n                                                        style={styles.labelText}\r\n                                                    >\r\n                                                        Job Title:\r\n                                                    </Text>\r\n                                                    <Text\r\n                                                        style={styles.dataText}\r\n                                                    >\r\n                                                        {item.job_title}\r\n                                                    </Text>\r\n                                                </View>\r\n                                                <View style={styles.jobRow}>\r\n                                                    <Text\r\n                                                        style={styles.labelText}\r\n                                                    >\r\n                                                        Job Description:\r\n                                                    </Text>\r\n                                                    <Text\r\n                                                        style={styles.dataText}\r\n                                                    >\r\n                                                        {item.job_description}\r\n                                                    </Text>\r\n                                                </View>\r\n                                                <View style={styles.jobRow}>\r\n                                                    <Text\r\n                                                        style={styles.labelText}\r\n                                                    >\r\n                                                        Wager Offered:\r\n                                                    </Text>\r\n                                                    <Text\r\n                                                        style={styles.dataText}\r\n                                                    >\r\n                                                        {item.wager_offered}\r\n                                                    </Text>\r\n                                                </View>\r\n                                                <TouchableOpacity\r\n                                                    style={styles.applyBtn}\r\n                                                    onPress={() => {\r\n                                                        applyJobs(item.id)\r\n                                                    }}\r\n                                                >\r\n                                                    <Text style={styles.moreBtnText}>\r\n                                                        Easy Apply\r\n                                                    </Text>\r\n                                                </TouchableOpacity>\r\n                                            </View>\r\n                                        );\r\n                                    }}\r\n                                />\r\n                            ) : (\r\n                                    <View style={styles.container}>\r\n                                        <Text>Job Post not found.</Text>\r\n                                    </View>\r\n                                )}\r\n                        </SafeAreaView>\r\n\r\n                        <TouchableOpacity\r\n                            style={styles.moreBtn}\r\n                            onPress={() => {\r\n                                viewMoreJobs();\r\n                            }}\r\n                        >\r\n                            <Text style={styles.moreBtnText}>\r\n                                View more jobs\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n            <View style={styles.bottomNavigation}>\r\n                <BottomTabNavigator\r\n                    userData={userData}\r\n                    routeName={routeName}\r\n                    setSettingModalVisible={setSettingModalVisible}\r\n                    switchToScreen={switchToScreen}\r\n                />\r\n            </View>\r\n            <Toast\r\n                visible={success}\r\n                duration={Toast.durations.LONG}\r\n                position={Toast.positions.BOTTOM}\r\n                backgroundColor=\"green\"\r\n                shadowColor=\"#dddddd\"\r\n                shadow={true}\r\n                animation={false}\r\n                hideOnPress={true}\r\n                onHidden={() => setSuccess(null)}\r\n            >\r\n                You have successfully applied for current job.\r\n            </Toast>\r\n            <Toast\r\n                visible={success !== null && !success}\r\n                duration={Toast.durations.LONG}\r\n                position={Toast.positions.BOTTOM}\r\n                backgroundColor=\"red\"\r\n                shadowColor=\"#dddddd\"\r\n                shadow={true}\r\n                animation={false}\r\n                hideOnPress={true}\r\n                onHidden={() => setSuccess(null)}\r\n            >\r\n                Something went wrong.\r\n            </Toast>\r\n            <ContactOverlay\r\n                mobile={phone_number}\r\n                email={email}\r\n                modalVisible={modalVisible}\r\n                setModalVisible={setModalVisible}\r\n            />\r\n            <SettingsOverlay\r\n                settingModalVisible={settingModalVisible}\r\n                setSettingModalVisible={setSettingModalVisible}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nEmployerProfile[\"navigationOptions\"] = (screenProps) => ({\r\n    title: \"Employer's Profile\",\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n    overlay: {\r\n        flex: 1,\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n        backgroundColor: \"#dddddd\",\r\n        height: 300,\r\n        width,\r\n        elevation: 6,\r\n    },\r\n    container: {\r\n        flexDirection: \"column\",\r\n        flex: 1,\r\n        width: null,\r\n        height: null,\r\n    },\r\n    jobSeekerDashboard: {\r\n        flex: 9.2,\r\n    },\r\n    bottomNavigation: {\r\n        flex: 0.8,\r\n        backgroundColor: \"#dddddd\",\r\n        shadowColor: \"#dddddd\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 4.65,\r\n        elevation: 8,\r\n    },\r\n    loginText: {\r\n        color: \"black\",\r\n        fontSize: 30,\r\n        marginTop: 20,\r\n        marginLeft: 100,\r\n    },\r\n    nextBtnText: {\r\n        color: \"black\",\r\n        fontSize: 20,\r\n    },\r\n    loginBtn: {\r\n        width: \"20%\",\r\n        backgroundColor: \"#fb5b5a\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 550,\r\n        marginBottom: 100,\r\n        marginLeft: 300,\r\n    },\r\n    backDrop: {\r\n        height: 170,\r\n        backgroundColor: \"#f8bbd0\",\r\n    },\r\n    imageContainer: {\r\n        height: 120,\r\n        width: 120,\r\n        borderColor: \"#dddddd\",\r\n        backgroundColor: \"#ffffff\",\r\n        borderRadius: 100,\r\n        marginLeft: 15,\r\n        marginTop: 15,\r\n        position: \"absolute\",\r\n        shadowColor: \"#dddddd\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 4.65,\r\n        elevation: 10,\r\n    },\r\n    metaContainer: {\r\n        backgroundColor: \"#f8bbd0\",\r\n        position: \"absolute\",\r\n        marginTop: 30,\r\n        width: \"100%\",\r\n        paddingBottom: 10,\r\n    },\r\n    subMetaDataContainer: {\r\n        marginLeft: 150,\r\n        width: \"100%\",\r\n    },\r\n    nameContainer: {\r\n        marginTop: 5,\r\n        flexDirection: \"row\",\r\n    },\r\n    jobSeekerName: {\r\n        marginRight: 5,\r\n        fontWeight: \"700\",\r\n        fontSize: 18,\r\n    },\r\n    boldText: {\r\n        fontWeight: \"700\",\r\n    },\r\n    profileImage: {\r\n        height: 120,\r\n        width: 120,\r\n    },\r\n    actionContainer: {\r\n        height: 60,\r\n        width: 200,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"flex-end\",\r\n        width: \"100%\",\r\n    },\r\n    contactBtn: {\r\n        width: \"40%\",\r\n        height: 40,\r\n        backgroundColor: \"#8fbc8f\",\r\n        borderRadius: 25,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        alignSelf: \"flex-end\",\r\n        shadowColor: \"#dddddd\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 4.65,\r\n        elevation: 10,\r\n        marginHorizontal: 15,\r\n    },\r\n    contactBtnText: {\r\n        color: \"white\",\r\n        fontSize: 16,\r\n    },\r\n    starBtn: {\r\n        width: 40,\r\n        backgroundColor: \"#ffee58\",\r\n        borderRadius: 25,\r\n        alignSelf: \"flex-end\",\r\n        marginHorizontal: 5,\r\n        shadowColor: \"#dddddd\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 4.65,\r\n        elevation: 10,\r\n    },\r\n    starBtnIcon: {\r\n        fontSize: 30,\r\n        padding: 5,\r\n        color: \"#9E9E9E\",\r\n    },\r\n    dataContainer: {\r\n        minHeight: 150,\r\n        backgroundColor: \"#ffffff\",\r\n        borderRadius: 5,\r\n        marginHorizontal: 15,\r\n        marginVertical: 10,\r\n        shadowColor: \"#dddddd\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 1,\r\n        elevation: 10,\r\n    },\r\n    jobRow: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"center\",\r\n        marginVertical: 5,\r\n        marginHorizontal: 10,\r\n    },\r\n    labelText: {\r\n        flex: 1,\r\n        fontWeight: \"700\",\r\n    },\r\n    dataText: {\r\n        flex: 1,\r\n    },\r\n    applyBtn: {\r\n        width: \"40%\",\r\n        height: 40,\r\n        backgroundColor: \"#90caf9\",\r\n        borderRadius: 25,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        shadowColor: \"#dddddd\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 4.65,\r\n        elevation: 10,\r\n        marginVertical: 5,\r\n        marginHorizontal: 10,\r\n    },\r\n    moreBtn: {\r\n        width: \"40%\",\r\n        height: 40,\r\n        backgroundColor: \"#b9f6ca\",\r\n        borderRadius: 25,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        alignSelf: \"center\",\r\n        shadowColor: \"#dddddd\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 4.65,\r\n        elevation: 10,\r\n        marginVertical: 15,\r\n    },\r\n    moreBtnText: {\r\n        color: \"white\",\r\n        fontSize: 16,\r\n    },\r\n});\r\n\r\nexport default EmployerProfile;\r\n"]},"metadata":{},"sourceType":"module"}