{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rahulsharma/Desktop/Project/frontend/src/components/job_seeker/EmployerProfile.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Toast from \"react-native-root-toast\";\nimport _ from \"lodash\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport BottomTabNavigator from \"./BottomTabNavigator\";\nimport ContactOverlay from \"./ContactOverlay\";\nimport SettingsOverlay from \"./SettingsOverlay\";\nimport { baseUrl } from \"../../utils/constants\";\nimport { AntDesign } from \"@expo/vector-icons\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar EmployerProfile = function EmployerProfile(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      routeName = _useState2[0],\n      setRouteName = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      settingModalVisible = _useState6[0],\n      setSettingModalVisible = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      employerData = _useState8[0],\n      setEmployerData = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userData = _useState10[0],\n      setUserData = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      jobSeekerData = _useState12[0],\n      setJobSeekerData = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      jobsData = _useState14[0],\n      setJobsData = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      jobs = _useState16[0],\n      setJobs = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      success = _useState18[0],\n      setSuccess = _useState18[1];\n\n  function switchToScreen(screen, params) {\n    props.navigation.navigate(screen, params);\n  }\n\n  useEffect(function () {\n    var _props$navigation$sta = props.navigation.state.params,\n        userData = _props$navigation$sta.userData,\n        employer = _props$navigation$sta.employer;\n    setEmployerData(employer);\n    setUserData(userData);\n    setRouteName(props.navigation.state.routeName);\n\n    try {\n      AsyncStorage.getItem(\"jobSeekerLoginData\").then(function (data) {\n        var _JSON$parse = JSON.parse(data),\n            user = _JSON$parse.user,\n            login = _JSON$parse.login;\n\n        setUserData(login);\n        setJobSeekerData(user);\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n\n    fetch(baseUrl + \"api/employer/get-jobs\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify({\n        employer_id: employer.id\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      if (!response.success) throw new Error(response);else {\n        setJobsData(response.result);\n\n        if (response.result) {\n          setJobs([response.result[0]]);\n        }\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }, []);\n\n  function viewMoreJobs() {\n    setJobs(jobsData);\n  }\n\n  function applyJobs(job_post_id) {\n    var user_id = jobSeekerData.id;\n    fetch(baseUrl + \"api/job-seeker/apply-job\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify({\n        user_id: user_id,\n        job_post_id: job_post_id\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      if (!response.success) {\n        setSuccess(false);\n        setTimeout(function () {\n          setSuccess(null);\n        }, 3000);\n        throw new Error(response);\n      } else {\n        setSuccess(true);\n        setTimeout(function () {\n          setSuccess(null);\n        }, 3000);\n      }\n    }).catch(function (err) {\n      console.log(err);\n      setSuccess(false);\n      setTimeout(function () {\n        setSuccess(null);\n      }, 3000);\n    });\n  }\n\n  var image = employerData.image,\n      company_name = employerData.company_name,\n      first_name = employerData.first_name,\n      last_name = employerData.last_name,\n      phone_number = employerData.phone_number,\n      email = employerData.email;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.jobSeekerDashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"column\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.backDrop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }), React.createElement(View, {\n    style: styles.imageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, image ? React.createElement(Image, {\n    style: styles.profileImage,\n    source: {\n      uri: image\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 33\n    }\n  }) : React.createElement(Image, {\n    source: {\n      uri: \"https://i.ya-webdesign.com/images/blank-profile-picture-png-8.png\"\n    },\n    style: styles.profileImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  })), React.createElement(View, {\n    style: styles.metaContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, employerData !== null ? React.createElement(View, {\n    style: styles.subMetaDataContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: [styles.jobSeekerName],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 41\n    }\n  }, company_name)), React.createElement(View, {\n    style: styles.nameContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: [styles.boldText],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 41\n    }\n  }, first_name), React.createElement(Text, {\n    style: [styles.boldText],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 41\n    }\n  }, last_name)), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: [styles.boldText],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 41\n    }\n  }, phone_number))) : null, React.createElement(View, {\n    style: styles.actionContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.starBtn,\n    onPress: function onPress() {\n      return alert(\"Contact overlay should be displayed.\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, React.createElement(AntDesign, {\n    name: \"staro\",\n    style: styles.starBtnIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 37\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.contactBtn,\n    onPress: function onPress() {\n      setModalVisible(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: styles.contactBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 37\n    }\n  }, \"Contact\")))), React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, jobs.length > 0 ? React.createElement(FlatList, {\n    showsVerticalScrollIndicator: false,\n    data: jobs,\n    keyExtractor: function keyExtractor(job) {\n      return job.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.dataContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 45\n        }\n      }, React.createElement(View, {\n        style: styles.jobRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 49\n        }\n      }, React.createElement(Text, {\n        style: styles.labelText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 53\n        }\n      }, \"Job Title:\"), React.createElement(Text, {\n        style: styles.dataText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 53\n        }\n      }, item.job_title)), React.createElement(View, {\n        style: styles.jobRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 49\n        }\n      }, React.createElement(Text, {\n        style: styles.labelText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 53\n        }\n      }, \"Job Description:\"), React.createElement(Text, {\n        style: styles.dataText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 53\n        }\n      }, item.job_description)), React.createElement(View, {\n        style: styles.jobRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 49\n        }\n      }, React.createElement(Text, {\n        style: styles.labelText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 53\n        }\n      }, \"Wager Offered:\"), React.createElement(Text, {\n        style: styles.dataText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 53\n        }\n      }, item.wager_offered)), React.createElement(TouchableOpacity, {\n        style: styles.applyBtn,\n        onPress: function onPress() {\n          applyJobs(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 49\n        }\n      }, React.createElement(Text, {\n        style: styles.moreBtnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 53\n        }\n      }, \"Easy Apply\")));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 33\n    }\n  }) : React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 37\n    }\n  }, \"Job Post not found.\"))), React.createElement(TouchableOpacity, {\n    style: styles.moreBtn,\n    onPress: function onPress() {\n      viewMoreJobs();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.moreBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 29\n    }\n  }, \"View more jobs\"))))), React.createElement(View, {\n    style: styles.bottomNavigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, React.createElement(BottomTabNavigator, {\n    userData: userData,\n    routeName: routeName,\n    setSettingModalVisible: setSettingModalVisible,\n    switchToScreen: switchToScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }\n  })), React.createElement(Toast, {\n    visible: success,\n    duration: Toast.durations.LONG,\n    position: Toast.positions.BOTTOM,\n    backgroundColor: \"green\",\n    shadowColor: \"#dddddd\",\n    shadow: true,\n    animation: false,\n    hideOnPress: true,\n    onHidden: function onHidden() {\n      return setSuccess(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }, \"You have successfully applied for current job.\"), React.createElement(Toast, {\n    visible: success !== null && !success,\n    duration: Toast.durations.LONG,\n    position: Toast.positions.BOTTOM,\n    backgroundColor: \"red\",\n    shadowColor: \"#dddddd\",\n    shadow: true,\n    animation: false,\n    hideOnPress: true,\n    onHidden: function onHidden() {\n      return setSuccess(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, \"Something went wrong.\"), React.createElement(ContactOverlay, {\n    mobile: phone_number,\n    email: email,\n    modalVisible: modalVisible,\n    setModalVisible: setModalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }), React.createElement(SettingsOverlay, {\n    switchToScreen: switchToScreen,\n    settingModalVisible: settingModalVisible,\n    setSettingModalVisible: setSettingModalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }));\n};\n\nEmployerProfile[\"navigationOptions\"] = function (screenProps) {\n  return {\n    title: \"Employer's Profile\"\n  };\n};\n\nvar styles = StyleSheet.create({\n  overlay: {\n    flex: 1,\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    backgroundColor: \"#dddddd\",\n    height: 300,\n    width: width,\n    elevation: 6\n  },\n  container: {\n    flexDirection: \"column\",\n    flex: 1,\n    width: null,\n    height: null\n  },\n  jobSeekerDashboard: {\n    flex: 9.2\n  },\n  bottomNavigation: {\n    flex: 0.8,\n    backgroundColor: \"#dddddd\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8\n  },\n  loginText: {\n    color: \"black\",\n    fontSize: 30,\n    marginTop: 20,\n    marginLeft: 100\n  },\n  nextBtnText: {\n    color: \"black\",\n    fontSize: 20\n  },\n  loginBtn: {\n    width: \"20%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 550,\n    marginBottom: 100,\n    marginLeft: 300\n  },\n  backDrop: {\n    height: 170,\n    backgroundColor: \"#f8bbd0\"\n  },\n  imageContainer: {\n    height: 120,\n    width: 120,\n    borderColor: \"#dddddd\",\n    backgroundColor: \"#ffffff\",\n    borderRadius: 100,\n    marginLeft: 15,\n    marginTop: 15,\n    position: \"absolute\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 10\n  },\n  metaContainer: {\n    backgroundColor: \"#f8bbd0\",\n    position: \"absolute\",\n    marginTop: 30,\n    width: \"100%\",\n    paddingBottom: 10\n  },\n  subMetaDataContainer: {\n    marginLeft: 150,\n    width: \"100%\"\n  },\n  nameContainer: {\n    marginTop: 5,\n    flexDirection: \"row\"\n  },\n  jobSeekerName: {\n    marginRight: 5,\n    fontWeight: \"700\",\n    fontSize: 18\n  },\n  boldText: {\n    fontWeight: \"700\"\n  },\n  profileImage: {\n    height: 120,\n    width: 120\n  },\n  actionContainer: {\n    height: 60,\n    width: 200,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    width: \"100%\"\n  },\n  contactBtn: {\n    width: \"40%\",\n    height: 40,\n    backgroundColor: \"#8fbc8f\",\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"flex-end\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 10,\n    marginHorizontal: 15\n  },\n  contactBtnText: {\n    color: \"white\",\n    fontSize: 16\n  },\n  starBtn: {\n    width: 40,\n    backgroundColor: \"#ffee58\",\n    borderRadius: 25,\n    alignSelf: \"flex-end\",\n    marginHorizontal: 5,\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 10\n  },\n  starBtnIcon: {\n    fontSize: 30,\n    padding: 5,\n    color: \"#9E9E9E\"\n  },\n  dataContainer: {\n    minHeight: 150,\n    backgroundColor: \"#ffffff\",\n    borderRadius: 5,\n    marginHorizontal: 15,\n    marginVertical: 10,\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 1,\n    elevation: 10\n  },\n  jobRow: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginVertical: 5,\n    marginHorizontal: 10\n  },\n  labelText: {\n    flex: 1,\n    fontWeight: \"700\"\n  },\n  dataText: {\n    flex: 1\n  },\n  applyBtn: {\n    width: \"40%\",\n    height: 40,\n    backgroundColor: \"#90caf9\",\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 10,\n    marginVertical: 5,\n    marginHorizontal: 10\n  },\n  moreBtn: {\n    width: \"40%\",\n    height: 40,\n    backgroundColor: \"#b9f6ca\",\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 10,\n    marginVertical: 15\n  },\n  moreBtnText: {\n    color: \"white\",\n    fontSize: 16\n  }\n});\nexport default EmployerProfile;","map":{"version":3,"sources":["/Users/rahulsharma/Desktop/Project/frontend/src/components/job_seeker/EmployerProfile.js"],"names":["React","useState","useEffect","Toast","_","AsyncStorage","BottomTabNavigator","ContactOverlay","SettingsOverlay","baseUrl","AntDesign","Dimensions","get","width","height","EmployerProfile","props","routeName","setRouteName","modalVisible","setModalVisible","settingModalVisible","setSettingModalVisible","employerData","setEmployerData","userData","setUserData","jobSeekerData","setJobSeekerData","jobsData","setJobsData","jobs","setJobs","success","setSuccess","switchToScreen","screen","params","navigation","navigate","state","employer","getItem","then","data","JSON","parse","user","login","error","console","log","message","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","stringify","employer_id","id","response","json","Error","result","catch","err","viewMoreJobs","applyJobs","job_post_id","user_id","setTimeout","image","company_name","first_name","last_name","phone_number","email","styles","container","jobSeekerDashboard","flexDirection","backDrop","imageContainer","profileImage","uri","metaContainer","subMetaDataContainer","jobSeekerName","nameContainer","boldText","actionContainer","starBtn","alert","starBtnIcon","contactBtn","contactBtnText","flex","length","job","toString","item","dataContainer","jobRow","labelText","dataText","job_title","job_description","wager_offered","applyBtn","moreBtnText","moreBtn","bottomNavigation","durations","LONG","positions","BOTTOM","screenProps","title","StyleSheet","create","overlay","position","left","top","backgroundColor","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","loginText","color","fontSize","marginTop","marginLeft","nextBtnText","loginBtn","borderRadius","alignItems","justifyContent","marginBottom","borderColor","paddingBottom","marginRight","fontWeight","alignSelf","marginHorizontal","padding","minHeight","marginVertical"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {\n    StyleSheet,\n    Text,\n    View,\n    ScrollView,\n    Dimensions,\n    Image,\n    TouchableHighlight,\n    TouchableOpacity,\n    SafeAreaView,\n    FlatList,\n} from \"react-native\";\nimport Toast from \"react-native-root-toast\";\nimport _ from \"lodash\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport BottomTabNavigator from \"./BottomTabNavigator\";\nimport ContactOverlay from \"./ContactOverlay\";\nimport SettingsOverlay from \"./SettingsOverlay\";\nimport {baseUrl} from \"../../utils/constants\";\nimport {AntDesign} from \"@expo/vector-icons\";\n\n// We can use this to make the overlay fill the entire width\nconst {width, height} = Dimensions.get(\"window\");\n\nconst EmployerProfile = (props) => {\n    const [routeName, setRouteName] = useState(null);\n    const [modalVisible, setModalVisible] = useState(false);\n    const [settingModalVisible, setSettingModalVisible] = useState(false);\n    const [employerData, setEmployerData] = useState({});\n    const [userData, setUserData] = useState({});\n    const [jobSeekerData, setJobSeekerData] = useState({});\n    const [jobsData, setJobsData] = useState([]);\n    const [jobs, setJobs] = useState([]);\n    const [success, setSuccess] = useState(null);\n\n    function switchToScreen(screen, params) {\n        props.navigation.navigate(screen, params);\n    }\n\n    useEffect(() => {\n        let {userData, employer} = props.navigation.state.params;\n        setEmployerData(employer);\n        setUserData(userData);\n        setRouteName(props.navigation.state.routeName);\n\n        try {\n            AsyncStorage.getItem(\"jobSeekerLoginData\").then((data) => {\n                const {user, login} = JSON.parse(data);\n                setUserData(login);\n                setJobSeekerData(user);\n            });\n        } catch (error) {\n            // Error retrieving data\n            console.log(error.message);\n        }\n\n        fetch(baseUrl + \"api/employer/get-jobs\", {\n            method: \"POST\",\n            mode: \"cors\", // no-cors, *cors, same-origin\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: \"same-origin\", // include, *same-origin, omit\n            headers: {\n                \"Content-Type\": \"application/json\",\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            redirect: \"follow\", // manual, *follow, error\n            referrerPolicy: \"no-referrer\",\n            body: JSON.stringify({\n                employer_id: employer.id,\n            }),\n        })\n            .then((response) => response.json())\n            .then((response) => {\n                if (!response.success) throw new Error(response);\n                else {\n                    setJobsData(response.result);\n                    if (response.result) {\n                        setJobs([response.result[0]]);\n                    }\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    function viewMoreJobs() {\n        setJobs(jobsData);\n    }\n\n    function applyJobs(job_post_id) {\n        const user_id = jobSeekerData.id;\n\n        fetch(baseUrl + \"api/job-seeker/apply-job\", {\n            method: \"POST\",\n            mode: \"cors\", // no-cors, *cors, same-origin\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: \"same-origin\", // include, *same-origin, omit\n            headers: {\n                \"Content-Type\": \"application/json\",\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            redirect: \"follow\", // manual, *follow, error\n            referrerPolicy: \"no-referrer\",\n            body: JSON.stringify({\n                user_id,\n                job_post_id,\n            }),\n        })\n            .then((response) => response.json())\n            .then((response) => {\n                if (!response.success) {\n                    setSuccess(false);\n                    setTimeout(function () {\n                        setSuccess(null);\n                    }, 3000);\n                    throw new Error(response);\n                } else {\n                    setSuccess(true);\n                    setTimeout(function () {\n                        setSuccess(null);\n                    }, 3000);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                setSuccess(false);\n                setTimeout(function () {\n                    setSuccess(null);\n                }, 3000);\n            });\n    }\n\n    const {\n        image,\n        company_name,\n        first_name,\n        last_name,\n        phone_number,\n        email,\n    } = employerData;\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.jobSeekerDashboard}>\n                <ScrollView>\n                    <View style={{flexDirection: \"column\"}}>\n                        <View style={styles.backDrop}></View>\n                        <View style={styles.imageContainer}>\n                            {image ? (\n                                <Image\n                                    style={styles.profileImage}\n                                    source={{uri: image}}\n                                />\n                            ) : (\n                                <Image\n                                    source={{\n                                        uri:\n                                            \"https://i.ya-webdesign.com/images/blank-profile-picture-png-8.png\",\n                                    }}\n                                    style={styles.profileImage}\n                                />\n                            )}\n                        </View>\n                        <View style={styles.metaContainer}>\n                            {employerData !== null ? (\n                                <View style={styles.subMetaDataContainer}>\n                                    <View>\n                                        <Text style={[styles.jobSeekerName]}>\n                                            {company_name}\n                                        </Text>\n                                    </View>\n                                    <View style={styles.nameContainer}>\n                                        <Text style={[styles.boldText]}>\n                                            {first_name}\n                                        </Text>\n                                        <Text style={[styles.boldText]}>\n                                            {last_name}\n                                        </Text>\n                                    </View>\n                                    <View>\n                                        <Text style={[styles.boldText]}>\n                                            {phone_number}\n                                        </Text>\n                                    </View>\n                                </View>\n                            ) : null}\n                            <View style={styles.actionContainer}>\n                                <TouchableHighlight\n                                    style={styles.starBtn}\n                                    onPress={() =>\n                                        alert(\n                                            \"Contact overlay should be displayed.\"\n                                        )\n                                    }\n                                >\n                                    <AntDesign\n                                        name=\"staro\"\n                                        style={styles.starBtnIcon}\n                                    />\n                                </TouchableHighlight>\n                                <TouchableOpacity\n                                    style={styles.contactBtn}\n                                    onPress={() => {\n                                        setModalVisible(true);\n                                    }}\n                                >\n                                    <Text style={styles.contactBtnText}>\n                                        Contact\n                                    </Text>\n                                </TouchableOpacity>\n                            </View>\n                        </View>\n\n                        <SafeAreaView style={{flex: 1}}>\n                            {jobs.length > 0 ? (\n                                <FlatList\n                                    showsVerticalScrollIndicator={false}\n                                    data={jobs}\n                                    keyExtractor={(job) => job.id.toString()}\n                                    renderItem={({item}) => {\n                                        return (\n                                            <View style={styles.dataContainer}>\n                                                <View style={styles.jobRow}>\n                                                    <Text\n                                                        style={styles.labelText}\n                                                    >\n                                                        Job Title:\n                                                    </Text>\n                                                    <Text\n                                                        style={styles.dataText}\n                                                    >\n                                                        {item.job_title}\n                                                    </Text>\n                                                </View>\n                                                <View style={styles.jobRow}>\n                                                    <Text\n                                                        style={styles.labelText}\n                                                    >\n                                                        Job Description:\n                                                    </Text>\n                                                    <Text\n                                                        style={styles.dataText}\n                                                    >\n                                                        {item.job_description}\n                                                    </Text>\n                                                </View>\n                                                <View style={styles.jobRow}>\n                                                    <Text\n                                                        style={styles.labelText}\n                                                    >\n                                                        Wager Offered:\n                                                    </Text>\n                                                    <Text\n                                                        style={styles.dataText}\n                                                    >\n                                                        {item.wager_offered}\n                                                    </Text>\n                                                </View>\n                                                <TouchableOpacity\n                                                    style={styles.applyBtn}\n                                                    onPress={() => {\n                                                        applyJobs(item.id);\n                                                    }}\n                                                >\n                                                    <Text\n                                                        style={\n                                                            styles.moreBtnText\n                                                        }\n                                                    >\n                                                        Easy Apply\n                                                    </Text>\n                                                </TouchableOpacity>\n                                            </View>\n                                        );\n                                    }}\n                                />\n                            ) : (\n                                <View style={styles.container}>\n                                    <Text>Job Post not found.</Text>\n                                </View>\n                            )}\n                        </SafeAreaView>\n\n                        <TouchableOpacity\n                            style={styles.moreBtn}\n                            onPress={() => {\n                                viewMoreJobs();\n                            }}\n                        >\n                            <Text style={styles.moreBtnText}>\n                                View more jobs\n                            </Text>\n                        </TouchableOpacity>\n                    </View>\n                </ScrollView>\n            </View>\n            <View style={styles.bottomNavigation}>\n                <BottomTabNavigator\n                    userData={userData}\n                    routeName={routeName}\n                    setSettingModalVisible={setSettingModalVisible}\n                    switchToScreen={switchToScreen}\n                />\n            </View>\n            <Toast\n                visible={success}\n                duration={Toast.durations.LONG}\n                position={Toast.positions.BOTTOM}\n                backgroundColor=\"green\"\n                shadowColor=\"#dddddd\"\n                shadow={true}\n                animation={false}\n                hideOnPress={true}\n                onHidden={() => setSuccess(null)}\n            >\n                You have successfully applied for current job.\n            </Toast>\n            <Toast\n                visible={success !== null && !success}\n                duration={Toast.durations.LONG}\n                position={Toast.positions.BOTTOM}\n                backgroundColor=\"red\"\n                shadowColor=\"#dddddd\"\n                shadow={true}\n                animation={false}\n                hideOnPress={true}\n                onHidden={() => setSuccess(null)}\n            >\n                Something went wrong.\n            </Toast>\n            <ContactOverlay\n                mobile={phone_number}\n                email={email}\n                modalVisible={modalVisible}\n                setModalVisible={setModalVisible}\n            />\n            <SettingsOverlay\n                switchToScreen={switchToScreen}\n                settingModalVisible={settingModalVisible}\n                setSettingModalVisible={setSettingModalVisible}\n            />\n        </View>\n    );\n};\n\nEmployerProfile[\"navigationOptions\"] = (screenProps) => ({\n    title: \"Employer's Profile\",\n});\n\nconst styles = StyleSheet.create({\n    overlay: {\n        flex: 1,\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        backgroundColor: \"#dddddd\",\n        height: 300,\n        width,\n        elevation: 6,\n    },\n    container: {\n        flexDirection: \"column\",\n        flex: 1,\n        width: null,\n        height: null,\n    },\n    jobSeekerDashboard: {\n        flex: 9.2,\n    },\n    bottomNavigation: {\n        flex: 0.8,\n        backgroundColor: \"#dddddd\",\n        shadowColor: \"#dddddd\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 4.65,\n        elevation: 8,\n    },\n    loginText: {\n        color: \"black\",\n        fontSize: 30,\n        marginTop: 20,\n        marginLeft: 100,\n    },\n    nextBtnText: {\n        color: \"black\",\n        fontSize: 20,\n    },\n    loginBtn: {\n        width: \"20%\",\n        backgroundColor: \"#fb5b5a\",\n        borderRadius: 25,\n        height: 50,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginTop: 550,\n        marginBottom: 100,\n        marginLeft: 300,\n    },\n    backDrop: {\n        height: 170,\n        backgroundColor: \"#f8bbd0\",\n    },\n    imageContainer: {\n        height: 120,\n        width: 120,\n        borderColor: \"#dddddd\",\n        backgroundColor: \"#ffffff\",\n        borderRadius: 100,\n        marginLeft: 15,\n        marginTop: 15,\n        position: \"absolute\",\n        shadowColor: \"#dddddd\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 4.65,\n        elevation: 10,\n    },\n    metaContainer: {\n        backgroundColor: \"#f8bbd0\",\n        position: \"absolute\",\n        marginTop: 30,\n        width: \"100%\",\n        paddingBottom: 10,\n    },\n    subMetaDataContainer: {\n        marginLeft: 150,\n        width: \"100%\",\n    },\n    nameContainer: {\n        marginTop: 5,\n        flexDirection: \"row\",\n    },\n    jobSeekerName: {\n        marginRight: 5,\n        fontWeight: \"700\",\n        fontSize: 18,\n    },\n    boldText: {\n        fontWeight: \"700\",\n    },\n    profileImage: {\n        height: 120,\n        width: 120,\n    },\n    actionContainer: {\n        height: 60,\n        width: 200,\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\",\n        width: \"100%\",\n    },\n    contactBtn: {\n        width: \"40%\",\n        height: 40,\n        backgroundColor: \"#8fbc8f\",\n        borderRadius: 25,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        alignSelf: \"flex-end\",\n        shadowColor: \"#dddddd\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 4.65,\n        elevation: 10,\n        marginHorizontal: 15,\n    },\n    contactBtnText: {\n        color: \"white\",\n        fontSize: 16,\n    },\n    starBtn: {\n        width: 40,\n        backgroundColor: \"#ffee58\",\n        borderRadius: 25,\n        alignSelf: \"flex-end\",\n        marginHorizontal: 5,\n        shadowColor: \"#dddddd\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 4.65,\n        elevation: 10,\n    },\n    starBtnIcon: {\n        fontSize: 30,\n        padding: 5,\n        color: \"#9E9E9E\",\n    },\n    dataContainer: {\n        minHeight: 150,\n        backgroundColor: \"#ffffff\",\n        borderRadius: 5,\n        marginHorizontal: 15,\n        marginVertical: 10,\n        shadowColor: \"#dddddd\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 1,\n        elevation: 10,\n    },\n    jobRow: {\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        marginVertical: 5,\n        marginHorizontal: 10,\n    },\n    labelText: {\n        flex: 1,\n        fontWeight: \"700\",\n    },\n    dataText: {\n        flex: 1,\n    },\n    applyBtn: {\n        width: \"40%\",\n        height: 40,\n        backgroundColor: \"#90caf9\",\n        borderRadius: 25,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        shadowColor: \"#dddddd\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 4.65,\n        elevation: 10,\n        marginVertical: 5,\n        marginHorizontal: 10,\n    },\n    moreBtn: {\n        width: \"40%\",\n        height: 40,\n        backgroundColor: \"#b9f6ca\",\n        borderRadius: 25,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        shadowColor: \"#dddddd\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 4.65,\n        elevation: 10,\n        marginVertical: 15,\n    },\n    moreBtnText: {\n        color: \"white\",\n        fontSize: 16,\n    },\n});\n\nexport default EmployerProfile;\n"]},"metadata":{},"sourceType":"module"}