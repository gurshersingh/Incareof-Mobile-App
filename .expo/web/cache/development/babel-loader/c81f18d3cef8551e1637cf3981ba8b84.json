{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\frontend\\\\src\\\\containers\\\\HomeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Toast from \"react-native-root-toast\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { baseUrl } from \"../utils/constants\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#ffffff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputView: {\n    width: \"70%\",\n    backgroundColor: \"#64358D\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  text: {\n    fontSize: 30\n  },\n  inputText: {\n    height: 50,\n    color: \"white\"\n  },\n  forgot: {\n    color: \"black\",\n    fontSize: 11\n  },\n  error: {\n    color: \"red\",\n    fontSize: 12,\n    marginTop: 20,\n    marginLeft: 35,\n    justifyContent: \"center\"\n  },\n  loginBtn: {\n    width: \"70%\",\n    backgroundColor: \"#8fbc8f\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  loginText: {\n    color: \"white\"\n  },\n  signupBtn: {\n    width: \"70%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 10,\n    marginBottom: 10\n  },\n  signupBtnText: {\n    color: \"white\"\n  }\n});\n\nvar HomeScreen = function (_React$Component) {\n  _inherits(HomeScreen, _React$Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this, props);\n\n    _this.handleEmailChange = function (event) {\n      _this.setState({\n        email: event\n      });\n    };\n\n    _this.handlePasswordChange = function (event) {\n      _this.setState({\n        password: event\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      _this.loginUser();\n    };\n\n    _this.loginUser = function () {\n      console.log(\"login uesr\");\n      fetch(baseUrl + \"api/login/check\", {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\",\n        body: JSON.stringify(_this.state)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        if (response.success) {\n          _this.setState({\n            success: true\n          });\n\n          var _response$result = response.result,\n              user = _response$result.user,\n              login = _response$result.login;\n          console.log(\"user type ===========> \", login.type);\n\n          if (login.type == \"EMPLOYER\") {\n            AsyncStorage.setItem(\"employerLoginData\", JSON.stringify({\n              user: user,\n              login: login\n            }));\n\n            _this.props.navigation.navigate(\"EmployerScreen\", response.result);\n          } else {\n            AsyncStorage.setItem(\"jobSeekerLoginData\", JSON.stringify({\n              user: user,\n              login: login\n            }));\n\n            _this.props.navigation.navigate(\"JobSeekerScreen\", login);\n          }\n        } else throw new Error(response);\n      }).catch(function (err) {\n        console.log(\"in error block\", err);\n\n        _this.setState({\n          err: \"Login Failed\",\n          success: false\n        });\n      });\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      success: true,\n      routeName: null\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/logo.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        name: \"email\",\n        type: \"text\",\n        style: styles.inputText,\n        placeholder: \"Email\",\n        placeholderTextColor: \"#dddddd\",\n        onChangeText: this.handleEmailChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        name: \"password\",\n        type: \"text\",\n        secureTextEntry: true,\n        style: styles.inputText,\n        placeholder: \"Password\",\n        placeholderTextColor: \"#dddddd\",\n        onChangeText: this.handlePasswordChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      })), React.createElement(Toast, {\n        visible: !this.state.success,\n        duration: Toast.durations.SHORT,\n        position: Toast.positions.BOTTOM,\n        backgroundColor: \"red\",\n        shadowColor: \"#dddddd\",\n        shadow: true,\n        animation: false,\n        hideOnPress: true,\n        onHidden: function onHidden() {\n          return _this2.setState({\n            success: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }\n      }, this.state.err), React.createElement(TouchableOpacity, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.forgot,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }, \"Forgot Password?\")), React.createElement(TouchableOpacity, {\n        style: styles.loginBtn,\n        onPress: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }\n      }, \"LOGIN\")), React.createElement(TouchableOpacity, {\n        style: styles.signupBtn,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"RegisterScr\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.signupBtnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, \"SIGN UP\")));\n    }\n  }]);\n\n  return HomeScreen;\n}(React.Component);\n\nexport default HomeScreen;","map":{"version":3,"sources":["D:/frontend/src/containers/HomeScreen.js"],"names":["React","Toast","AsyncStorage","baseUrl","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","inputView","width","borderRadius","height","marginBottom","padding","text","fontSize","inputText","color","forgot","error","marginTop","marginLeft","loginBtn","loginText","signupBtn","signupBtnText","HomeScreen","props","handleEmailChange","event","setState","email","handlePasswordChange","password","handleSubmit","loginUser","console","log","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","state","then","response","json","success","result","user","login","type","setItem","navigation","navigate","Error","catch","err","routeName","image","require","durations","SHORT","positions","BOTTOM","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Image,\r\n} from \"react-native\";\r\nimport Toast from \"react-native-root-toast\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\n\r\nimport {baseUrl} from \"../utils/constants\";\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#ffffff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputView: {\r\n    width: \"70%\",\r\n    backgroundColor: \"#64358D\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    marginBottom: 20,\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n  },\r\n  text: {\r\n    fontSize: 30,\r\n  },\r\n  inputText: {\r\n    height: 50,\r\n    color: \"white\",\r\n  },\r\n  forgot: {\r\n    color: \"black\",\r\n    fontSize: 11,\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    fontSize: 12,\r\n    marginTop: 20,\r\n    marginLeft: 35,\r\n    justifyContent: \"center\",\r\n  },\r\n  loginBtn: {\r\n    width: \"70%\",\r\n    backgroundColor: \"#8fbc8f\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 40,\r\n    marginBottom: 10,\r\n  },\r\n  loginText: {\r\n    color: \"white\",\r\n  },\r\n  signupBtn: {\r\n    width: \"70%\",\r\n    backgroundColor: \"#fb5b5a\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  signupBtnText: {\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nclass HomeScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      success: true,\r\n      routeName: null,\r\n    };\r\n  }\r\n\r\n  handleEmailChange = (event) => {\r\n    this.setState({\r\n      email: event,\r\n    });\r\n  };\r\n  handlePasswordChange = (event) => {\r\n    this.setState({\r\n      password: event,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    this.loginUser();\r\n  };\r\n\r\n  loginUser = () => {\r\n    console.log(\"login uesr\");\r\n    fetch(baseUrl + \"api/login/check\", {\r\n      method: \"POST\",\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: \"follow\", // manual, *follow, error\r\n      referrerPolicy: \"no-referrer\",\r\n      body: JSON.stringify(this.state),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response.success) {\r\n          this.setState({success: true});\r\n          const {user, login} = response.result;\r\n          // this.props.navigation.navigate('Login', {user_type:response.result.user_type})\r\n          console.log(\"user type ===========> \", login.type);\r\n          if (login.type == \"EMPLOYER\") {\r\n            AsyncStorage.setItem(\r\n              \"employerLoginData\",\r\n              JSON.stringify({user, login})\r\n            );\r\n            this.props.navigation.navigate(\"EmployerScreen\", response.result);\r\n          } else {\r\n            AsyncStorage.setItem(\r\n              \"jobSeekerLoginData\",\r\n              JSON.stringify({user, login})\r\n            );\r\n            this.props.navigation.navigate(\"JobSeekerScreen\", login);\r\n          }\r\n        } else throw new Error(response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"in error block\", err);\r\n        this.setState({err: \"Login Failed\", success: false});\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.image}>\r\n          <Image source={require(\"../../assets/logo.png\")} />\r\n        </View>\r\n        <View style={styles.inputView}>\r\n          <TextInput\r\n            name=\"email\"\r\n            type=\"text\"\r\n            style={styles.inputText}\r\n            placeholder=\"Email\"\r\n            placeholderTextColor=\"#dddddd\"\r\n            onChangeText={this.handleEmailChange}\r\n          />\r\n        </View>\r\n        <View style={styles.inputView}>\r\n          <TextInput\r\n            name=\"password\"\r\n            type=\"text\"\r\n            secureTextEntry\r\n            style={styles.inputText}\r\n            placeholder=\"Password\"\r\n            placeholderTextColor=\"#dddddd\"\r\n            onChangeText={this.handlePasswordChange}\r\n          />\r\n        </View>\r\n        <Toast\r\n          visible={!this.state.success}\r\n          duration={Toast.durations.SHORT}\r\n          position={Toast.positions.BOTTOM}\r\n          backgroundColor=\"red\"\r\n          shadowColor=\"#dddddd\"\r\n          shadow={true}\r\n          animation={false}\r\n          hideOnPress={true}\r\n          onHidden={() => this.setState({success: true})}\r\n        >\r\n          {this.state.err}\r\n        </Toast>\r\n        <TouchableOpacity>\r\n          <Text style={styles.forgot}>Forgot Password?</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity style={styles.loginBtn} onPress={this.handleSubmit}>\r\n          <Text style={styles.loginText}>LOGIN</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          style={styles.signupBtn}\r\n          onPress={() => this.props.navigation.navigate(\"RegisterScr\")}\r\n        >\r\n          <Text style={styles.signupBtnText}>SIGN UP</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeScreen;\r\n"]},"metadata":{},"sourceType":"module"}