{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rahulsharma/Desktop/Project/frontend/src/containers/JobPost.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { Picker } from \"@react-native-community/picker\";\nimport Toast from \"react-native-toast-message\";\nimport _ from \"lodash\";\nimport { baseUrl } from \"../utils/constants\";\n\nvar JobPost = function (_React$Component) {\n  _inherits(JobPost, _React$Component);\n\n  var _super = _createSuper(JobPost);\n\n  function JobPost(props) {\n    var _this;\n\n    _classCallCheck(this, JobPost);\n\n    _this = _super.call(this, props);\n\n    _this.handleSubmit = function () {\n      var _this$state = _this.state,\n          job_title = _this$state.job_title,\n          job_description = _this$state.job_description,\n          start_date = _this$state.start_date,\n          end_date = _this$state.end_date,\n          wager_offered = _this$state.wager_offered,\n          job_service_id = _this$state.job_service_id;\n\n      if (job_title && job_description && start_date && end_date && wager_offered && job_service_id) {\n        fetch(baseUrl + \"api/employer/post-job\", {\n          method: \"POST\",\n          mode: \"cors\",\n          cache: \"no-cache\",\n          credentials: \"same-origin\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          redirect: \"follow\",\n          referrerPolicy: \"no-referrer\",\n          body: JSON.stringify(_this.state)\n        }).then(function (response) {\n          return response.json();\n        }).then(function (response) {\n          if (!response.success) {\n            console.log(response);\n            Toast.show({\n              type: \"info\",\n              position: \"top\",\n              text1: \"Info\",\n              text2: response.err + \".\"\n            });\n          } else {\n            _this.props.navigation.navigate(\"SuccessScreen\", {\n              screen: \"EmployerScreen\"\n            });\n          }\n        }).catch(function (err) {\n          Toast.show({\n            type: \"error\",\n            position: \"top\",\n            text1: \"Warning\",\n            text2: \"Something went wrong. Please, try again later.\"\n          });\n        });\n      } else {\n        Toast.show({\n          type: \"error\",\n          position: \"top\",\n          text1: \"Warning\",\n          text2: \"Please, check input fileds\"\n        });\n      }\n    };\n\n    _this.dateTimerPickerChange = function (event, selectedDate) {\n      var currentDate = selectedDate || _this.state.start_date;\n\n      _this.setState({\n        show: Platform.OS === \"ios\",\n        start_date: currentDate\n      });\n    };\n\n    _this.showMode = function (currentMode) {\n      _this.setState({\n        show: true,\n        mode: currentMode\n      });\n    };\n\n    _this.showDatepicker = function () {\n      _this.showMode(\"date\");\n    };\n\n    _this.endDateTimerPickerChange = function (event, selectedDate) {\n      var currentDate = selectedDate || _this.state.end_date;\n\n      _this.setState({\n        endShow: Platform.OS === \"ios\",\n        end_date: currentDate\n      });\n    };\n\n    _this.showEndMode = function (currentMode) {\n      _this.setState({\n        endShow: true,\n        endMode: currentMode\n      });\n    };\n\n    _this.showEndDatepicker = function () {\n      _this.showEndMode(\"date\");\n    };\n\n    _this.handleInputChange = function (text, name) {\n      var _this$setState;\n\n      var validation_error = _this.state.validation_error;\n\n      if (_.isEmpty(text)) {\n        validation_error[name] = {\n          error: true,\n          message: name.replace(/_/g, \" \") + \" is required.\"\n        };\n      } else {\n        validation_error[name] = {\n          error: false,\n          message: null\n        };\n      }\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, name, text), _defineProperty(_this$setState, \"validation_error\", validation_error), _this$setState));\n    };\n\n    _this.state = {\n      job_title: \"\",\n      job_description: \"\",\n      start_date: new Date(),\n      show: false,\n      mode: \"date\",\n      end_date: new Date(),\n      endShow: false,\n      endMode: \"date\",\n      wager_offered: \"\",\n      job_service_id: \"\",\n      services: [],\n      success: false,\n      err: \"\",\n      user_id: null,\n      validation_error: {\n        job_title: {\n          error: false,\n          message: null\n        },\n        job_description: {\n          error: false,\n          message: null\n        },\n        start_date: {\n          error: false,\n          message: null\n        },\n        end_date: {\n          error: false,\n          message: null\n        },\n        wager_offered: {\n          error: false,\n          message: null\n        },\n        job_service_id: {\n          error: false,\n          message: null\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(JobPost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.fetchService();\n\n      try {\n        AsyncStorage.getItem(\"employerLoginData\").then(function (data) {\n          var _JSON$parse = JSON.parse(data),\n              login = _JSON$parse.login,\n              user = _JSON$parse.user;\n\n          _this2.setState({\n            user_id: user.id\n          });\n        });\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n  }, {\n    key: \"fetchService\",\n    value: function fetchService() {\n      var _this3 = this;\n\n      var api_url = baseUrl + \"api/service/list\";\n      fetch(api_url, {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\"\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        if (response.success) {\n          _this3.setState({\n            services: response.result\n          });\n        } else {\n          throw new Error(response);\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state$validatio = this.state.validation_error,\n          job_title = _this$state$validatio.job_title,\n          job_description = _this$state$validatio.job_description,\n          start_date = _this$state$validatio.start_date,\n          end_date = _this$state$validatio.end_date,\n          wager_offered = _this$state$validatio.wager_offered,\n          job_service_id = _this$state$validatio.job_service_id;\n      return React.createElement(ScrollView, {\n        contentContainerStyle: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      }, React.createElement(LinearGradient, {\n        colors: [\"#BA9ED1\", \"#765A8D\"],\n        style: styles.container,\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 0,\n          y: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.headingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }\n      }, \"Post a new Job\")), React.createElement(TextInput, {\n        placeholder: \"Enter job's title\",\n        style: [styles.textInput, styles.inputWidth],\n        onSubmitEditing: function onSubmitEditing() {\n          _this4.secondTextInput.focus();\n        },\n        returnKeyType: \"next\",\n        onChangeText: function onChangeText(text) {\n          return _this4.handleInputChange(text, \"job_title\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }\n      }), job_title.error ? React.createElement(Text, {\n        style: styles.errorText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }\n      }, job_title.message) : null, React.createElement(TextInput, {\n        ref: function ref(input) {\n          _this4.secondTextInput = input;\n        },\n        placeholder: \"Enter job's description\",\n        style: [styles.textInput, styles.inputWidth],\n        onSubmitEditing: function onSubmitEditing() {\n          _this4.thirdTextInput.focus();\n        },\n        returnKeyType: \"next\",\n        onChangeText: function onChangeText(text) {\n          return _this4.handleInputChange(text, \"job_description\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }\n      }), job_description.error ? React.createElement(Text, {\n        style: styles.errorText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }\n      }, job_description.message) : null, React.createElement(TouchableOpacity, {\n        onPress: this.showDatepicker,\n        style: [styles.textInput, styles.inputWidth],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Select a start date\",\n        editable: false,\n        returnKeyType: \"next\",\n        value: this.state.start_date.toLocaleDateString(\"nl\", {\n          year: \"numeric\",\n          month: \"2-digit\",\n          day: \"2-digit\"\n        }),\n        pointerEvents: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 25\n        }\n      })), start_date.error ? React.createElement(Text, {\n        style: styles.errorText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }\n      }, start_date.message) : null, this.state.show && React.createElement(DateTimePicker, {\n        testID: \"dateTimePicker\",\n        timeZoneOffsetInMinutes: 0,\n        value: this.state.start_date,\n        mode: this.state.mode,\n        is24Hour: true,\n        display: \"default\",\n        onChange: this.dateTimerPickerChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 25\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: this.showEndDatepicker,\n        style: [styles.textInput, styles.inputWidth],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Select an end date\",\n        editable: false,\n        returnKeyType: \"next\",\n        value: this.state.end_date.toLocaleDateString(\"nl\", {\n          year: \"numeric\",\n          month: \"2-digit\",\n          day: \"2-digit\"\n        }),\n        pointerEvents: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 25\n        }\n      })), end_date.error ? React.createElement(Text, {\n        style: styles.errorText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }\n      }, end_date.message) : null, this.state.endShow && React.createElement(DateTimePicker, {\n        testID: \"dateTimePicker\",\n        timeZoneOffsetInMinutes: 0,\n        value: this.state.end_date,\n        mode: this.state.endMode,\n        is24Hour: true,\n        display: \"default\",\n        onChange: this.endDateTimerPickerChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }\n      }), React.createElement(TextInput, {\n        ref: function ref(input) {\n          _this4.thirdTextInput = input;\n        },\n        placeholder: \"Enter wager\",\n        keyboardType: \"numeric\",\n        style: [styles.textInput, styles.inputWidth],\n        returnKeyType: \"next\",\n        onChangeText: function onChangeText(text) {\n          return _this4.handleInputChange(text, \"wager_offered\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }\n      }), wager_offered.error ? React.createElement(Text, {\n        style: styles.errorText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 25\n        }\n      }, wager_offered.message) : null, React.createElement(View, {\n        style: [styles.pickerStyle, styles.inputWidth],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 21\n        }\n      }, React.createElement(Picker, {\n        selectedValue: parseInt(this.state.job_service_id),\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return _this4.handleInputChange(itemValue.toString(), \"job_service_id\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 25\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"Select service\",\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 29\n        }\n      }), this.state.services.map(function (service) {\n        return React.createElement(Picker.Item, {\n          key: service.id,\n          label: service.service_name,\n          value: service.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 37\n          }\n        });\n      }))), job_service_id.error ? React.createElement(Text, {\n        style: styles.errorText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 25\n        }\n      }, job_service_id.message) : null, this.state.success ? React.createElement(View, {\n        style: styles.showMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 29\n        }\n      }, this.state.message)) : this.state.err ? React.createElement(View, {\n        style: styles.showMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 29\n        }\n      }, this.state.message)) : null, React.createElement(TouchableOpacity, {\n        style: styles.submitBtn,\n        onPress: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.btnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 25\n        }\n      }, \"Post job\")), React.createElement(Toast, {\n        ref: function ref(_ref) {\n          return Toast.setRef(_ref);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return JobPost;\n}(React.Component);\n\nexport { JobPost as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  scrollContianer: {\n    flex: 1\n  },\n  boxContainer: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  headingText: {\n    fontWeight: \"800\",\n    fontSize: 30,\n    alignSelf: \"center\",\n    marginTop: 30,\n    marginBottom: 20\n  },\n  textInput: {\n    height: 50,\n    backgroundColor: \"#ffffff\",\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderColor: \"#ffffff\",\n    borderWidth: 1,\n    borderRadius: 5,\n    marginVertical: 10,\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8\n  },\n  inputWidth: {\n    width: \"70%\"\n  },\n  pickerStyle: {\n    height: 50,\n    backgroundColor: \"#ffffff\",\n    paddingHorizontal: 10,\n    paddingVertical: 0,\n    borderColor: \"#ffffff\",\n    borderWidth: 1,\n    borderRadius: 5,\n    marginVertical: 10,\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8\n  },\n  submitBtn: {\n    height: 50,\n    backgroundColor: \"#99D5CA\",\n    borderColor: \"#99D5CA\",\n    borderWidth: 1,\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 60,\n    width: \"35%\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8\n  },\n  btnText: {\n    textTransform: \"uppercase\",\n    fontWeight: \"700\",\n    color: \"#ffffff\"\n  },\n  errorText: {\n    textTransform: \"capitalize\",\n    fontWeight: \"700\",\n    color: \"#ffffff\"\n  }\n});","map":{"version":3,"sources":["/Users/rahulsharma/Desktop/Project/frontend/src/containers/JobPost.js"],"names":["React","LinearGradient","AsyncStorage","DateTimePicker","Picker","Toast","_","baseUrl","JobPost","props","handleSubmit","state","job_title","job_description","start_date","end_date","wager_offered","job_service_id","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","then","response","json","success","console","log","show","type","position","text1","text2","err","navigation","navigate","screen","catch","dateTimerPickerChange","event","selectedDate","currentDate","setState","Platform","OS","showMode","currentMode","showDatepicker","endDateTimerPickerChange","endShow","showEndMode","endMode","showEndDatepicker","handleInputChange","text","name","validation_error","isEmpty","error","message","replace","Date","services","user_id","fetchService","getItem","data","parse","login","user","id","api_url","result","Error","flex","styles","container","x","y","headingText","textInput","inputWidth","secondTextInput","focus","errorText","input","thirdTextInput","toLocaleDateString","year","month","day","pickerStyle","parseInt","itemValue","itemIndex","toString","map","service","service_name","showMessage","submitBtn","btnText","ref","setRef","Component","StyleSheet","create","flexDirection","justifyContent","alignItems","scrollContianer","boxContainer","fontWeight","fontSize","alignSelf","marginTop","marginBottom","height","backgroundColor","paddingHorizontal","paddingVertical","borderColor","borderWidth","borderRadius","marginVertical","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","textTransform","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    StyleSheet,\n    Text,\n    View,\n    TextInput,\n    TouchableOpacity,\n    ScrollView,\n} from \"react-native\";\nimport {LinearGradient} from \"expo-linear-gradient\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport {Picker} from \"@react-native-community/picker\";\nimport Toast from \"react-native-toast-message\";\nimport _ from \"lodash\";\n\nimport {baseUrl} from \"../utils/constants\";\nexport default class JobPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            job_title: \"\",\n            job_description: \"\",\n            start_date: new Date(),\n            show: false,\n            mode: \"date\",\n            end_date: new Date(),\n            endShow: false,\n            endMode: \"date\",\n            wager_offered: \"\",\n            job_service_id: \"\",\n            services: [],\n            success: false,\n            err: \"\",\n            user_id: null,\n            validation_error: {\n                job_title: {\n                    error: false,\n                    message: null,\n                },\n                job_description: {\n                    error: false,\n                    message: null,\n                },\n                start_date: {\n                    error: false,\n                    message: null,\n                },\n                end_date: {\n                    error: false,\n                    message: null,\n                },\n                wager_offered: {\n                    error: false,\n                    message: null,\n                },\n                job_service_id: {\n                    error: false,\n                    message: null,\n                },\n            },\n        };\n    }\n\n    componentDidMount() {\n        this.fetchService();\n        try {\n            AsyncStorage.getItem(\"employerLoginData\").then((data) => {\n                const {login, user} = JSON.parse(data);\n                this.setState({\n                    user_id: user.id,\n                });\n            });\n        } catch (error) {\n            // Error retrieving data\n            console.log(error.message);\n        }\n    }\n\n    fetchService() {\n        const api_url = baseUrl + `api/service/list`;\n        fetch(api_url, {\n            method: \"GET\",\n            mode: \"cors\", // no-cors, *cors, same-origin\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: \"same-origin\", // include, *same-origin, omit\n            headers: {\n                \"Content-Type\": \"application/json\",\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            redirect: \"follow\", // manual, *follow, error\n            referrerPolicy: \"no-referrer\",\n        })\n            .then((response) => response.json())\n            .then((response) => {\n                if (response.success) {\n                    this.setState({services: response.result});\n                } else {\n                    throw new Error(response);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    handleSubmit = () => {\n        const {\n            job_title,\n            job_description,\n            start_date,\n            end_date,\n            wager_offered,\n            job_service_id,\n        } = this.state;\n\n        if (\n            job_title &&\n            job_description &&\n            start_date &&\n            end_date &&\n            wager_offered &&\n            job_service_id\n        ) {\n            fetch(baseUrl + \"api/employer/post-job\", {\n                method: \"POST\",\n                mode: \"cors\", // no-cors, *cors, same-origin\n                cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n                credentials: \"same-origin\", // include, *same-origin, omit\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                redirect: \"follow\", // manual, *follow, error\n                referrerPolicy: \"no-referrer\",\n                body: JSON.stringify(this.state),\n            })\n                .then((response) => response.json())\n                .then((response) => {\n                    if (!response.success) {\n                        console.log(response);\n                        Toast.show({\n                            type: \"info\",\n                            position: \"top\",\n                            text1: \"Info\",\n                            text2: `${response.err}.`,\n                        });\n                        // throw new Error(response);\n                    } else {\n                        this.props.navigation.navigate(\"SuccessScreen\", {\n                            screen: \"EmployerScreen\",\n                        });\n                        // Toast.show({\n                        //   type: 'success',\n                        //   position: 'top',\n                        //   text1: 'Success',\n                        //   text2: 'Profile updated successfully.',\n                        // });\n                    }\n                })\n                .catch((err) => {\n                    Toast.show({\n                        type: \"error\",\n                        position: \"top\",\n                        text1: \"Warning\",\n                        text2: \"Something went wrong. Please, try again later.\",\n                    });\n                    // this.setState({\n                    //   success: false,\n                    //   err: \"Registration Failed. Please try again later\",\n                    // });\n                });\n        } else {\n            Toast.show({\n                type: \"error\",\n                position: \"top\",\n                text1: \"Warning\",\n                text2: \"Please, check input fileds\",\n            });\n        }\n    };\n\n    dateTimerPickerChange = (event, selectedDate) => {\n        const currentDate = selectedDate || this.state.start_date;\n        this.setState({show: Platform.OS === \"ios\", start_date: currentDate});\n    };\n\n    showMode = (currentMode) => {\n        this.setState({show: true, mode: currentMode});\n    };\n\n    showDatepicker = () => {\n        this.showMode(\"date\");\n    };\n\n    endDateTimerPickerChange = (event, selectedDate) => {\n        const currentDate = selectedDate || this.state.end_date;\n        this.setState({endShow: Platform.OS === \"ios\", end_date: currentDate});\n    };\n\n    showEndMode = (currentMode) => {\n        this.setState({endShow: true, endMode: currentMode});\n    };\n\n    showEndDatepicker = () => {\n        this.showEndMode(\"date\");\n    };\n\n    handleInputChange = (text, name) => {\n        const {validation_error} = this.state;\n        if (_.isEmpty(text)) {\n            validation_error[name] = {\n                error: true,\n                message: name.replace(/_/g, \" \") + \" is required.\",\n            };\n        } else {\n            validation_error[name] = {\n                error: false,\n                message: null,\n            };\n        }\n        this.setState({[name]: text, validation_error});\n    };\n\n    render() {\n        const {\n            job_title,\n            job_description,\n            start_date,\n            end_date,\n            wager_offered,\n            job_service_id,\n        } = this.state.validation_error;\n\n        return (\n            <ScrollView\n                contentContainerStyle={{\n                    flex: 1,\n                }}\n            >\n                <LinearGradient\n                    colors={[\"#BA9ED1\", \"#765A8D\"]}\n                    style={styles.container}\n                    //  Linear Gradient\n                    start={{x: 0, y: 0}}\n                    end={{x: 0, y: 1}}\n                >\n                    <View>\n                        <Text style={styles.headingText}>Post a new Job</Text>\n                    </View>\n                    <TextInput\n                        placeholder=\"Enter job's title\"\n                        style={[styles.textInput, styles.inputWidth]}\n                        onSubmitEditing={() => {\n                            this.secondTextInput.focus();\n                        }}\n                        returnKeyType={\"next\"}\n                        // autoFocus={true}\n                        onChangeText={(text) =>\n                            this.handleInputChange(text, \"job_title\")\n                        }\n                    />\n                    {job_title.error ? (\n                        <Text style={styles.errorText}>\n                            {job_title.message}\n                        </Text>\n                    ) : null}\n                    <TextInput\n                        ref={(input) => {\n                            this.secondTextInput = input;\n                        }}\n                        placeholder=\"Enter job's description\"\n                        style={[styles.textInput, styles.inputWidth]}\n                        onSubmitEditing={() => {\n                            this.thirdTextInput.focus();\n                        }}\n                        returnKeyType={\"next\"}\n                        onChangeText={(text) =>\n                            this.handleInputChange(text, \"job_description\")\n                        }\n                    />\n                    {job_description.error ? (\n                        <Text style={styles.errorText}>\n                            {job_description.message}\n                        </Text>\n                    ) : null}\n                    <TouchableOpacity\n                        onPress={this.showDatepicker}\n                        style={[styles.textInput, styles.inputWidth]}\n                    >\n                        <TextInput\n                            placeholder=\"Select a start date\"\n                            editable={false}\n                            returnKeyType={\"next\"}\n                            value={this.state.start_date.toLocaleDateString(\n                                \"nl\",\n                                {\n                                    year: \"numeric\",\n                                    month: \"2-digit\",\n                                    day: \"2-digit\",\n                                }\n                            )}\n                            pointerEvents=\"none\"\n                        />\n                    </TouchableOpacity>\n                    {start_date.error ? (\n                        <Text style={styles.errorText}>\n                            {start_date.message}\n                        </Text>\n                    ) : null}\n                    {this.state.show && (\n                        <DateTimePicker\n                            testID=\"dateTimePicker\"\n                            timeZoneOffsetInMinutes={0}\n                            value={this.state.start_date}\n                            mode={this.state.mode}\n                            is24Hour={true}\n                            display=\"default\"\n                            onChange={this.dateTimerPickerChange}\n                        />\n                    )}\n                    <TouchableOpacity\n                        onPress={this.showEndDatepicker}\n                        style={[styles.textInput, styles.inputWidth]}\n                    >\n                        <TextInput\n                            placeholder=\"Select an end date\"\n                            editable={false}\n                            returnKeyType={\"next\"}\n                            value={this.state.end_date.toLocaleDateString(\n                                \"nl\",\n                                {\n                                    year: \"numeric\",\n                                    month: \"2-digit\",\n                                    day: \"2-digit\",\n                                }\n                            )}\n                            pointerEvents=\"none\"\n                        />\n                    </TouchableOpacity>\n                    {end_date.error ? (\n                        <Text style={styles.errorText}>{end_date.message}</Text>\n                    ) : null}\n                    {this.state.endShow && (\n                        <DateTimePicker\n                            testID=\"dateTimePicker\"\n                            timeZoneOffsetInMinutes={0}\n                            value={this.state.end_date}\n                            mode={this.state.endMode}\n                            is24Hour={true}\n                            display=\"default\"\n                            onChange={this.endDateTimerPickerChange}\n                        />\n                    )}\n                    <TextInput\n                        ref={(input) => {\n                            this.thirdTextInput = input;\n                        }}\n                        placeholder=\"Enter wager\"\n                        keyboardType=\"numeric\"\n                        style={[styles.textInput, styles.inputWidth]}\n                        returnKeyType={\"next\"}\n                        onChangeText={(text) =>\n                            this.handleInputChange(text, \"wager_offered\")\n                        }\n                    />\n                    {wager_offered.error ? (\n                        <Text style={styles.errorText}>\n                            {wager_offered.message}\n                        </Text>\n                    ) : null}\n                    <View style={[styles.pickerStyle, styles.inputWidth]}>\n                        <Picker\n                            selectedValue={parseInt(this.state.job_service_id)}\n                            onValueChange={(itemValue, itemIndex) =>\n                                this.handleInputChange(\n                                    itemValue.toString(),\n                                    \"job_service_id\"\n                                )\n                            }\n                        >\n                            <Picker.Item label=\"Select service\" value=\"\" />\n                            {this.state.services.map((service) => {\n                                return (\n                                    <Picker.Item\n                                        key={service.id}\n                                        label={service.service_name}\n                                        value={service.id}\n                                    />\n                                );\n                            })}\n                        </Picker>\n                    </View>\n                    {job_service_id.error ? (\n                        <Text style={styles.errorText}>\n                            {job_service_id.message}\n                        </Text>\n                    ) : null}\n                    {this.state.success ? (\n                        <View style={styles.showMessage}>\n                            <Text>{this.state.message}</Text>\n                        </View>\n                    ) : this.state.err ? (\n                        <View style={styles.showMessage}>\n                            <Text>{this.state.message}</Text>\n                        </View>\n                    ) : null}\n                    <TouchableOpacity\n                        style={styles.submitBtn}\n                        onPress={this.handleSubmit}\n                    >\n                        <Text style={styles.btnText}>Post job</Text>\n                    </TouchableOpacity>\n                    <Toast ref={(ref) => Toast.setRef(ref)} />\n                </LinearGradient>\n            </ScrollView>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    scrollContianer: {\n        flex: 1,\n    },\n    boxContainer: {\n        flex: 1,\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    headingText: {\n        fontWeight: \"800\",\n        fontSize: 30,\n        alignSelf: \"center\",\n        marginTop: 30,\n        marginBottom: 20,\n    },\n    textInput: {\n        height: 50,\n        backgroundColor: \"#ffffff\",\n        paddingHorizontal: 10,\n        paddingVertical: 5,\n        borderColor: \"#ffffff\",\n        borderWidth: 1,\n        borderRadius: 5,\n        marginVertical: 10,\n        shadowColor: \"#dddddd\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 4.65,\n        elevation: 8,\n    },\n    inputWidth: {\n        width: \"70%\",\n    },\n    pickerStyle: {\n        height: 50,\n        backgroundColor: \"#ffffff\",\n        paddingHorizontal: 10,\n        paddingVertical: 0,\n        borderColor: \"#ffffff\",\n        borderWidth: 1,\n        borderRadius: 5,\n        marginVertical: 10,\n        shadowColor: \"#dddddd\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 4.65,\n        elevation: 8,\n    },\n    submitBtn: {\n        height: 50,\n        backgroundColor: \"#99D5CA\",\n        borderColor: \"#99D5CA\",\n        borderWidth: 1,\n        borderRadius: 25,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 60,\n        width: \"35%\",\n        shadowColor: \"#dddddd\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 4.65,\n        elevation: 8,\n    },\n    btnText: {\n        textTransform: \"uppercase\",\n        fontWeight: \"700\",\n        color: \"#ffffff\",\n    },\n    errorText: {\n        textTransform: \"capitalize\",\n        fontWeight: \"700\",\n        color: \"#ffffff\",\n        // width: \"70%\",\n        // borderColor: 'red',\n        // borderWidth: 1\n    },\n});\n"]},"metadata":{},"sourceType":"module"}