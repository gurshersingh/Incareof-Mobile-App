{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\frontend\\\\src\\\\containers\\\\job_seeker\\\\ChangePassword.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport BottomTabNavigator from \"../../components/job_seeker/BottomTabNavigator\";\nimport SearchFilterBar from \"../../components/job_seeker/SearchFilterBar\";\nimport SettingsOverlay from \"../../components/job_seeker/SettingsOverlay\";\nimport FilterOverlay from \"../../components/job_seeker/FilterOverlay\";\nimport _ from \"lodash\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { baseUrl } from \"../../utils/constants\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar ChangePassword = function ChangePassword(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      filterVisiblity = _useState2[0],\n      setFilterVisibility = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      settingModalVisible = _useState4[0],\n      setSettingModalVisible = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userData = _useState6[0],\n      setUserData = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      jobSeekerData = _useState8[0],\n      setJobSeekerData = _useState8[1];\n\n  var _useState9 = useState({\n    old_password: null,\n    new_password: null,\n    confirm_password: null,\n    old_password_error: {\n      error: false,\n      message: null\n    },\n    new_password_error: {\n      error: false,\n      message: null\n    },\n    confirm_password_error: {\n      error: false,\n      message: null\n    }\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      passwordObj = _useState10[0],\n      setPasswordObj = _useState10[1];\n\n  var old_password = passwordObj.old_password,\n      old_password_error = passwordObj.old_password_error,\n      new_password = passwordObj.new_password,\n      new_password_error = passwordObj.new_password_error,\n      confirm_password = passwordObj.confirm_password,\n      confirm_password_error = passwordObj.confirm_password_error;\n\n  function switchToScreen(screen, params) {\n    props.navigation.navigate(screen, params);\n  }\n\n  useEffect(function () {\n    if (_.isEmpty(userData)) {\n      try {\n        AsyncStorage.getItem(\"userData\").then(function (user) {\n          setUserData(JSON.parse(user));\n        });\n        AsyncStorage.getItem(\"jobSeekerData\").then(function (user) {\n          setJobSeekerData(JSON.parse(user));\n        });\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n\n    return function () {\n      console.log(\"clean up\");\n    };\n  }, []);\n\n  function handlePasswordChange(text, name) {\n    var password = _objectSpread({}, passwordObj);\n\n    password[name] = text;\n\n    if (_.isEmpty(text)) {\n      password[name + \"_error\"] = {\n        error: true,\n        message: name.replace(\"_\", \" \") + \" is required.\"\n      };\n    } else {\n      password[name + \"_error\"] = {\n        error: false,\n        message: null\n      };\n    }\n\n    setPasswordObj(password);\n  }\n\n  function confirmPasswordChange(text, name) {\n    var password = _objectSpread({}, passwordObj);\n\n    password[name] = text;\n\n    if (_.isEmpty(text)) {\n      password[name + \"_error\"] = {\n        error: true,\n        message: name.replace(\"_\", \" \") + \" is required.\"\n      };\n    } else {\n      console.log(password.new_password, text);\n\n      if (password.new_password !== text) {\n        password[name + \"_error\"] = {\n          error: true,\n          message: \"Password not matched.\"\n        };\n      } else {\n        password[name + \"_error\"] = {\n          error: false,\n          message: null\n        };\n      }\n    }\n\n    setPasswordObj(password);\n    console.log(password);\n  }\n\n  function changePassword() {\n    if (old_password_error && new_password && !old_password_error.error && !new_password_error.error && !confirm_password_error.error) {\n      fetch(baseUrl + \"api/login/change-password\", {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\",\n        body: JSON.stringify({\n          user_id: userData.id,\n          old_password: old_password,\n          new_password: new_password\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        if (!response.success) throw new Error(response);else {\n          alert(\"Password changed successfully.\");\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    } else {\n      alert(\"Check fields.\");\n    }\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.jobSeekerDashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, React.createElement(SearchFilterBar, {\n    filterVisiblity: filterVisiblity,\n    setFilterVisibility: setFilterVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.changePasswordContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    name: \"old_password\",\n    secureTextEntry: true,\n    style: styles.textInput,\n    placeholder: \"Enter current password\",\n    onChangeText: function onChangeText(text) {\n      return handlePasswordChange(text, \"old_password\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }), old_password_error.error ? React.createElement(Text, {\n    style: styles.errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }, old_password_error.message) : null, React.createElement(TextInput, {\n    name: \"new_password\",\n    secureTextEntry: true,\n    style: styles.textInput,\n    placeholder: \"New password\",\n    onChangeText: function onChangeText(text) {\n      return handlePasswordChange(text, \"new_password\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }), new_password_error.error ? React.createElement(Text, {\n    style: styles.errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, new_password_error.message) : null, React.createElement(TextInput, {\n    name: \"confirm_password\",\n    secureTextEntry: true,\n    style: styles.textInput,\n    placeholder: \"Confirm password\",\n    onChangeText: function onChangeText(text) {\n      return confirmPasswordChange(text, \"confirm_password\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }), confirm_password_error.error ? React.createElement(Text, {\n    style: styles.errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, confirm_password_error.message) : null, React.createElement(TouchableOpacity, {\n    style: styles.contactBtn,\n    onPress: function onPress() {\n      changePassword();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.contactBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, \"Change Password\")))), React.createElement(View, {\n    style: styles.bottomNavigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, React.createElement(BottomTabNavigator, {\n    userData: userData,\n    setSettingModalVisible: setSettingModalVisible,\n    switchToScreen: switchToScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  })), React.createElement(FilterOverlay, {\n    filterVisiblity: filterVisiblity,\n    setFilterVisibility: setFilterVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }), React.createElement(SettingsOverlay, {\n    switchToScreen: switchToScreen,\n    settingModalVisible: settingModalVisible,\n    setSettingModalVisible: setSettingModalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  overlay: {\n    flex: 1,\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    backgroundColor: \"#dddddd\",\n    height: 300,\n    width: width,\n    elevation: 6\n  },\n  container: {\n    flexDirection: \"column\",\n    flex: 1,\n    width: null,\n    height: null\n  },\n  jobSeekerDashboard: {\n    flex: 9.2\n  },\n  bottomNavigation: {\n    flex: 0.8,\n    backgroundColor: \"#dddddd\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8\n  },\n  changePasswordContainer: {\n    marginHorizontal: 20\n  },\n  textInput: {\n    marginVertical: 10,\n    backgroundColor: \"#ffffff\",\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65\n  },\n  errorText: {\n    textTransform: \"capitalize\",\n    color: \"red\"\n  },\n  contactBtn: {\n    width: \"40%\",\n    height: 36,\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    borderColor: \"#dddddd\",\n    borderWidth: 1,\n    shadowColor: \"#9E9E9E\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 4.65\n  },\n  contactBtnText: {\n    color: \"white\"\n  },\n  loginText: {\n    color: \"black\",\n    fontSize: 30,\n    marginTop: 20,\n    marginLeft: 100\n  },\n  nextBtnText: {\n    color: \"black\",\n    fontSize: 20\n  },\n  loginBtn: {\n    width: \"20%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 550,\n    marginBottom: 100,\n    marginLeft: 300\n  }\n});\nexport default ChangePassword;","map":{"version":3,"sources":["D:/frontend/src/containers/job_seeker/ChangePassword.js"],"names":["React","useState","useEffect","BottomTabNavigator","SearchFilterBar","SettingsOverlay","FilterOverlay","_","AsyncStorage","baseUrl","Dimensions","get","width","height","ChangePassword","props","filterVisiblity","setFilterVisibility","settingModalVisible","setSettingModalVisible","userData","setUserData","jobSeekerData","setJobSeekerData","old_password","new_password","confirm_password","old_password_error","error","message","new_password_error","confirm_password_error","passwordObj","setPasswordObj","switchToScreen","screen","params","navigation","navigate","isEmpty","getItem","then","user","JSON","parse","console","log","handlePasswordChange","text","name","password","replace","confirmPasswordChange","changePassword","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","stringify","user_id","id","response","json","success","Error","alert","catch","err","styles","container","jobSeekerDashboard","changePasswordContainer","textInput","errorText","contactBtn","contactBtnText","bottomNavigation","StyleSheet","create","overlay","flex","position","left","top","backgroundColor","elevation","flexDirection","shadowColor","shadowOffset","shadowOpacity","shadowRadius","marginHorizontal","marginVertical","paddingHorizontal","paddingVertical","textTransform","color","borderRadius","justifyContent","alignItems","alignSelf","borderColor","borderWidth","loginText","fontSize","marginTop","marginLeft","nextBtnText","loginBtn","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    TextInput,\r\n    View,\r\n    TouchableOpacity,\r\n    Dimensions,\r\n    SafeAreaView,\r\n} from \"react-native\";\r\nimport BottomTabNavigator from \"../../components/job_seeker/BottomTabNavigator\";\r\nimport SearchFilterBar from \"../../components/job_seeker/SearchFilterBar\";\r\nimport SettingsOverlay from \"../../components/job_seeker/SettingsOverlay\";\r\nimport FilterOverlay from \"../../components/job_seeker/FilterOverlay\";\r\nimport _ from \"lodash\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nimport { baseUrl } from \"../../utils/constants\";\r\n\r\n// We can use this to make the overlay fill the entire width\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\nconst ChangePassword = (props) => {\r\n    const [filterVisiblity, setFilterVisibility] = useState(false);\r\n    const [settingModalVisible, setSettingModalVisible] = useState(false);\r\n    const [userData, setUserData] = useState({});\r\n    const [jobSeekerData, setJobSeekerData] = useState({});\r\n    const [passwordObj, setPasswordObj] = useState({\r\n        old_password: null,\r\n        new_password: null,\r\n        confirm_password: null,\r\n        old_password_error: {\r\n            error: false,\r\n            message: null,\r\n        },\r\n        new_password_error: {\r\n            error: false,\r\n            message: null,\r\n        },\r\n        confirm_password_error: {\r\n            error: false,\r\n            message: null,\r\n        },\r\n    });\r\n\r\n    const {\r\n        old_password,\r\n        old_password_error,\r\n        new_password,\r\n        new_password_error,\r\n        confirm_password,\r\n        confirm_password_error,\r\n    } = passwordObj;\r\n\r\n    function switchToScreen(screen, params) {\r\n        props.navigation.navigate(screen, params);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (_.isEmpty(userData)) {\r\n            try {\r\n                AsyncStorage.getItem(\"userData\").then((user) => {\r\n                    setUserData(JSON.parse(user));\r\n                });\r\n                AsyncStorage.getItem(\"jobSeekerData\").then((user) => {\r\n                    setJobSeekerData(JSON.parse(user));\r\n                });\r\n            } catch (error) {\r\n                // Error retrieving data\r\n                console.log(error.message);\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            console.log(\"clean up\");\r\n        };\r\n    }, []);\r\n\r\n    function handlePasswordChange(text, name) {\r\n        const password = { ...passwordObj };\r\n        password[name] = text;\r\n        if (_.isEmpty(text)) {\r\n            password[`${name}_error`] = {\r\n                error: true,\r\n                message: name.replace(\"_\", \" \") + \" is required.\",\r\n            };\r\n        } else {\r\n            password[`${name}_error`] = {\r\n                error: false,\r\n                message: null,\r\n            };\r\n        }\r\n        setPasswordObj(password);\r\n    }\r\n\r\n    function confirmPasswordChange(text, name) {\r\n        const password = { ...passwordObj };\r\n        password[name] = text;\r\n        if (_.isEmpty(text)) {\r\n            password[`${name}_error`] = {\r\n                error: true,\r\n                message: name.replace(\"_\", \" \") + \" is required.\",\r\n            };\r\n        } else {\r\n            console.log(password.new_password, text);\r\n            if (password.new_password !== text) {\r\n                password[`${name}_error`] = {\r\n                    error: true,\r\n                    message: \"Password not matched.\",\r\n                };\r\n            } else {\r\n                password[`${name}_error`] = {\r\n                    error: false,\r\n                    message: null,\r\n                };\r\n            }\r\n        }\r\n        setPasswordObj(password);\r\n        console.log(password);\r\n    }\r\n\r\n    function changePassword() {\r\n        if (\r\n            old_password_error &&\r\n            new_password &&\r\n            !old_password_error.error &&\r\n            !new_password_error.error &&\r\n            !confirm_password_error.error\r\n        ) {\r\n            fetch(baseUrl + \"api/login/change-password\", {\r\n                method: \"POST\",\r\n                mode: \"cors\", // no-cors, *cors, same-origin\r\n                cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n                credentials: \"same-origin\", // include, *same-origin, omit\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                redirect: \"follow\", // manual, *follow, error\r\n                referrerPolicy: \"no-referrer\",\r\n                body: JSON.stringify({\r\n                    user_id: userData.id,\r\n                    old_password,\r\n                    new_password,\r\n                }),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((response) => {\r\n                    if (!response.success) throw new Error(response);\r\n                    else {\r\n                        alert(\"Password changed successfully.\");\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        } else {\r\n            alert(\"Check fields.\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            {/* {filterVisiblity ? <View style={styles.overlay}></View> : null} */}\r\n            <View style={styles.jobSeekerDashboard}>\r\n                <SearchFilterBar\r\n                    filterVisiblity={filterVisiblity}\r\n                    setFilterVisibility={setFilterVisibility}\r\n                />\r\n                <View style={styles.changePasswordContainer}>\r\n                    <TextInput\r\n                        name=\"old_password\"\r\n                        secureTextEntry={true}\r\n                        style={styles.textInput}\r\n                        placeholder=\"Enter current password\"\r\n                        onChangeText={(text) =>\r\n                            handlePasswordChange(text, \"old_password\")\r\n                        }\r\n                    />\r\n                    {old_password_error.error ? (\r\n                        <Text style={styles.errorText}>\r\n                            {old_password_error.message}\r\n                        </Text>\r\n                    ) : null}\r\n                    <TextInput\r\n                        name=\"new_password\"\r\n                        secureTextEntry={true}\r\n                        style={styles.textInput}\r\n                        placeholder=\"New password\"\r\n                        onChangeText={(text) =>\r\n                            handlePasswordChange(text, \"new_password\")\r\n                        }\r\n                    />\r\n                    {new_password_error.error ? (\r\n                        <Text style={styles.errorText}>\r\n                            {new_password_error.message}\r\n                        </Text>\r\n                    ) : null}\r\n                    <TextInput\r\n                        name=\"confirm_password\"\r\n                        secureTextEntry={true}\r\n                        style={styles.textInput}\r\n                        placeholder=\"Confirm password\"\r\n                        onChangeText={(text) =>\r\n                            confirmPasswordChange(text, \"confirm_password\")\r\n                        }\r\n                    />\r\n                    {confirm_password_error.error ? (\r\n                        <Text style={styles.errorText}>\r\n                            {confirm_password_error.message}\r\n                        </Text>\r\n                    ) : null}\r\n                    <TouchableOpacity\r\n                        style={styles.contactBtn}\r\n                        onPress={() => {\r\n                            changePassword();\r\n                        }}\r\n                    >\r\n                        <Text style={styles.contactBtnText}>Change Password</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n            <View style={styles.bottomNavigation}>\r\n                <BottomTabNavigator\r\n                    userData={userData}\r\n                    setSettingModalVisible={setSettingModalVisible}\r\n                    switchToScreen={switchToScreen}\r\n                />\r\n            </View>\r\n            <FilterOverlay\r\n                filterVisiblity={filterVisiblity}\r\n                setFilterVisibility={setFilterVisibility}\r\n            />\r\n            <SettingsOverlay\r\n                switchToScreen={switchToScreen}\r\n                settingModalVisible={settingModalVisible}\r\n                setSettingModalVisible={setSettingModalVisible}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    overlay: {\r\n        flex: 1,\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n        backgroundColor: \"#dddddd\",\r\n        height: 300,\r\n        width,\r\n        elevation: 6,\r\n    },\r\n    container: {\r\n        flexDirection: \"column\",\r\n        flex: 1,\r\n        width: null,\r\n        height: null,\r\n    },\r\n    jobSeekerDashboard: {\r\n        flex: 9.2,\r\n    },\r\n    bottomNavigation: {\r\n        flex: 0.8,\r\n        backgroundColor: \"#dddddd\",\r\n        shadowColor: \"#dddddd\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 4.65,\r\n        elevation: 8,\r\n    },\r\n    changePasswordContainer: {\r\n        marginHorizontal: 20,\r\n    },\r\n    textInput: {\r\n        marginVertical: 10,\r\n        backgroundColor: \"#ffffff\",\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 10,\r\n        shadowColor: \"#dddddd\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 4.65,\r\n    },\r\n    errorText: {\r\n        textTransform: \"capitalize\",\r\n        color: \"red\",\r\n    },\r\n    contactBtn: {\r\n        width: \"40%\",\r\n        height: 36,\r\n        backgroundColor: \"#fb5b5a\",\r\n        borderRadius: 25,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        alignSelf: \"center\",\r\n        borderColor: \"#dddddd\",\r\n        borderWidth: 1,\r\n        shadowColor: \"#9E9E9E\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.8,\r\n        shadowRadius: 4.65,\r\n    },\r\n    contactBtnText: {\r\n        color: \"white\",\r\n    },\r\n    loginText: {\r\n        color: \"black\",\r\n        fontSize: 30,\r\n        marginTop: 20,\r\n        marginLeft: 100,\r\n    },\r\n    nextBtnText: {\r\n        color: \"black\",\r\n        fontSize: 20,\r\n    },\r\n    loginBtn: {\r\n        width: \"20%\",\r\n        backgroundColor: \"#fb5b5a\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 550,\r\n        marginBottom: 100,\r\n        marginLeft: 300,\r\n    },\r\n});\r\n\r\nexport default ChangePassword;\r\n"]},"metadata":{},"sourceType":"module"}