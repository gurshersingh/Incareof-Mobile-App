{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\frontend\\\\src\\\\components\\\\job_seeker\\\\SettingsOverlay.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport _ from \"lodash\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nvar SettingsOverlay = function SettingsOverlay(_ref) {\n  var switchToScreen = _ref.switchToScreen,\n      settingModalVisible = _ref.settingModalVisible,\n      setSettingModalVisible = _ref.setSettingModalVisible;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      userData = _useState2[0],\n      setUserData = _useState2[1];\n\n  function backPressed() {\n    Alert.alert(\"Exit App\", \"Do you want to exit?\", [{\n      text: \"No\",\n      onPress: function onPress() {\n        return console.log(\"Cancel Pressed\");\n      },\n      style: \"cancel\"\n    }, {\n      text: \"Yes\",\n      onPress: function onPress() {\n        try {\n          AsyncStorage.removeItem(\"userData\");\n          BackHandler.exitApp();\n        } catch (e) {}\n      }\n    }], {\n      cancelable: false\n    });\n    return true;\n  }\n\n  useEffect(function () {\n    if (_.isEmpty(userData)) {\n      try {\n        AsyncStorage.getItem(\"userData\").then(function (user) {\n          setUserData(JSON.parse(user));\n        });\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n\n    return function () {\n      console.log(\"Cleanup in setting overlay.\");\n    };\n  }, []);\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: settingModalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      setSettingModalVisible(!settingModalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      setSettingModalVisible(false);\n      switchToScreen(\"JobSeekerProfile\", userData);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, React.createElement(AntDesign, {\n    name: \"user\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  })), React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      setSettingModalVisible(false);\n      switchToScreen(\"ChangePassword\", userData);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, React.createElement(AntDesign, {\n    name: \"setting\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }))), React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      console.log(\"Question clicked\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, React.createElement(AntDesign, {\n    name: \"question\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  })), React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      console.log(\"Books clicked\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, React.createElement(AntDesign, {\n    name: \"book\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }))), React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      backPressed();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, React.createElement(AntDesign, {\n    name: \"logout\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flexDirection: \"column\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#388e3c\",\n    opacity: 0.8\n  },\n  modalView: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    marginVertical: 15,\n    elevation: 5\n  },\n  contBtn: {\n    backgroundColor: \"#ffffff\",\n    borderRadius: 35,\n    marginHorizontal: 20,\n    padding: 15,\n    opacity: 1,\n    elevation: 10\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  contactIcons: {\n    fontSize: 30\n  }\n});\nexport default SettingsOverlay;","map":{"version":3,"sources":["D:/frontend/src/components/job_seeker/SettingsOverlay.js"],"names":["React","useState","useEffect","_","AntDesign","AsyncStorage","SettingsOverlay","switchToScreen","settingModalVisible","setSettingModalVisible","userData","setUserData","backPressed","Alert","alert","text","onPress","console","log","style","removeItem","BackHandler","exitApp","e","cancelable","isEmpty","getItem","then","user","JSON","parse","error","message","styles","centeredView","modalView","contBtn","event","stopPropagation","contactIcons","StyleSheet","create","flexDirection","flex","justifyContent","alignItems","backgroundColor","opacity","marginVertical","elevation","borderRadius","marginHorizontal","padding","textStyle","color","fontWeight","textAlign","modalText","marginBottom","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    StyleSheet,\r\n    Modal,\r\n    TouchableHighlight,\r\n    View,\r\n    BackHandler,\r\n    Alert,\r\n} from \"react-native\";\r\nimport _ from \"lodash\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\n\r\nconst SettingsOverlay = ({\r\n    switchToScreen,\r\n    settingModalVisible,\r\n    setSettingModalVisible,\r\n}) => {\r\n    const [userData, setUserData] = useState({});\r\n\r\n    function backPressed() {\r\n        Alert.alert(\r\n            \"Exit App\",\r\n            \"Do you want to exit?\",\r\n            [\r\n                {\r\n                    text: \"No\",\r\n                    onPress: () => console.log(\"Cancel Pressed\"),\r\n                    style: \"cancel\",\r\n                },\r\n                {\r\n                    text: \"Yes\",\r\n                    onPress: () => {\r\n                        try {\r\n                            AsyncStorage.removeItem(\"userData\");\r\n                            BackHandler.exitApp();\r\n                        } catch (e) {\r\n                            // remove error\r\n                        }\r\n                    },\r\n                },\r\n            ],\r\n            { cancelable: false }\r\n        );\r\n        return true;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (_.isEmpty(userData)) {\r\n            try {\r\n                AsyncStorage.getItem(\"userData\").then((user) => {\r\n                    setUserData(JSON.parse(user));\r\n                });\r\n            } catch (error) {\r\n                // Error retrieving data\r\n                console.log(error.message);\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            console.log(\"Cleanup in setting overlay.\");\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Modal\r\n            animationType=\"slide\"\r\n            transparent={true}\r\n            visible={settingModalVisible}\r\n            onRequestClose={() => {\r\n                Alert.alert(\"Modal has been closed.\");\r\n            }}\r\n        >\r\n            <View\r\n                style={styles.centeredView}\r\n                onStartShouldSetResponder={() => {\r\n                    setSettingModalVisible(!settingModalVisible);\r\n                }}\r\n            >\r\n                <View style={styles.modalView}>\r\n                    <TouchableHighlight\r\n                        style={styles.contBtn}\r\n                        onPress={(event) => {\r\n                            event.stopPropagation();\r\n                            setSettingModalVisible(false);\r\n                            switchToScreen(\"JobSeekerProfile\", userData);\r\n                        }}\r\n                    >\r\n                        <AntDesign name=\"user\" style={styles.contactIcons} />\r\n                    </TouchableHighlight>\r\n                    <TouchableHighlight\r\n                        style={styles.contBtn}\r\n                        onPress={(event) => {\r\n                            event.stopPropagation();\r\n                            setSettingModalVisible(false);\r\n                            switchToScreen(\"ChangePassword\", userData);\r\n                        }}\r\n                    >\r\n                        <AntDesign name=\"setting\" style={styles.contactIcons} />\r\n                    </TouchableHighlight>\r\n                </View>\r\n                <View style={styles.modalView}>\r\n                    <TouchableHighlight\r\n                        style={styles.contBtn}\r\n                        onPress={(event) => {\r\n                            event.stopPropagation();\r\n                            console.log(\"Question clicked\");\r\n                        }}\r\n                    >\r\n                        <AntDesign\r\n                            name=\"question\"\r\n                            style={styles.contactIcons}\r\n                        />\r\n                    </TouchableHighlight>\r\n                    <TouchableHighlight\r\n                        style={styles.contBtn}\r\n                        onPress={(event) => {\r\n                            event.stopPropagation();\r\n                            console.log(\"Books clicked\");\r\n                        }}\r\n                    >\r\n                        <AntDesign name=\"book\" style={styles.contactIcons} />\r\n                    </TouchableHighlight>\r\n                </View>\r\n                <View style={styles.modalView}>\r\n                    <TouchableHighlight\r\n                        style={styles.contBtn}\r\n                        onPress={(event) => {\r\n                            event.stopPropagation();\r\n                            backPressed();\r\n                        }}\r\n                    >\r\n                        <AntDesign name=\"logout\" style={styles.contactIcons} />\r\n                    </TouchableHighlight>\r\n                </View>\r\n            </View>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    centeredView: {\r\n        flexDirection: \"column\",\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#388e3c\",\r\n        opacity: 0.8,\r\n    },\r\n    modalView: {\r\n        alignItems: \"center\",\r\n        flexDirection: \"row\",\r\n        marginVertical: 15,\r\n        elevation: 5,\r\n    },\r\n    contBtn: {\r\n        backgroundColor: \"#ffffff\",\r\n        borderRadius: 35,\r\n        marginHorizontal: 20,\r\n        padding: 15,\r\n        opacity: 1,\r\n        elevation: 10,\r\n    },\r\n    textStyle: {\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\",\r\n    },\r\n    modalText: {\r\n        marginBottom: 15,\r\n        textAlign: \"center\",\r\n    },\r\n    contactIcons: {\r\n        fontSize: 30,\r\n    },\r\n});\r\n\r\nexport default SettingsOverlay;\r\n"]},"metadata":{},"sourceType":"module"}