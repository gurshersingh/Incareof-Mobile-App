{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\frontend\\\\src\\\\components\\\\employer\\\\StarredCandidate.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport EmployerSearchFilter from \"./EmployerSearchFilter\";\nimport EmployerBottomNavigator from \"./EmployerBottomNavigator\";\nimport EmployerFilterOverlay from \"./EmployerFilterOverlay\";\nimport UserContactOverlay from \"./UserContactOverlay\";\nimport EmployerSettingsOverlay from \"./EmployerSettingsOverlay\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nvar StarredCandidate = function StarredCandidate(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filterVisiblity = _useState4[0],\n      setFilterVisibility = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      settingModalVisible = _useState6[0],\n      setSettingModalVisible = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      employerLoginData = _useState8[0],\n      setEmployerLoginData = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      jobsData = _useState10[0],\n      setJobsData = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      jobs = _useState12[0],\n      setJobs = _useState12[1];\n\n  function switchToScreen(screen, params) {\n    props.navigation.navigate(screen, params);\n  }\n\n  useEffect(function () {\n    try {\n      AsyncStorage.getItem(\"employerLoginData\").then(function (employer) {\n        setEmployerLoginData(JSON.parse(employer));\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, []);\n\n  function handleSelectedService(serviceMap) {\n    var selectedService = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(serviceMap.keys()), _step; !(_step = _iterator()).done;) {\n      var key = _step.value;\n      if (serviceMap.get(key)) selectedService.push(key);\n    }\n\n    if (selectedService.length > 0) {\n      var _jobs = jobsData.filter(function (job) {\n        return selectedService.includes(job.job_service_id);\n      });\n\n      setJobs(_jobs);\n    } else {\n      setJobs(jobsData);\n    }\n  }\n\n  function handleFilterByText(text) {\n    if (text.length >= 3) {\n      var _jobs2 = jobsData.filter(function (job) {\n        return job.job_title.includes(text);\n      });\n\n      setJobs(_jobs2);\n    } else {\n      setJobs(jobsData);\n    }\n  }\n\n  function handleFilterByWager(wager) {\n    var jobs = jobsData.filter(function (job) {\n      return parseInt(job.wager_offered) >= wager;\n    });\n    setJobs(jobs);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.innerContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(EmployerSearchFilter, {\n    handleFilterByText: handleFilterByText,\n    filterVisiblity: filterVisiblity,\n    setFilterVisibility: setFilterVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Starred Candidate\")))), React.createElement(View, {\n    style: styles.bottomNavigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(EmployerBottomNavigator, {\n    employerLoginData: employerLoginData,\n    setSettingModalVisible: setSettingModalVisible,\n    switchToScreen: switchToScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })), React.createElement(EmployerFilterOverlay, {\n    jobs: jobs,\n    handleFilterByText: handleFilterByText,\n    handleFilterByWager: handleFilterByWager,\n    handleSelectedService: handleSelectedService,\n    filterVisiblity: filterVisiblity,\n    setFilterVisibility: setFilterVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), React.createElement(UserContactOverlay, {\n    modalVisible: modalVisible,\n    setModalVisible: setModalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), React.createElement(EmployerSettingsOverlay, {\n    switchToScreen: switchToScreen,\n    settingModalVisible: settingModalVisible,\n    setSettingModalVisible: setSettingModalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    flex: 1,\n    width: null,\n    height: null\n  },\n  innerContainer: {\n    flex: 9.2\n  },\n  bottomNavigation: {\n    flex: 0.8,\n    backgroundColor: \"#dddddd\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8\n  },\n  loginText: {\n    color: \"black\",\n    fontSize: 30,\n    marginTop: 20,\n    marginLeft: 100\n  },\n  nextBtnText: {\n    color: \"black\",\n    fontSize: 20\n  },\n  loginBtn: {\n    width: \"20%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 550,\n    marginBottom: 100,\n    marginLeft: 300\n  }\n});\nexport default StarredCandidate;","map":{"version":3,"sources":["D:/frontend/src/components/employer/StarredCandidate.js"],"names":["React","useState","useEffect","EmployerSearchFilter","EmployerBottomNavigator","EmployerFilterOverlay","UserContactOverlay","EmployerSettingsOverlay","AsyncStorage","StarredCandidate","props","modalVisible","setModalVisible","filterVisiblity","setFilterVisibility","settingModalVisible","setSettingModalVisible","employerLoginData","setEmployerLoginData","jobsData","setJobsData","jobs","setJobs","switchToScreen","screen","params","navigation","navigate","getItem","then","employer","JSON","parse","error","console","log","message","handleSelectedService","serviceMap","selectedService","keys","key","get","push","length","filter","job","includes","job_service_id","handleFilterByText","text","job_title","handleFilterByWager","wager","parseInt","wager_offered","styles","container","innerContainer","flex","bottomNavigation","StyleSheet","create","flexDirection","width","height","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","loginText","color","fontSize","marginTop","marginLeft","nextBtnText","loginBtn","borderRadius","alignItems","justifyContent","marginBottom"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {StyleSheet, Text, View, SafeAreaView} from \"react-native\";\r\nimport EmployerSearchFilter from \"./EmployerSearchFilter\";\r\nimport EmployerBottomNavigator from \"./EmployerBottomNavigator\";\r\nimport EmployerFilterOverlay from \"./EmployerFilterOverlay\";\r\nimport UserContactOverlay from \"./UserContactOverlay\";\r\nimport EmployerSettingsOverlay from \"./EmployerSettingsOverlay\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\n\r\nconst StarredCandidate = (props) => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [filterVisiblity, setFilterVisibility] = useState(false);\r\n  const [settingModalVisible, setSettingModalVisible] = useState(false);\r\n  const [employerLoginData, setEmployerLoginData] = useState({});\r\n  const [jobsData, setJobsData] = useState([]);\r\n  const [jobs, setJobs] = useState([]);\r\n\r\n  function switchToScreen(screen, params) {\r\n    props.navigation.navigate(screen, params);\r\n  }\r\n\r\n  useEffect(() => {\r\n    try {\r\n      AsyncStorage.getItem(\"employerLoginData\").then((employer) => {\r\n        setEmployerLoginData(JSON.parse(employer));\r\n      });\r\n    } catch (error) {\r\n      // Error retrieving data\r\n      console.log(error.message);\r\n    }\r\n  }, []);\r\n\r\n  function handleSelectedService(serviceMap) {\r\n    const selectedService = [];\r\n    for (var key of serviceMap.keys()) {\r\n      if (serviceMap.get(key)) selectedService.push(key);\r\n    }\r\n    if (selectedService.length > 0) {\r\n      const jobs = jobsData.filter((job) =>\r\n        selectedService.includes(job.job_service_id)\r\n      );\r\n      setJobs(jobs);\r\n    } else {\r\n      setJobs(jobsData);\r\n    }\r\n  }\r\n\r\n  function handleFilterByText(text) {\r\n    if (text.length >= 3) {\r\n      const jobs = jobsData.filter((job) => job.job_title.includes(text));\r\n      setJobs(jobs);\r\n    } else {\r\n      setJobs(jobsData);\r\n    }\r\n  }\r\n\r\n  function handleFilterByWager(wager) {\r\n    const jobs = jobsData.filter((job) => parseInt(job.wager_offered) >= wager);\r\n    setJobs(jobs);\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.innerContainer}>\r\n        <EmployerSearchFilter\r\n          handleFilterByText={handleFilterByText}\r\n          filterVisiblity={filterVisiblity}\r\n          setFilterVisibility={setFilterVisibility}\r\n        />\r\n        <SafeAreaView style={{flex: 1}}>\r\n          <View>\r\n            <Text>Starred Candidate</Text>\r\n          </View>\r\n        </SafeAreaView>\r\n      </View>\r\n      <View style={styles.bottomNavigation}>\r\n        <EmployerBottomNavigator\r\n          employerLoginData={employerLoginData}\r\n          setSettingModalVisible={setSettingModalVisible}\r\n          switchToScreen={switchToScreen}\r\n        />\r\n      </View>\r\n      <EmployerFilterOverlay\r\n        jobs={jobs}\r\n        handleFilterByText={handleFilterByText}\r\n        handleFilterByWager={handleFilterByWager}\r\n        handleSelectedService={handleSelectedService}\r\n        filterVisiblity={filterVisiblity}\r\n        setFilterVisibility={setFilterVisibility}\r\n      />\r\n      <UserContactOverlay\r\n        modalVisible={modalVisible}\r\n        setModalVisible={setModalVisible}\r\n      />\r\n      <EmployerSettingsOverlay\r\n        switchToScreen={switchToScreen}\r\n        settingModalVisible={settingModalVisible}\r\n        setSettingModalVisible={setSettingModalVisible}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"column\",\r\n    flex: 1,\r\n    width: null,\r\n    height: null,\r\n  },\r\n  innerContainer: {\r\n    flex: 9.2,\r\n  },\r\n  bottomNavigation: {\r\n    flex: 0.8,\r\n    backgroundColor: \"#dddddd\",\r\n    shadowColor: \"#dddddd\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 4,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4.65,\r\n    elevation: 8,\r\n  },\r\n  loginText: {\r\n    color: \"black\",\r\n    fontSize: 30,\r\n    marginTop: 20,\r\n    marginLeft: 100,\r\n  },\r\n  nextBtnText: {\r\n    color: \"black\",\r\n    fontSize: 20,\r\n  },\r\n  loginBtn: {\r\n    width: \"20%\",\r\n    backgroundColor: \"#fb5b5a\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 550,\r\n    marginBottom: 100,\r\n    marginLeft: 300,\r\n  },\r\n});\r\n\r\nexport default StarredCandidate;\r\n"]},"metadata":{},"sourceType":"module"}