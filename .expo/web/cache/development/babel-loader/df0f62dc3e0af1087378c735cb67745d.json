{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"D:\\\\frontend\\\\src\\\\components\\\\job_seeker\\\\ImageUploadOverlay.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport * as Permissions from 'expo-permissions';\n\nvar ImageUploadOverlay = function ImageUploadOverlay(_ref) {\n  var modalVisible = _ref.modalVisible,\n      setModalVisible = _ref.setModalVisible,\n      setImageData = _ref.setImageData;\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [3, 4],\n              quality: 1\n            }));\n\n          case 3:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              setImageData(result.uri);\n            } else {\n              console.log(result);\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      pickImage();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, React.createElement(Ionicons, {\n    name: \"md-images\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  })), React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"Upload from Gallery\")), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.contBtn,\n    onPress: function onPress(event) {\n      event.stopPropagation();\n      console.log(\"Email clicked\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, React.createElement(Ionicons, {\n    name: \"md-camera\",\n    style: styles.contactIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  })), React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, \"Open Camera\")))));\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#388e3c\",\n    opacity: 0.8\n  },\n  modalView: {\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    elevation: 5\n  },\n  contBtn: {\n    alignSelf: \"center\",\n    backgroundColor: \"#f8bbd0\",\n    borderRadius: 50,\n    marginVertical: 20,\n    padding: 15,\n    opacity: 1,\n    elevation: 10\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  contactIcons: {\n    fontSize: 40,\n    color: \"#ffffff\"\n  }\n});\nexport default ImageUploadOverlay;","map":{"version":3,"sources":["D:/frontend/src/components/job_seeker/ImageUploadOverlay.js"],"names":["React","useState","Ionicons","ImagePicker","Constants","Permissions","ImageUploadOverlay","modalVisible","setModalVisible","setImageData","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","result","cancelled","uri","console","log","styles","centeredView","modalView","contBtn","event","stopPropagation","contactIcons","textStyle","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","opacity","flexDirection","elevation","alignSelf","borderRadius","marginVertical","padding","color","fontWeight","textAlign","modalText","marginBottom","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n    StyleSheet,\r\n    Modal,\r\n    TouchableHighlight,\r\n    View,\r\n    Text,\r\n} from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport Constants from 'expo-constants';\r\nimport * as Permissions from 'expo-permissions';\r\n\r\nconst ImageUploadOverlay = ({ modalVisible, setModalVisible, setImageData }) => {\r\n    const pickImage = async () => {\r\n        try {\r\n            const result = await ImagePicker.launchImageLibraryAsync({\r\n                mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n                allowsEditing: true,\r\n                aspect: [3, 4],\r\n                quality: 1,\r\n            });\r\n\r\n            if (!result.cancelled) {\r\n                setImageData(result.uri);\r\n            } else {\r\n                console.log(result)\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            animationType=\"slide\"\r\n            transparent={true}\r\n            visible={modalVisible}\r\n        >\r\n            <View\r\n                style={styles.centeredView}\r\n                onStartShouldSetResponder={() => {\r\n                    setModalVisible(!modalVisible);\r\n                }}\r\n            >\r\n                <View style={styles.modalView}>\r\n                    <View>\r\n                        <TouchableHighlight\r\n                            style={styles.contBtn}\r\n                            onPress={(event) => {\r\n                                event.stopPropagation();\r\n                                pickImage();\r\n                            }}\r\n                        >\r\n                            <Ionicons\r\n                                name=\"md-images\"\r\n                                style={styles.contactIcons}\r\n                            />\r\n                        </TouchableHighlight>\r\n                        <Text style={styles.textStyle}>Upload from Gallery</Text>\r\n                    </View>\r\n                    <View>\r\n                        <TouchableHighlight\r\n                            style={styles.contBtn}\r\n                            onPress={(event) => {\r\n                                event.stopPropagation();\r\n                                console.log(\"Email clicked\");\r\n                            }}\r\n                        >\r\n                            <Ionicons\r\n                                name=\"md-camera\"\r\n                                style={styles.contactIcons}\r\n                            />\r\n                        </TouchableHighlight>\r\n                        <Text style={styles.textStyle}>Open Camera</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    centeredView: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#388e3c\",\r\n        opacity: 0.8,\r\n    },\r\n    modalView: {\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        elevation: 5,\r\n    },\r\n    contBtn: {\r\n        alignSelf: \"center\",\r\n        backgroundColor: \"#f8bbd0\",\r\n        borderRadius: 50,\r\n        marginVertical: 20,\r\n        padding: 15,\r\n        opacity: 1,\r\n        elevation: 10,\r\n    },\r\n    textStyle: {\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\",\r\n    },\r\n    modalText: {\r\n        marginBottom: 15,\r\n        textAlign: \"center\",\r\n    },\r\n    contactIcons: {\r\n        fontSize: 40,\r\n        color: \"#ffffff\",\r\n    },\r\n})\r\n\r\nexport default ImageUploadOverlay;\r\n"]},"metadata":{},"sourceType":"module"}