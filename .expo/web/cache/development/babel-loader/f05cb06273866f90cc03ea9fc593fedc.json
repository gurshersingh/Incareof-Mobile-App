{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rahulsharma/Desktop/Project/frontend/src/containers/ForgatPassword.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport _ from \"lodash\";\nimport { baseUrl } from \"../utils/constants\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nvar ForgatPassword = function (_React$Component) {\n  _inherits(ForgatPassword, _React$Component);\n\n  var _super = _createSuper(ForgatPassword);\n\n  function ForgatPassword(props) {\n    var _this;\n\n    _classCallCheck(this, ForgatPassword);\n\n    _this = _super.call(this, props);\n\n    _this.handleEmailChange = function (event) {\n      var regex_email = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (!_.isEmpty(event)) {\n        if (!regex_email.test(event)) {\n          _this.setState({\n            email_error: \"invalid email\"\n          });\n        } else {\n          _this.setState({\n            email: event\n          });\n\n          _this.setState({\n            email_error: null\n          });\n        }\n      } else {\n        _this.setState({\n          email_error: \"email is required\"\n        });\n      }\n    };\n\n    _this.handleForgot = function () {\n      if (_this.state.email_error !== null) {\n        alert(\"Fill the Field.\");\n      } else {\n        var that = _assertThisInitialized(_this);\n\n        fetch(baseUrl + 'api/login/forget-password', {\n          method: 'POST',\n          mode: 'cors',\n          cache: 'no-cache',\n          credentials: 'same-origin',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          redirect: 'follow',\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(_this.state)\n        }).then(function (response) {\n          return response.json();\n        }).then(function (response) {\n          console.log(\"respoce\", response);\n          if (!response.success) throw new Error(response);else {\n            console.log(\"Successsss\", response);\n            that.props.navigation.navigate('NewPassword', {\n              user_id: response.result.id\n            });\n          }\n        }).catch(function (err) {\n          console.log(\"Errrororro\", err);\n\n          _this.setState({\n            success: false,\n            err: \"Registration Failed. Please try again later\"\n          });\n        });\n      }\n    };\n\n    _this.state = {\n      email: '',\n      email_error: ''\n    };\n    return _this;\n  }\n\n  _createClass(ForgatPassword, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(LinearGradient, {\n        colors: [\"#BA9ED1\", \"#765A8D\"],\n        style: styles.container,\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 0,\n          y: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, \"Forgot Password\"), React.createElement(View, {\n        style: styles.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputStyle,\n        name: \"email\",\n        placeholder: \"Enter Registred Mail ID\",\n        placeholderTextColor: \"black\",\n        onChangeText: this.handleEmailChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }), this.state.email_error ? React.createElement(Text, {\n        style: styles.errorText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, this.state.email_error) : null), React.createElement(View, {\n        style: styles.rowContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.updateBtn,\n        onPress: this.handleForgot,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return ForgatPassword;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: 1\n  },\n  inputStyle: {\n    flex: 2,\n    height: 50,\n    overflow: \"hidden\",\n    borderRadius: 5,\n    backgroundColor: '#fff',\n    paddingLeft: 10,\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 4\n  },\n  errorText: {\n    color: 'red'\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginHorizontal: 20,\n    marginVertical: 10\n  },\n  loginText: {\n    color: 'black',\n    fontSize: 30,\n    marginTop: 20\n  },\n  inputContainer: {\n    flex: 2,\n    marginHorizontal: 30,\n    marginVertical: 30\n  },\n  updateBtn: {\n    height: 50,\n    width: 180,\n    borderRadius: 25,\n    backgroundColor: \"#fb5b5a\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default ForgatPassword;","map":{"version":3,"sources":["/Users/rahulsharma/Desktop/Project/frontend/src/containers/ForgatPassword.js"],"names":["React","_","baseUrl","LinearGradient","ForgatPassword","props","handleEmailChange","event","regex_email","isEmpty","test","setState","email_error","email","handleForgot","state","alert","that","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","then","response","json","console","log","success","Error","navigation","navigate","user_id","result","id","catch","err","styles","container","x","y","loginText","inputContainer","inputStyle","errorText","rowContainer","updateBtn","Component","StyleSheet","create","alignItems","justifyContent","flex","height","overflow","borderRadius","backgroundColor","paddingLeft","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","color","flexDirection","marginHorizontal","marginVertical","fontSize","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  //Image,\n} from 'react-native';\nimport _ from \"lodash\";\nimport { baseUrl } from '../utils/constants';\nimport { LinearGradient } from \"expo-linear-gradient\";\nclass ForgatPassword extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: '',\n      email_error: ''\n    }\n  }\n  handleEmailChange = (event) => {\n    let regex_email = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (!_.isEmpty(event)) {\n      if (!regex_email.test(event)) {\n        this.setState({ email_error: \"invalid email\" })\n      } else {\n        this.setState({\n          email: event\n        })\n        this.setState({ email_error: null })\n      }\n    }\n    else {\n      this.setState({ email_error: \"email is required\" })\n    }\n  }\n  handleForgot = () => {\n    if (this.state.email_error !== null\n    ) {\n      alert(\"Fill the Field.\");\n    }\n    else {\n      const that = this\n      fetch(baseUrl + 'api/login/forget-password', {\n        method: 'POST',\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json'\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: 'follow', // manual, *follow, error\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(this.state)\n      })\n        .then(response => response.json())\n        .then((response) => {\n          console.log(\"respoce\", response)\n          if (!response.success)\n            throw new Error(response)\n          else {\n            console.log(\"Successsss\", response)\n            that.props.navigation.navigate('NewPassword', { user_id: response.result.id })\n          }\n        })\n        .catch((err) => {\n          console.log(\"Errrororro\", err)\n          this.setState({ success: false, err: \"Registration Failed. Please try again later\" })\n        })\n    }\n  }\n  render() {\n    return (\n      <LinearGradient\n        colors={[\"#BA9ED1\", \"#765A8D\"]}\n        style={styles.container}\n        //  Linear Gradient\n        start={{ x: 0, y: 0 }}\n        end={{ x: 0, y: 1 }}\n      >\n        <ScrollView>\n          <Text style={styles.loginText}>Forgot Password</Text>\n          <View style={styles.inputContainer}>\n            <TextInput\n              style={styles.inputStyle}\n              name=\"email\"\n              placeholder=\"Enter Registred Mail ID\"\n              placeholderTextColor=\"black\"\n              onChangeText={this.handleEmailChange}\n            />\n            {this.state.email_error ? (\n              <Text style={styles.errorText}>{this.state.email_error}</Text>\n            ) : null}\n          </View>\n          <View style={styles.rowContainer}>\n            <TouchableOpacity style={styles.updateBtn} onPress={this.handleForgot}>\n              <Text>Submit</Text>\n            </TouchableOpacity>\n          </View>\n        </ScrollView>\n      </LinearGradient>\n    )\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: 1,\n  },\n  inputStyle: {\n    flex: 2,\n    height: 50,\n    overflow: \"hidden\",\n    borderRadius: 5,\n    backgroundColor: '#fff',\n    paddingLeft: 10,\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4,\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 4,\n  },\n  errorText: {\n    color: 'red'\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginHorizontal: 20,\n    marginVertical: 10,\n  },\n  loginText: {\n    color: 'black',\n    fontSize: 30,\n    marginTop: 20,\n  },\n  inputContainer: {\n    flex: 2,\n    marginHorizontal: 30,\n    marginVertical: 30\n\n  },\n  updateBtn: {\n    height: 50,\n    width: 180,\n    borderRadius: 25,\n    backgroundColor: \"#fb5b5a\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4,\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\nexport default ForgatPassword;\n"]},"metadata":{},"sourceType":"module"}