{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsharma/Desktop/Project/frontend/src/components/employer/EmployerBottomNavigator.js\";\nimport React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AntDesign, Ionicons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport _ from \"lodash\";\nimport { baseUrl } from \"../../utils/constants\";\n\nvar EmployerBottomNavigator = function EmployerBottomNavigator(_ref) {\n  var employerLoginData = _ref.employerLoginData,\n      switchToScreen = _ref.switchToScreen,\n      setSettingModalVisible = _ref.setSettingModalVisible;\n  useEffect(function () {\n    if (_.isEmpty(employerLoginData)) {\n      try {\n        AsyncStorage.getItem(\"employerLoginData\").then(function (user) {\n          employerLoginData = JSON.parse(user);\n        });\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n  }, []);\n\n  function checkEmployerCredit() {\n    if (employerLoginData.id) {\n      fetch(baseUrl + (\"api/employer-membership-plans/verify/credits/\" + employerLoginData.id), {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\"\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        console.log(response);\n\n        if (!response.success) {\n          if (!response.result.isActive) switchToScreen(\"MembershipPage\", {});\n        } else {\n          if (response.result.isActive) switchToScreen(\"JobPost\", {});\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }\n\n  return React.createElement(View, {\n    style: styles.bottomNavContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(AntDesign, {\n    name: \"home\",\n    style: styles.bottomNavIcons,\n    onPress: function onPress() {\n      return switchToScreen(\"EmployerScreen\", employerLoginData);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), React.createElement(AntDesign, {\n    name: \"user\",\n    style: styles.bottomNavIcons,\n    onPress: function onPress() {\n      return switchToScreen(\"EmployerProfile1\", employerLoginData);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), React.createElement(AntDesign, {\n    name: \"pluscircleo\",\n    style: styles.bottomNavIcons,\n    onPress: function onPress() {\n      return checkEmployerCredit();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), React.createElement(AntDesign, {\n    name: \"staro\",\n    style: styles.bottomNavIcons,\n    onPress: function onPress() {\n      return switchToScreen(\"StarredCandidate\", employerLoginData);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), React.createElement(Ionicons, {\n    name: \"md-more\",\n    style: styles.bottomNavIcons,\n    onPress: function onPress() {\n      return setSettingModalVisible(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  bottomNavContainer: {\n    flexDirection: \"row\",\n    height: \"100%\",\n    textAlign: \"center\"\n  },\n  bottomNavIcons: {\n    flex: 1,\n    fontSize: 30,\n    textAlign: \"center\",\n    alignSelf: \"center\",\n    color: \"#9E9E9E\"\n  }\n});\nexport default EmployerBottomNavigator;","map":{"version":3,"sources":["/Users/rahulsharma/Desktop/Project/frontend/src/components/employer/EmployerBottomNavigator.js"],"names":["React","useEffect","AntDesign","Ionicons","AsyncStorage","_","baseUrl","EmployerBottomNavigator","employerLoginData","switchToScreen","setSettingModalVisible","isEmpty","getItem","then","user","JSON","parse","error","console","log","message","checkEmployerCredit","id","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","response","json","success","result","isActive","catch","err","styles","bottomNavContainer","bottomNavIcons","StyleSheet","create","flexDirection","height","textAlign","flex","fontSize","alignSelf","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,oBAApC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,OAAT;;AAEA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,OAI1B;AAAA,MAHFC,iBAGE,QAHFA,iBAGE;AAAA,MAFFC,cAEE,QAFFA,cAEE;AAAA,MADFC,sBACE,QADFA,sBACE;AACFT,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAII,CAAC,CAACM,OAAF,CAAUH,iBAAV,CAAJ,EAAkC;AAC9B,UAAI;AACAJ,QAAAA,YAAY,CAACQ,OAAb,CAAqB,mBAArB,EAA0CC,IAA1C,CAA+C,UAACC,IAAD,EAAU;AACrDN,UAAAA,iBAAiB,GAAGO,IAAI,CAACC,KAAL,CAAWF,IAAX,CAApB;AACH,SAFD;AAGH,OAJD,CAIE,OAAOG,KAAP,EAAc;AAEZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;AACJ;AACJ,GAXQ,EAWN,EAXM,CAAT;;AAaA,WAASC,mBAAT,GAA+B;AAC3B,QAAIb,iBAAiB,CAACc,EAAtB,EAA0B;AACtBC,MAAAA,KAAK,CAACjB,OAAO,sDAAmDE,iBAAiB,CAACc,EAArE,CAAR,EAAmF;AACpFE,QAAAA,MAAM,EAAE,KAD4E;AAEpFC,QAAAA,IAAI,EAAE,MAF8E;AAGpFC,QAAAA,KAAK,EAAE,UAH6E;AAIpFC,QAAAA,WAAW,EAAE,aAJuE;AAKpFC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAL2E;AASpFC,QAAAA,QAAQ,EAAE,QAT0E;AAUpFC,QAAAA,cAAc,EAAE;AAVoE,OAAnF,CAAL,CAYKjB,IAZL,CAYU,UAACkB,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OAZV,EAaKnB,IAbL,CAaU,UAACkB,QAAD,EAAc;AAChBb,QAAAA,OAAO,CAACC,GAAR,CAAYY,QAAZ;;AACA,YAAI,CAACA,QAAQ,CAACE,OAAd,EAAuB;AACnB,cAAI,CAACF,QAAQ,CAACG,MAAT,CAAgBC,QAArB,EAA+B1B,cAAc,CAAC,gBAAD,EAAmB,EAAnB,CAAd;AAClC,SAFD,MAEO;AACH,cAAIsB,QAAQ,CAACG,MAAT,CAAgBC,QAApB,EAA8B1B,cAAc,CAAC,SAAD,EAAY,EAAZ,CAAd;AACjC;AACJ,OApBL,EAqBK2B,KArBL,CAqBW,UAACC,GAAD,EAAS;AACZnB,QAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACH,OAvBL;AAwBH;AACJ;;AAED,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAED,MAAM,CAACE,cAFlB;AAGI,IAAA,OAAO,EAAE;AAAA,aAAM/B,cAAc,CAAC,gBAAD,EAAmBD,iBAAnB,CAApB;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAE8B,MAAM,CAACE,cAFlB;AAGI,IAAA,OAAO,EAAE;AAAA,aAAM/B,cAAc,CAAC,kBAAD,EAAqBD,iBAArB,CAApB;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAWI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,aADT;AAEI,IAAA,KAAK,EAAE8B,MAAM,CAACE,cAFlB;AAGI,IAAA,OAAO,EAAE;AAAA,aAAMnB,mBAAmB,EAAzB;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAgBI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAEiB,MAAM,CAACE,cAFlB;AAGI,IAAA,OAAO,EAAE;AAAA,aAAM/B,cAAc,CAAC,kBAAD,EAAqBD,iBAArB,CAApB;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,EAqBI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,KAAK,EAAE8B,MAAM,CAACE,cAFlB;AAGI,IAAA,OAAO,EAAE;AAAA,aAAM9B,sBAAsB,CAAC,IAAD,CAA5B;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,CADJ;AA6BH,CA5ED;;AA8EA,IAAM4B,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,kBAAkB,EAAE;AAChBI,IAAAA,aAAa,EAAE,KADC;AAEhBC,IAAAA,MAAM,EAAE,MAFQ;AAGhBC,IAAAA,SAAS,EAAE;AAHK,GADS;AAM7BL,EAAAA,cAAc,EAAE;AACZM,IAAAA,IAAI,EAAE,CADM;AAEZC,IAAAA,QAAQ,EAAE,EAFE;AAGZF,IAAAA,SAAS,EAAE,QAHC;AAIZG,IAAAA,SAAS,EAAE,QAJC;AAKZC,IAAAA,KAAK,EAAE;AALK;AANa,CAAlB,CAAf;AAeA,eAAe1C,uBAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { AntDesign, Ionicons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport _ from \"lodash\";\nimport { baseUrl } from \"../../utils/constants\";\n\nconst EmployerBottomNavigator = ({\n    employerLoginData,\n    switchToScreen,\n    setSettingModalVisible,\n}) => {\n    useEffect(() => {\n        if (_.isEmpty(employerLoginData)) {\n            try {\n                AsyncStorage.getItem(\"employerLoginData\").then((user) => {\n                    employerLoginData = JSON.parse(user);\n                });\n            } catch (error) {\n                // Error retrieving data\n                console.log(error.message);\n            }\n        }\n    }, []);\n\n    function checkEmployerCredit() {\n        if (employerLoginData.id) {\n            fetch(baseUrl + `api/employer-membership-plans/verify/credits/${employerLoginData.id}`, {\n                method: \"GET\",\n                mode: \"cors\", // no-cors, *cors, same-origin\n                cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n                credentials: \"same-origin\", // include, *same-origin, omit\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                redirect: \"follow\", // manual, *follow, error\n                referrerPolicy: \"no-referrer\",\n            })\n                .then((response) => response.json())\n                .then((response) => {\n                    console.log(response);\n                    if (!response.success) {\n                        if (!response.result.isActive) switchToScreen(\"MembershipPage\", {});\n                    } else {\n                        if (response.result.isActive) switchToScreen(\"JobPost\", {});\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        }\n    }\n\n    return (\n        <View style={styles.bottomNavContainer}>\n            <AntDesign\n                name=\"home\"\n                style={styles.bottomNavIcons}\n                onPress={() => switchToScreen(\"EmployerScreen\", employerLoginData)}\n            />\n            <AntDesign\n                name=\"user\"\n                style={styles.bottomNavIcons}\n                onPress={() => switchToScreen(\"EmployerProfile1\", employerLoginData)}\n            />\n            <AntDesign\n                name=\"pluscircleo\"\n                style={styles.bottomNavIcons}\n                onPress={() => checkEmployerCredit()}\n            />\n            <AntDesign\n                name=\"staro\"\n                style={styles.bottomNavIcons}\n                onPress={() => switchToScreen(\"StarredCandidate\", employerLoginData)}\n            />\n            <Ionicons\n                name=\"md-more\"\n                style={styles.bottomNavIcons}\n                onPress={() => setSettingModalVisible(true)}\n            />\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    bottomNavContainer: {\n        flexDirection: \"row\",\n        height: \"100%\",\n        textAlign: \"center\",\n    },\n    bottomNavIcons: {\n        flex: 1,\n        fontSize: 30,\n        textAlign: \"center\",\n        alignSelf: \"center\",\n        color: \"#9E9E9E\",\n    },\n});\n\nexport default EmployerBottomNavigator;\n"]},"metadata":{},"sourceType":"module"}