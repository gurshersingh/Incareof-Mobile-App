{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\frontend\\\\src\\\\components\\\\employer\\\\ApplicantList.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Toast from \"react-native-root-toast\";\nimport EmployerSearchFilter from \"./EmployerSearchFilter\";\nimport EmployerBottomNavigator from \"./EmployerBottomNavigator\";\nimport EmployerFilterOverlay from \"./EmployerFilterOverlay\";\nimport UserContactOverlay from \"./UserContactOverlay\";\nimport EmployerSettingsOverlay from \"./EmployerSettingsOverlay\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport UserCard from \"./UserCard\";\n\nvar ApplicantList = function ApplicantList(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filterVisiblity = _useState4[0],\n      setFilterVisibility = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      settingModalVisible = _useState6[0],\n      setSettingModalVisible = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      employerLoginData = _useState8[0],\n      setEmployerLoginData = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      success = _useState10[0],\n      setSuccess = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      applicants = _useState12[0],\n      setApplicants = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      userRecord = _useState14[0],\n      setUserRecord = _useState14[1];\n\n  function switchToScreen(screen, params) {\n    props.navigation.navigate(screen, params);\n  }\n\n  useEffect(function () {\n    setApplicants(props.navigation.state.params);\n    return function () {};\n  }, []);\n  var phone_number = userRecord.phone_number;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.innerContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, React.createElement(EmployerSearchFilter, {\n    filterVisiblity: filterVisiblity,\n    setFilterVisibility: setFilterVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, applicants.length > 0 ? React.createElement(FlatList, {\n    showsVerticalScrollIndicator: false,\n    data: applicants,\n    keyExtractor: function keyExtractor(applicant) {\n      return applicant.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(UserCard, {\n        applicant: item,\n        setModalVisible: setModalVisible,\n        switchToScreen: switchToScreen,\n        setUserRecord: setUserRecord,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 41\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }) : React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 37\n    }\n  }, \"No applicant.\")))), React.createElement(View, {\n    style: styles.bottomNavigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(EmployerBottomNavigator, {\n    employerLoginData: employerLoginData,\n    setSettingModalVisible: setSettingModalVisible,\n    switchToScreen: switchToScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })), React.createElement(Toast, {\n    visible: success !== null && !success,\n    duration: Toast.durations.SHORT,\n    position: Toast.positions.BOTTOM,\n    backgroundColor: \"red\",\n    shadowColor: \"#dddddd\",\n    shadow: true,\n    animation: false,\n    hideOnPress: true,\n    onHidden: function onHidden() {\n      return setSuccess(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Something went wrong.\"), React.createElement(EmployerFilterOverlay, {\n    filterVisiblity: filterVisiblity,\n    setFilterVisibility: setFilterVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), React.createElement(UserContactOverlay, {\n    mobile: phone_number,\n    modalVisible: modalVisible,\n    setModalVisible: setModalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), React.createElement(EmployerSettingsOverlay, {\n    switchToScreen: switchToScreen,\n    settingModalVisible: settingModalVisible,\n    setSettingModalVisible: setSettingModalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }));\n};\n\nApplicantList[\"navigationOptions\"] = function (screenProps) {\n  return {\n    title: \"Applicants\"\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    flex: 1,\n    width: null,\n    height: null\n  },\n  innerContainer: {\n    flex: 9.2\n  },\n  bottomNavigation: {\n    flex: 0.8,\n    backgroundColor: \"#dddddd\",\n    shadowColor: \"#dddddd\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8\n  },\n  loginText: {\n    color: \"black\",\n    fontSize: 30,\n    marginTop: 20,\n    marginLeft: 100\n  },\n  nextBtnText: {\n    color: \"black\",\n    fontSize: 20\n  },\n  loginBtn: {\n    width: \"20%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 550,\n    marginBottom: 100,\n    marginLeft: 300\n  }\n});\nexport default ApplicantList;","map":{"version":3,"sources":["D:/frontend/src/components/employer/ApplicantList.js"],"names":["React","useState","useEffect","Toast","EmployerSearchFilter","EmployerBottomNavigator","EmployerFilterOverlay","UserContactOverlay","EmployerSettingsOverlay","AsyncStorage","UserCard","ApplicantList","props","modalVisible","setModalVisible","filterVisiblity","setFilterVisibility","settingModalVisible","setSettingModalVisible","employerLoginData","setEmployerLoginData","success","setSuccess","applicants","setApplicants","userRecord","setUserRecord","switchToScreen","screen","params","navigation","navigate","state","phone_number","styles","container","innerContainer","flex","length","applicant","id","toString","item","bottomNavigation","durations","SHORT","positions","BOTTOM","screenProps","title","StyleSheet","create","flexDirection","width","height","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","loginText","color","fontSize","marginTop","marginLeft","nextBtnText","loginBtn","borderRadius","alignItems","justifyContent","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, SafeAreaView, FlatList } from 'react-native';\r\nimport Toast from \"react-native-root-toast\";\r\nimport EmployerSearchFilter from './EmployerSearchFilter';\r\nimport EmployerBottomNavigator from './EmployerBottomNavigator';\r\nimport EmployerFilterOverlay from './EmployerFilterOverlay';\r\nimport UserContactOverlay from './UserContactOverlay';\r\nimport EmployerSettingsOverlay from './EmployerSettingsOverlay';\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nimport UserCard from './UserCard';\r\n\r\nconst ApplicantList = (props) => {\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [filterVisiblity, setFilterVisibility] = useState(false);\r\n    const [settingModalVisible, setSettingModalVisible] = useState(false);\r\n    const [employerLoginData, setEmployerLoginData] = useState({});\r\n    const [success, setSuccess] = useState(null);\r\n    const [applicants, setApplicants] = useState([]);\r\n    const [userRecord, setUserRecord] = useState({});\r\n\r\n    function switchToScreen(screen, params) {\r\n        props.navigation.navigate(screen, params);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setApplicants(props.navigation.state.params)\r\n\r\n        return () => { }\r\n    }, [])\r\n\r\n    const { phone_number } = userRecord;\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.innerContainer}>\r\n                <EmployerSearchFilter\r\n                    filterVisiblity={filterVisiblity}\r\n                    setFilterVisibility={setFilterVisibility}\r\n                />\r\n                <SafeAreaView style={{ flex: 1 }}>\r\n                    {\r\n                        applicants.length > 0 ? (\r\n                            <FlatList\r\n                                showsVerticalScrollIndicator={false}\r\n                                data={applicants}\r\n                                keyExtractor={(applicant) => applicant.id.toString()}\r\n                                renderItem={({ item }) => {\r\n                                    return (\r\n                                        <UserCard\r\n                                            applicant={item}\r\n                                            setModalVisible={setModalVisible}\r\n                                            switchToScreen={switchToScreen}\r\n                                            setUserRecord={setUserRecord} />\r\n                                    );\r\n                                }}\r\n                            />\r\n                        ) : (\r\n                                <View style={styles.container}>\r\n                                    <Text>No applicant.</Text>\r\n                                </View>\r\n                            )\r\n                    }\r\n                </SafeAreaView>\r\n            </View>\r\n            <View style={styles.bottomNavigation}>\r\n                <EmployerBottomNavigator\r\n                    employerLoginData={employerLoginData}\r\n                    setSettingModalVisible={setSettingModalVisible}\r\n                    switchToScreen={switchToScreen}\r\n                />\r\n            </View>\r\n            <Toast\r\n                visible={success !== null && !success}\r\n                duration={Toast.durations.SHORT}\r\n                position={Toast.positions.BOTTOM}\r\n                backgroundColor=\"red\"\r\n                shadowColor=\"#dddddd\"\r\n                shadow={true}\r\n                animation={false}\r\n                hideOnPress={true}\r\n                onHidden={() => setSuccess(null)}\r\n            >\r\n                Something went wrong.\r\n            </Toast>\r\n            <EmployerFilterOverlay\r\n                filterVisiblity={filterVisiblity}\r\n                setFilterVisibility={setFilterVisibility}\r\n            />\r\n            <UserContactOverlay\r\n                mobile={phone_number}\r\n                modalVisible={modalVisible}\r\n                setModalVisible={setModalVisible}\r\n            />\r\n            <EmployerSettingsOverlay\r\n                switchToScreen={switchToScreen}\r\n                settingModalVisible={settingModalVisible}\r\n                setSettingModalVisible={setSettingModalVisible}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nApplicantList[\"navigationOptions\"] = (screenProps) => ({\r\n    title: \"Applicants\",\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: \"column\",\r\n        flex: 1,\r\n        width: null,\r\n        height: null,\r\n    },\r\n    innerContainer: {\r\n        flex: 9.2,\r\n    },\r\n    bottomNavigation: {\r\n        flex: 0.8,\r\n        backgroundColor: \"#dddddd\",\r\n        shadowColor: \"#dddddd\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 4,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 4.65,\r\n        elevation: 8,\r\n    },\r\n    loginText: {\r\n        color: \"black\",\r\n        fontSize: 30,\r\n        marginTop: 20,\r\n        marginLeft: 100,\r\n    },\r\n    nextBtnText: {\r\n        color: \"black\",\r\n        fontSize: 20,\r\n    },\r\n    loginBtn: {\r\n        width: \"20%\",\r\n        backgroundColor: \"#fb5b5a\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 550,\r\n        marginBottom: 100,\r\n        marginLeft: 300,\r\n    },\r\n})\r\n\r\nexport default ApplicantList;\r\n"]},"metadata":{},"sourceType":"module"}