{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\frontend\\\\src\\\\containers\\\\job_seeker\\\\JobAdditionalInfo.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CheckBox from \"@react-native-community/checkbox\";\nimport { baseUrl } from \"../../utils/constants\";\n\nvar JobAdditionalInfo = function (_React$Component) {\n  _inherits(JobAdditionalInfo, _React$Component);\n\n  var _super = _createSuper(JobAdditionalInfo);\n\n  function JobAdditionalInfo(props) {\n    var _this;\n\n    _classCallCheck(this, JobAdditionalInfo);\n\n    _this = _super.call(this, props);\n\n    _this.handleCity = function (city) {\n      _this.setState({\n        city: city\n      });\n    };\n\n    _this.handleSubmit = function () {\n      _this.setState({\n        isLoading: true\n      });\n\n      fetch(baseUrl + \"api/job-seeker/add-ctiy-services\", {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\",\n        body: JSON.stringify({\n          services: _this.state.services,\n          city: _this.state.city,\n          user_id: _this.props.navigation.getParam(\"user_id\")\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        console.log(response);\n        if (!response.success) throw new Error(response);else {\n          _this.props.navigation.navigate(\"JobUploadImage\", {\n            user_id: _this.props.navigation.getParam(\"user_id\")\n          });\n        }\n      }).catch(function (err) {\n        _this.setState({\n          success: false,\n          err: err,\n          isLoading: false\n        });\n      });\n    };\n\n    _this.handlePress = function (val) {\n      var arr = _this.state.services;\n\n      var isChecked = _this.state.checkedItems.get(val.id);\n\n      console.log(isChecked);\n      !isChecked ? arr.push(val.id) : arr.pop(val.id);\n\n      _this.setState({\n        services: arr,\n        checkedItems: _this.state.checkedItems.set(val.id, !isChecked)\n      }, function () {\n        console.log(_this.state.services);\n      });\n    };\n\n    _this.state = {\n      city: null,\n      services: [],\n      serviceList: [],\n      isLoading: false,\n      error: \"\",\n      success: true,\n      checkedItems: new Map()\n    };\n    return _this;\n  }\n\n  _createClass(JobAdditionalInfo, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      fetch(baseUrl + \"api/service/list\").then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        _this2.setState({\n          isLoading: false\n        });\n\n        if (!response.success) throw new Error(response);else {\n          response.result.map(function (key, index) {\n            _this2.setState({\n              checkedItems: _this2.state.checkedItems.set(key.id, false)\n            });\n          });\n\n          _this2.setState({\n            serviceList: response.result,\n            success: true\n          });\n        }\n      }).catch(function (err) {\n        _this2.setState({\n          isLoading: false,\n          success: true,\n          error: err\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.labelHeading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, \"Additional Information\")), React.createElement(View, {\n        style: styles.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, \"Select Services\")), React.createElement(View, {\n        style: styles.labelHeading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, this.state.serviceList.length > 0 ? this.state.serviceList.map(function (val, index) {\n        return React.createElement(View, {\n          style: styles.checkboxContainer,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 35\n          }\n        }, React.createElement(TouchableOpacity, {\n          key: val.id,\n          onPress: function onPress() {\n            _this3.handlePress(val);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 39\n          }\n        }, React.createElement(CheckBox, {\n          value: _this3.state.checkedItems.get(val.id),\n          name: val.id,\n          onChange: function onChange() {\n            _this3.handlePress(val);\n          },\n          style: styles.checkbox,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 43\n          }\n        }), React.createElement(Text, {\n          style: styles.label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 43\n          }\n        }, val.service_name)));\n      }) : null), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }\n      }, \"City\"), React.createElement(View, {\n        style: styles.firstnameText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        onChangeText: this.handleCity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }\n      }))), React.createElement(View, {\n        style: styles.loginBtn1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.nextBtnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return JobAdditionalInfo;\n}(React.Component);\n\nexport { JobAdditionalInfo as default };\nvar styles = StyleSheet.create({\n  nextBtnText: {\n    color: \"black\",\n    fontSize: 20\n  },\n  container: {\n    flex: 1,\n    alignItems: \"flex-start\",\n    justifyContent: \"center\"\n  },\n  label: {\n    margin: 8\n  },\n  labelHeading: {\n    marginTop: 25\n  },\n  checkboxContainer: {\n    flexDirection: \"row\",\n    marginBottom: 15,\n    alignContent: \"center\",\n    justifyContent: \"center\"\n  },\n  inputText: {\n    height: 30,\n    color: \"black\",\n    marginTop: -17,\n    marginLeft: -50\n  },\n  checkbox: {\n    alignSelf: \"center\"\n  },\n  loginText: {\n    color: \"black\",\n    fontSize: 30,\n    marginTop: 20,\n    marginLeft: 50\n  },\n  firstnameText: {\n    flexDirection: \"row\",\n    width: \"45%\",\n    backgroundColor: \"#64358D\",\n    borderRadius: 25,\n    height: 30,\n    marginTop: -40,\n    marginLeft: 160,\n    marginBottom: 10,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  loginBtn: {\n    width: \"20%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 150,\n    marginLeft: 285\n  },\n  loginBtn1: {\n    width: \"20%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 150,\n    marginLeft: 85\n  }\n});","map":{"version":3,"sources":["D:/frontend/src/containers/job_seeker/JobAdditionalInfo.js"],"names":["React","CheckBox","baseUrl","JobAdditionalInfo","props","handleCity","city","setState","handleSubmit","isLoading","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","services","state","user_id","navigation","getParam","then","response","json","console","log","success","Error","navigate","catch","err","handlePress","val","arr","isChecked","checkedItems","get","id","push","pop","set","serviceList","error","Map","result","map","key","index","styles","labelHeading","loginText","label","length","checkboxContainer","checkbox","service_name","firstnameText","inputText","loginBtn1","nextBtnText","Component","StyleSheet","create","color","fontSize","container","flex","alignItems","justifyContent","margin","marginTop","flexDirection","marginBottom","alignContent","height","marginLeft","alignSelf","width","backgroundColor","borderRadius","padding","loginBtn"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    ScrollView,\r\n    //Image,\r\n} from \"react-native\";\r\nimport CheckBox from \"@react-native-community/checkbox\";\r\n\r\nimport { baseUrl } from \"../../utils/constants\";\r\n\r\nexport default class JobAdditionalInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            city: null,\r\n            services: [],\r\n            serviceList: [],\r\n            isLoading: false,\r\n            error: \"\",\r\n            success: true,\r\n            checkedItems: new Map(),\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({ isLoading: true });\r\n        fetch(baseUrl + \"api/service/list\")\r\n            .then((response) => response.json())\r\n            .then((response) => {\r\n                this.setState({ isLoading: false });\r\n                if (!response.success) throw new Error(response);\r\n                else {\r\n                    response.result.map((key, index) => {\r\n                        this.setState({\r\n                            checkedItems: this.state.checkedItems.set(\r\n                                key.id,\r\n                                false\r\n                            ),\r\n                        });\r\n                    });\r\n                    this.setState({\r\n                        serviceList: response.result,\r\n                        success: true,\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    success: true,\r\n                    error: err,\r\n                });\r\n            });\r\n    }\r\n    handleCity = (city) => {\r\n        this.setState({ city });\r\n    };\r\n    handleSubmit = () => {\r\n        // this.props.navigation.navigate('UploadPic')\r\n        this.setState({ isLoading: true });\r\n        fetch(baseUrl + \"api/job-seeker/add-ctiy-services\", {\r\n            method: \"POST\",\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer\",\r\n            body: JSON.stringify({\r\n                services: this.state.services,\r\n                city: this.state.city,\r\n                user_id: this.props.navigation.getParam(\"user_id\"),\r\n            }),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((response) => {\r\n                console.log(response);\r\n                if (!response.success) throw new Error(response);\r\n                else {\r\n                    this.props.navigation.navigate(\"JobUploadImage\", {\r\n                        user_id: this.props.navigation.getParam(\"user_id\"),\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                this.setState({ success: false, err: err, isLoading: false });\r\n            });\r\n    };\r\n    handlePress = (val) => {\r\n        const arr = this.state.services;\r\n        const isChecked = this.state.checkedItems.get(val.id);\r\n        console.log(isChecked);\r\n        !isChecked ? arr.push(val.id) : arr.pop(val.id);\r\n        this.setState(\r\n            {\r\n                services: arr,\r\n                checkedItems: this.state.checkedItems.set(val.id, !isChecked),\r\n            },\r\n            () => {\r\n                console.log(this.state.services);\r\n            }\r\n        );\r\n    };\r\n    render() {\r\n        return (\r\n            <ScrollView>\r\n                <View style={styles.labelHeading}>\r\n                    <Text style={styles.loginText}>Additional Information</Text>\r\n                </View>\r\n                <View style={styles.label}>\r\n                    <Text style={styles.loginText}>Select Services</Text>\r\n                </View>\r\n                <View style={styles.labelHeading}>\r\n                    {this.state.serviceList.length > 0\r\n                        ? this.state.serviceList.map((val, index) => {\r\n                              return (\r\n                                  <View\r\n                                      style={styles.checkboxContainer}\r\n                                      key={index}\r\n                                  >\r\n                                      <TouchableOpacity\r\n                                          key={val.id}\r\n                                          onPress={() => {\r\n                                              this.handlePress(val);\r\n                                          }}\r\n                                      >\r\n                                          <CheckBox\r\n                                              value={this.state.checkedItems.get(\r\n                                                  val.id\r\n                                              )}\r\n                                              name={val.id}\r\n                                              onChange={() => {\r\n                                                  this.handlePress(val);\r\n                                              }}\r\n                                              style={styles.checkbox}\r\n                                          />\r\n                                          <Text style={styles.label}>\r\n                                              {val.service_name}\r\n                                          </Text>\r\n                                      </TouchableOpacity>\r\n                                  </View>\r\n                              );\r\n                          })\r\n                        : null}\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.loginText}>City</Text>\r\n                    <View style={styles.firstnameText}>\r\n                        <TextInput\r\n                            style={styles.inputText}\r\n                            onChangeText={this.handleCity}\r\n                        />\r\n                    </View>\r\n                </View>\r\n                <View style={styles.loginBtn1}>\r\n                    <TouchableOpacity onPress={this.handleSubmit}>\r\n                        <Text style={styles.nextBtnText}>Submit</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    nextBtnText: {\r\n        color: \"black\",\r\n        fontSize: 20,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"flex-start\",\r\n        justifyContent: \"center\",\r\n    },\r\n    label: {\r\n        margin: 8,\r\n    },\r\n    labelHeading: {\r\n        marginTop: 25,\r\n    },\r\n    checkboxContainer: {\r\n        flexDirection: \"row\",\r\n        marginBottom: 15,\r\n        alignContent: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    inputText: {\r\n        height: 30,\r\n        color: \"black\",\r\n        marginTop: -17,\r\n        marginLeft: -50,\r\n    },\r\n    checkbox: {\r\n        alignSelf: \"center\",\r\n    },\r\n    loginText: {\r\n        color: \"black\",\r\n        fontSize: 30,\r\n        marginTop: 20,\r\n        marginLeft: 50,\r\n    },\r\n    firstnameText: {\r\n        flexDirection: \"row\",\r\n        width: \"45%\",\r\n        backgroundColor: \"#64358D\",\r\n        borderRadius: 25,\r\n        height: 30,\r\n        marginTop: -40,\r\n        marginLeft: 160,\r\n        marginBottom: 10,\r\n\r\n        justifyContent: \"center\",\r\n        padding: 20,\r\n    },\r\n\r\n    loginBtn: {\r\n        width: \"20%\",\r\n        backgroundColor: \"#fb5b5a\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 150,\r\n        marginLeft: 285,\r\n    },\r\n    loginBtn1: {\r\n        width: \"20%\",\r\n        backgroundColor: \"#fb5b5a\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 150,\r\n        //marginBottom: 100,\r\n        marginLeft: 85,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}